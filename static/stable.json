[
  {
    "kind": "interface",
    "name": "ImportMeta",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 10,
      "col": 0
    },
    "jsDoc": {
      "doc": "Deno provides extra properties on `import.meta`.  These are included here\nto ensure that these are still available when using the Deno namespace in\nconjunction with other type libs, like `dom`."
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 12,
            "col": 2
          },
          "jsDoc": {
            "doc": "A string representation of the fully qualified module URL."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "main",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 23,
            "col": 2
          },
          "jsDoc": {
            "doc": "A flag that indicates if the current module is the main module that was\ncalled when starting the program under Deno.\n\n```ts\nif (import.meta.main) {\n  // this was loaded as the main module, maybe do some bootstrapping\n}\n```"
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "Performance",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 30,
      "col": 0
    },
    "jsDoc": {
      "doc": "Deno supports user timing Level 3 (see: https://w3c.github.io/user-timing)\nwhich is not widely supported yet in other runtimes.  These types are here\nso that these features are still available when using the Deno namespace\nin conjunction with other type libs, like `dom`."
    },
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "mark",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 32,
            "col": 2
          },
          "jsDoc": {
            "doc": "Stores a timestamp with the associated name (a \"mark\")."
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "markName",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "PerformanceMarkOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PerformanceMarkOptions"
                }
              }
            }
          ],
          "returnType": {
            "repr": "PerformanceMark",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PerformanceMark"
            }
          },
          "typeParams": []
        },
        {
          "name": "measure",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 36,
            "col": 2
          },
          "jsDoc": {
            "doc": "Stores the `DOMHighResTimeStamp` duration between two marks along with the\nassociated name (a \"measure\")."
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "measureName",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "PerformanceMeasureOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PerformanceMeasureOptions"
                }
              }
            }
          ],
          "returnType": {
            "repr": "PerformanceMeasure",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PerformanceMeasure"
            }
          },
          "typeParams": []
        }
      ],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "PerformanceMarkOptions",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 42,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "detail",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 45,
            "col": 2
          },
          "jsDoc": {
            "doc": "Metadata to be included in the mark."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "typeParams": []
        },
        {
          "name": "startTime",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 48,
            "col": 2
          },
          "jsDoc": {
            "doc": "Timestamp to be used as the mark time."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "PerformanceMeasureOptions",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 51,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "detail",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 54,
            "col": 2
          },
          "jsDoc": {
            "doc": "Metadata to be included in the measure."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "typeParams": []
        },
        {
          "name": "start",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 58,
            "col": 2
          },
          "jsDoc": {
            "doc": "Timestamp to be used as the start time or string to be used as start\nmark."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "duration",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 61,
            "col": 2
          },
          "jsDoc": {
            "doc": "Duration between the start and end times."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "end",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 64,
            "col": 2
          },
          "jsDoc": {
            "doc": "Timestamp to be used as the end time or string to be used as end mark."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "namespace",
    "name": "Deno",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 67,
      "col": 0
    },
    "namespaceDef": {
      "elements": [
        {
          "kind": "namespace",
          "name": "errors",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 69,
            "col": 2
          },
          "jsDoc": {
            "doc": "A set of error constructors that are raised by Deno APIs."
          },
          "namespaceDef": {
            "elements": [
              {
                "kind": "class",
                "name": "NotFound",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 70,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "PermissionDenied",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 71,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "ConnectionRefused",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 72,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "ConnectionReset",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 73,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "ConnectionAborted",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 74,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "NotConnected",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 75,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "AddrInUse",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 76,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "AddrNotAvailable",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 77,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "BrokenPipe",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 78,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "AlreadyExists",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 79,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "InvalidData",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 80,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "TimedOut",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 81,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "Interrupted",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 82,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "WriteZero",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 83,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "UnexpectedEof",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 84,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "BadResource",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 85,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "Http",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 86,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              },
              {
                "kind": "class",
                "name": "Busy",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 87,
                  "col": 4
                },
                "classDef": {
                  "isAbstract": false,
                  "constructors": [],
                  "properties": [],
                  "indexSignatures": [],
                  "methods": [],
                  "extends": "Error",
                  "implements": [],
                  "typeParams": [],
                  "superTypeParams": []
                }
              }
            ]
          }
        },
        {
          "kind": "variable",
          "name": "pid",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 91,
            "col": 2
          },
          "jsDoc": {
            "doc": "The current process id of the runtime."
          },
          "variableDef": {
            "tsType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "kind": "const"
          }
        },
        {
          "kind": "variable",
          "name": "ppid",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 96,
            "col": 2
          },
          "jsDoc": {
            "doc": "The pid of the current process's parent."
          },
          "variableDef": {
            "tsType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "kind": "const"
          }
        },
        {
          "kind": "interface",
          "name": "MemoryUsage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 98,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "rss",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 99,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "heapTotal",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 100,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "heapUsed",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 101,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "external",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 102,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "memoryUsage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 109,
            "col": 2
          },
          "jsDoc": {
            "doc": "Returns an object describing the memory usage of the Deno process measured\nin bytes."
          },
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "MemoryUsage",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MemoryUsage"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "variable",
          "name": "noColor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 114,
            "col": 2
          },
          "jsDoc": {
            "doc": "Reflects the `NO_COLOR` environment variable at program start.\n\nSee: https://no-color.org/"
          },
          "variableDef": {
            "tsType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "kind": "const"
          }
        },
        {
          "kind": "interface",
          "name": "TestContext",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 117,
            "col": 2
          },
          "jsDoc": {
            "doc": "**UNSTABLE**: New option, yet to be vetted."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "TestDefinition",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 120,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "fn",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 121,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "void",
                          "kind": "keyword",
                          "keyword": "void"
                        },
                        {
                          "repr": "Promise",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "void",
                                "kind": "keyword",
                                "keyword": "void"
                              }
                            ],
                            "typeName": "Promise"
                          }
                        }
                      ]
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "t",
                        "optional": false,
                        "tsType": {
                          "repr": "TestContext",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "TestContext"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 122,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "ignore",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 123,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "only",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 126,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "If at least one test has `only` set to true, only run tests that have\n`only` set to true and fail the test suite."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "sanitizeOps",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 129,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Check that the number of async completed ops after the test is the same\nas number of dispatched ops. Defaults to true."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "sanitizeResources",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 133,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Ensure the test case does not \"leak\" resources - ie. the resource table\nafter the test has exactly the same contents as before the test. Defaults\nto true."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "sanitizeExit",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 136,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Ensure the test case does not prematurely cause the process to exit,\nfor example via a call to `Deno.exit`. Defaults to true."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "permissions",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 144,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Specifies the permissions that should be used to run the test.\nSet this to \"inherit\" to keep the calling thread's permissions.\nSet this to \"none\" to revoke all permissions.\n\nDefaults to \"inherit\"."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "inherit",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "inherit"
                      }
                    },
                    {
                      "repr": "none",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "none"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "env",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "inherit",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "inherit"
                                  }
                                },
                                {
                                  "repr": "boolean",
                                  "kind": "keyword",
                                  "keyword": "boolean"
                                },
                                {
                                  "repr": "",
                                  "kind": "array",
                                  "array": {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                }
                              ]
                            },
                            "typeParams": []
                          },
                          {
                            "name": "hrtime",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "inherit",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "inherit"
                                  }
                                },
                                {
                                  "repr": "boolean",
                                  "kind": "keyword",
                                  "keyword": "boolean"
                                }
                              ]
                            },
                            "typeParams": []
                          },
                          {
                            "name": "net",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "inherit",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "inherit"
                                  }
                                },
                                {
                                  "repr": "boolean",
                                  "kind": "keyword",
                                  "keyword": "boolean"
                                },
                                {
                                  "repr": "",
                                  "kind": "array",
                                  "array": {
                                    "repr": "string",
                                    "kind": "keyword",
                                    "keyword": "string"
                                  }
                                }
                              ]
                            },
                            "typeParams": []
                          },
                          {
                            "name": "ffi",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "inherit",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "inherit"
                                  }
                                },
                                {
                                  "repr": "boolean",
                                  "kind": "keyword",
                                  "keyword": "boolean"
                                },
                                {
                                  "repr": "Array",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": [
                                      {
                                        "repr": "",
                                        "kind": "union",
                                        "union": [
                                          {
                                            "repr": "string",
                                            "kind": "keyword",
                                            "keyword": "string"
                                          },
                                          {
                                            "repr": "URL",
                                            "kind": "typeRef",
                                            "typeRef": {
                                              "typeParams": null,
                                              "typeName": "URL"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "typeName": "Array"
                                  }
                                }
                              ]
                            },
                            "typeParams": []
                          },
                          {
                            "name": "read",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "inherit",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "inherit"
                                  }
                                },
                                {
                                  "repr": "boolean",
                                  "kind": "keyword",
                                  "keyword": "boolean"
                                },
                                {
                                  "repr": "Array",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": [
                                      {
                                        "repr": "",
                                        "kind": "union",
                                        "union": [
                                          {
                                            "repr": "string",
                                            "kind": "keyword",
                                            "keyword": "string"
                                          },
                                          {
                                            "repr": "URL",
                                            "kind": "typeRef",
                                            "typeRef": {
                                              "typeParams": null,
                                              "typeName": "URL"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "typeName": "Array"
                                  }
                                }
                              ]
                            },
                            "typeParams": []
                          },
                          {
                            "name": "run",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "inherit",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "inherit"
                                  }
                                },
                                {
                                  "repr": "boolean",
                                  "kind": "keyword",
                                  "keyword": "boolean"
                                },
                                {
                                  "repr": "Array",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": [
                                      {
                                        "repr": "",
                                        "kind": "union",
                                        "union": [
                                          {
                                            "repr": "string",
                                            "kind": "keyword",
                                            "keyword": "string"
                                          },
                                          {
                                            "repr": "URL",
                                            "kind": "typeRef",
                                            "typeRef": {
                                              "typeParams": null,
                                              "typeName": "URL"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "typeName": "Array"
                                  }
                                }
                              ]
                            },
                            "typeParams": []
                          },
                          {
                            "name": "write",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "inherit",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "inherit"
                                  }
                                },
                                {
                                  "repr": "boolean",
                                  "kind": "keyword",
                                  "keyword": "boolean"
                                },
                                {
                                  "repr": "Array",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": [
                                      {
                                        "repr": "",
                                        "kind": "union",
                                        "union": [
                                          {
                                            "repr": "string",
                                            "kind": "keyword",
                                            "keyword": "string"
                                          },
                                          {
                                            "repr": "URL",
                                            "kind": "typeRef",
                                            "typeRef": {
                                              "typeParams": null,
                                              "typeName": "URL"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "typeName": "Array"
                                  }
                                }
                              ]
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "test",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 309,
            "col": 2
          },
          "jsDoc": {
            "doc": "Register a test which will be run when `deno test` is used on the command\nline and the containing module looks like a test module.\n`fn` can be async if required.\n```ts\nimport {assert, fail, assertEquals} from \"https://deno.land/std/testing/asserts.ts\";\n\nDeno.test({\n  name: \"example test\",\n  fn(): void {\n    assertEquals(\"world\", \"world\");\n  },\n});\n\nDeno.test({\n  name: \"example ignored test\",\n  ignore: Deno.build.os === \"windows\",\n  fn(): void {\n    // This test is ignored only on Windows machines\n  },\n});\n\nDeno.test({\n  name: \"example async test\",\n  async fn() {\n    const decoder = new TextDecoder(\"utf-8\");\n    const data = await Deno.readFile(\"hello_world.txt\");\n    assertEquals(decoder.decode(data), \"Hello world\");\n  }\n});\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "t",
                "optional": false,
                "tsType": {
                  "repr": "TestDefinition",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "TestDefinition"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "test",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 329,
            "col": 2
          },
          "jsDoc": {
            "doc": "Register a test which will be run when `deno test` is used on the command\nline and the containing module looks like a test module.\n`fn` can be async if required.\n\n```ts\nimport {assert, fail, assertEquals} from \"https://deno.land/std/testing/asserts.ts\";\n\nDeno.test(\"My test description\", ():void => {\n  assertEquals(\"hello\", \"hello\");\n});\n\nDeno.test(\"My async test description\", async ():Promise<void> => {\n  const decoder = new TextDecoder(\"utf-8\");\n  const data = await Deno.readFile(\"hello_world.txt\");\n  assertEquals(decoder.decode(data), \"Hello world\");\n});\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "void",
                          "kind": "keyword",
                          "keyword": "void"
                        },
                        {
                          "repr": "Promise",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "void",
                                "kind": "keyword",
                                "keyword": "void"
                              }
                            ],
                            "typeName": "Promise"
                          }
                        }
                      ]
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "t",
                        "optional": false,
                        "tsType": {
                          "repr": "TestContext",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "TestContext"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "exit",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 341,
            "col": 2
          },
          "jsDoc": {
            "doc": "Exit the Deno process with optional exit code. If no exit code is supplied\nthen Deno will exit with return code of 0.\n\n```ts\nDeno.exit(5);\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "code",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "never",
              "kind": "keyword",
              "keyword": "never"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "variable",
          "name": "env",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 343,
            "col": 2
          },
          "variableDef": {
            "tsType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [
                  {
                    "name": "get",
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      }
                    ],
                    "optional": false,
                    "returnType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        }
                      ]
                    },
                    "typeParams": []
                  },
                  {
                    "name": "set",
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      }
                    ],
                    "optional": false,
                    "returnType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "delete",
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      }
                    ],
                    "optional": false,
                    "returnType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "toObject",
                    "params": [],
                    "optional": false,
                    "returnType": {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [],
                        "callSignatures": [],
                        "indexSignatures": [
                          {
                            "readonly": false,
                            "params": [
                              {
                                "kind": "identifier",
                                "name": "index",
                                "optional": false,
                                "tsType": {
                                  "repr": "string",
                                  "kind": "keyword",
                                  "keyword": "string"
                                }
                              }
                            ],
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          }
                        ]
                      }
                    },
                    "typeParams": []
                  }
                ],
                "properties": [],
                "callSignatures": [],
                "indexSignatures": []
              }
            },
            "kind": "const"
          }
        },
        {
          "kind": "function",
          "name": "execPath",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 397,
            "col": 2
          },
          "jsDoc": {
            "doc": "Returns the path to the current deno executable.\n\n```ts\nconsole.log(Deno.execPath());  // e.g. \"/home/alice/.local/bin/deno\"\n```\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "chdir",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 414,
            "col": 2
          },
          "jsDoc": {
            "doc": "Change the current working directory to the specified path.\n\n```ts\nDeno.chdir(\"/home/userA\");\nDeno.chdir(\"../userB\");\nDeno.chdir(\"C:\\\\Program Files (x86)\\\\Java\");\n```\n\nThrows `Deno.errors.NotFound` if directory not found.\nThrows `Deno.errors.PermissionDenied` if the user does not have access\nrights\n\nRequires --allow-read."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "directory",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "cwd",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 430,
            "col": 2
          },
          "jsDoc": {
            "doc": "Return a string representing the current working directory.\n\nIf the current directory can be reached via multiple paths (due to symbolic\nlinks), `cwd()` may return any one of them.\n\n```ts\nconst currentWorkingDirectory = Deno.cwd();\n```\n\nThrows `Deno.errors.NotFound` if directory not available.\n\nRequires --allow-read"
          },
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "linkSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 440,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously creates `newpath` as a hard link to `oldpath`.\n\n```ts\nDeno.linkSync(\"old/name\", \"new/name\");\n```\n\nRequires `allow-read` and `allow-write` permissions."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "oldpath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "newpath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "link",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 450,
            "col": 2
          },
          "jsDoc": {
            "doc": "Creates `newpath` as a hard link to `oldpath`.\n\n```ts\nawait Deno.link(\"old/name\", \"new/name\");\n```\n\nRequires `allow-read` and `allow-write` permissions."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "oldpath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "newpath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "enum",
          "name": "SeekMode",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 452,
            "col": 2
          },
          "enumDef": {
            "members": [
              {
                "name": "Start"
              },
              {
                "name": "Current"
              },
              {
                "name": "End"
              }
            ]
          }
        },
        {
          "kind": "interface",
          "name": "Reader",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 458,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [
              {
                "name": "read",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 481,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Reads up to `p.byteLength` bytes into `p`. It resolves to the number of\nbytes read (`0` < `n` <= `p.byteLength`) and rejects if any error\nencountered. Even if `read()` resolves to `n` < `p.byteLength`, it may\nuse all of `p` as scratch space during the call. If some data is\navailable but not `p.byteLength` bytes, `read()` conventionally resolves\nto what is available instead of waiting for more.\n\nWhen `read()` encounters end-of-file condition, it resolves to EOF\n(`null`).\n\nWhen `read()` encounters an error, it rejects with an error.\n\nCallers should always process the `n` > `0` bytes returned before\nconsidering the EOF (`null`). Doing so correctly handles I/O errors that\nhappen after reading some bytes and also both of the allowed EOF\nbehaviors.\n\nImplementations should not retain a reference to `p`.\n\nUse iter() from https://deno.land/std/io/util.ts to turn a Reader into an\nAsyncIterator."
                },
                "optional": false,
                "params": [
                  {
                    "kind": "identifier",
                    "name": "p",
                    "optional": false,
                    "tsType": {
                      "repr": "Uint8Array",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Uint8Array"
                      }
                    }
                  }
                ],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "number",
                            "kind": "keyword",
                            "keyword": "number"
                          },
                          {
                            "repr": "null",
                            "kind": "keyword",
                            "keyword": "null"
                          }
                        ]
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              }
            ],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ReaderSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 484,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [
              {
                "name": "readSync",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 506,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Reads up to `p.byteLength` bytes into `p`. It resolves to the number\nof bytes read (`0` < `n` <= `p.byteLength`) and rejects if any error\nencountered. Even if `readSync()` returns `n` < `p.byteLength`, it may use\nall of `p` as scratch space during the call. If some data is available\nbut not `p.byteLength` bytes, `readSync()` conventionally returns what is\navailable instead of waiting for more.\n\nWhen `readSync()` encounters end-of-file condition, it returns EOF\n(`null`).\n\nWhen `readSync()` encounters an error, it throws with an error.\n\nCallers should always process the `n` > `0` bytes returned before\nconsidering the EOF (`null`). Doing so correctly handles I/O errors that happen\nafter reading some bytes and also both of the allowed EOF behaviors.\n\nImplementations should not retain a reference to `p`.\n\nUse iterSync() from https://deno.land/std/io/util.ts to turn a ReaderSync\ninto an Iterator."
                },
                "optional": false,
                "params": [
                  {
                    "kind": "identifier",
                    "name": "p",
                    "optional": false,
                    "tsType": {
                      "repr": "Uint8Array",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Uint8Array"
                      }
                    }
                  }
                ],
                "returnType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "Writer",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 509,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [
              {
                "name": "write",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 519,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Writes `p.byteLength` bytes from `p` to the underlying data stream. It\nresolves to the number of bytes written from `p` (`0` <= `n` <=\n`p.byteLength`) or reject with the error encountered that caused the\nwrite to stop early. `write()` must reject with a non-null error if\nwould resolve to `n` < `p.byteLength`. `write()` must not modify the\nslice data, even temporarily.\n\nImplementations should not retain a reference to `p`."
                },
                "optional": false,
                "params": [
                  {
                    "kind": "identifier",
                    "name": "p",
                    "optional": false,
                    "tsType": {
                      "repr": "Uint8Array",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Uint8Array"
                      }
                    }
                  }
                ],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              }
            ],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "WriterSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 522,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [
              {
                "name": "writeSync",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 532,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Writes `p.byteLength` bytes from `p` to the underlying data\nstream. It returns the number of bytes written from `p` (`0` <= `n`\n<= `p.byteLength`) and any error encountered that caused the write to\nstop early. `writeSync()` must throw a non-null error if it returns `n` <\n`p.byteLength`. `writeSync()` must not modify the slice data, even\ntemporarily.\n\nImplementations should not retain a reference to `p`."
                },
                "optional": false,
                "params": [
                  {
                    "kind": "identifier",
                    "name": "p",
                    "optional": false,
                    "tsType": {
                      "repr": "Uint8Array",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Uint8Array"
                      }
                    }
                  }
                ],
                "returnType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "Closer",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 535,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [
              {
                "name": "close",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 536,
                  "col": 4
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                },
                "typeParams": []
              }
            ],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "Seeker",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 539,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [
              {
                "name": "seek",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 551,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Seek sets the offset for the next `read()` or `write()` to offset,\ninterpreted according to `whence`: `Start` means relative to the\nstart of the file, `Current` means relative to the current offset,\nand `End` means relative to the end. Seek resolves to the new offset\nrelative to the start of the file.\n\nSeeking to an offset before the start of the file is an error. Seeking to\nany positive offset is legal, but the behavior of subsequent I/O\noperations on the underlying object is implementation-dependent.\nIt returns the number of cursor position."
                },
                "optional": false,
                "params": [
                  {
                    "kind": "identifier",
                    "name": "offset",
                    "optional": false,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  },
                  {
                    "kind": "identifier",
                    "name": "whence",
                    "optional": false,
                    "tsType": {
                      "repr": "SeekMode",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SeekMode"
                      }
                    }
                  }
                ],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              }
            ],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "SeekerSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 554,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [
              {
                "name": "seekSync",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 564,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Seek sets the offset for the next `readSync()` or `writeSync()` to\noffset, interpreted according to `whence`: `Start` means relative\nto the start of the file, `Current` means relative to the current\noffset, and `End` means relative to the end.\n\nSeeking to an offset before the start of the file is an error. Seeking to\nany positive offset is legal, but the behavior of subsequent I/O\noperations on the underlying object is implementation-dependent."
                },
                "optional": false,
                "params": [
                  {
                    "kind": "identifier",
                    "name": "offset",
                    "optional": false,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  },
                  {
                    "kind": "identifier",
                    "name": "whence",
                    "optional": false,
                    "tsType": {
                      "repr": "SeekMode",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SeekMode"
                      }
                    }
                  }
                ],
                "returnType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "copy",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 586,
            "col": 2
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated",
                "doc": "Use `copy` from https://deno.land/std/streams/conversion.ts\ninstead. `Deno.copy` will be removed in Deno 2.0.\n\nCopies from `src` to `dst` until either EOF (`null`) is read from `src` or\nan error occurs. It resolves to the number of bytes copied or rejects with\nthe first error encountered while copying.\n\n```ts\nconst source = await Deno.open(\"my_file.txt\");\nconst bytesCopied1 = await Deno.copy(source, Deno.stdout);\nconst destination = await Deno.create(\"my_file_2.txt\");\nconst bytesCopied2 = await Deno.copy(source, destination);\n```\n"
              },
              {
                "kind": "param",
                "name": "src",
                "doc": "The source to copy from"
              },
              {
                "kind": "param",
                "name": "dst",
                "doc": "The destination to copy to"
              },
              {
                "kind": "param",
                "name": "options",
                "doc": "Can be used to tune size of the buffer. Default size is 32kB"
              }
            ]
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "src",
                "optional": false,
                "tsType": {
                  "repr": "Reader",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Reader"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dst",
                "optional": false,
                "tsType": {
                  "repr": "Writer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Writer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "bufSize",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "iter",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 628,
            "col": 2
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated",
                "doc": "Use `iterateReader` from\nhttps://deno.land/std/streams/conversion.ts instead. `Deno.iter` will be\nremoved in Deno 2.0.\n\nTurns a Reader, `r`, into an async iterator.\n\n```ts\nlet f = await Deno.open(\"/etc/passwd\");\nfor await (const chunk of Deno.iter(f)) {\nconsole.log(chunk);\n}\nf.close();\n```\n\nSecond argument can be used to tune size of a buffer.\nDefault size of the buffer is 32kB.\n\n```ts\nlet f = await Deno.open(\"/etc/passwd\");\nconst iter = Deno.iter(f, {\nbufSize: 1024 * 1024\n});\nfor await (const chunk of iter) {\nconsole.log(chunk);\n}\nf.close();\n```\n\nIterator uses an internal buffer of fixed size for efficiency; it returns\na view on that buffer on each iteration. It is therefore caller's\nresponsibility to copy contents of the buffer if needed; otherwise the\nnext iteration will overwrite contents of previously returned chunk."
              }
            ]
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "r",
                "optional": false,
                "tsType": {
                  "repr": "Reader",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Reader"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "bufSize",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "AsyncIterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Uint8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8Array"
                    }
                  }
                ],
                "typeName": "AsyncIterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "iterSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 669,
            "col": 2
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated",
                "doc": "Use `iterateReaderSync` from\nhttps://deno.land/std/streams/conversion.ts instead. `Deno.iterSync` will\nbe removed in Deno 2.0.\n\nTurns a ReaderSync, `r`, into an iterator.\n\n```ts\nlet f = Deno.openSync(\"/etc/passwd\");\nfor (const chunk of Deno.iterSync(f)) {\nconsole.log(chunk);\n}\nf.close();\n```\n\nSecond argument can be used to tune size of a buffer.\nDefault size of the buffer is 32kB.\n\n```ts\nlet f = await Deno.open(\"/etc/passwd\");\nconst iter = Deno.iterSync(f, {\nbufSize: 1024 * 1024\n});\nfor (const chunk of iter) {\nconsole.log(chunk);\n}\nf.close();\n```\n\nIterator uses an internal buffer of fixed size for efficiency; it returns\na view on that buffer on each iteration. It is therefore caller's\nresponsibility to copy contents of the buffer if needed; otherwise the\nnext iteration will overwrite contents of previously returned chunk."
              }
            ]
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "r",
                "optional": false,
                "tsType": {
                  "repr": "ReaderSync",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ReaderSync"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "bufSize",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Uint8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8Array"
                    }
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "openSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 689,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously open a file and return an instance of `Deno.File`.  The\nfile does not need to previously exist if using the `create` or `createNew`\nopen options.  It is the callers responsibility to close the file when finished\nwith it.\n\n```ts\nconst file = Deno.openSync(\"/foo/bar.txt\", { read: true, write: true });\n// Do work with file\nDeno.close(file.rid);\n```\n\nRequires `allow-read` and/or `allow-write` permissions depending on options."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "OpenOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OpenOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "File",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "File"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "open",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 704,
            "col": 2
          },
          "jsDoc": {
            "doc": "Open a file and resolve to an instance of `Deno.File`.  The\nfile does not need to previously exist if using the `create` or `createNew`\nopen options.  It is the callers responsibility to close the file when finished\nwith it.\n\n```ts\nconst file = await Deno.open(\"/foo/bar.txt\", { read: true, write: true });\n// Do work with file\nDeno.close(file.rid);\n```\n\nRequires `allow-read` and/or `allow-write` permissions depending on options."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "OpenOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OpenOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "File",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "File"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "createSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 718,
            "col": 2
          },
          "jsDoc": {
            "doc": "Creates a file if none exists or truncates an existing file and returns\n an instance of `Deno.File`.\n\n```ts\nconst file = Deno.createSync(\"/foo/bar.txt\");\n```\n\nRequires `allow-read` and `allow-write` permissions."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "File",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "File"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "create",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 729,
            "col": 2
          },
          "jsDoc": {
            "doc": "Creates a file if none exists or truncates an existing file and resolves to\n an instance of `Deno.File`.\n\n```ts\nconst file = await Deno.create(\"/foo/bar.txt\");\n```\n\nRequires `allow-read` and `allow-write` permissions."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "File",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "File"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 753,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously read from a resource ID (`rid`) into an array buffer (`buffer`).\n\nReturns either the number of bytes read during the operation or EOF\n(`null`) if there was nothing more to read.\n\nIt is possible for a read to successfully return with `0` bytes. This does\nnot indicate EOF.\n\nThis function is one of the lowest level APIs and most users should not\nwork with this directly, but rather use Deno.readAllSync() instead.\n\n**It is not guaranteed that the full buffer will be read in a single call.**\n\n```ts\n// if \"/foo/bar.txt\" contains the text \"hello world\":\nconst file = Deno.openSync(\"/foo/bar.txt\");\nconst buf = new Uint8Array(100);\nconst numberOfBytesRead = Deno.readSync(file.rid, buf); // 11 bytes\nconst text = new TextDecoder().decode(buf);  // \"hello world\"\nDeno.close(file.rid);\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "buffer",
                "optional": false,
                "tsType": {
                  "repr": "Uint8Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint8Array"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "read",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 777,
            "col": 2
          },
          "jsDoc": {
            "doc": "Read from a resource ID (`rid`) into an array buffer (`buffer`).\n\nResolves to either the number of bytes read during the operation or EOF\n(`null`) if there was nothing more to read.\n\nIt is possible for a read to successfully return with `0` bytes. This does\nnot indicate EOF.\n\nThis function is one of the lowest level APIs and most users should not\nwork with this directly, but rather use Deno.readAll() instead.\n\n**It is not guaranteed that the full buffer will be read in a single call.**\n\n```ts\n// if \"/foo/bar.txt\" contains the text \"hello world\":\nconst file = await Deno.open(\"/foo/bar.txt\");\nconst buf = new Uint8Array(100);\nconst numberOfBytesRead = await Deno.read(file.rid, buf); // 11 bytes\nconst text = new TextDecoder().decode(buf);  // \"hello world\"\nDeno.close(file.rid);\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "buffer",
                "optional": false,
                "tsType": {
                  "repr": "Uint8Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint8Array"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      {
                        "repr": "null",
                        "kind": "keyword",
                        "keyword": "null"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "writeSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 797,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously write to the resource ID (`rid`) the contents of the array\nbuffer (`data`).\n\nReturns the number of bytes written.  This function is one of the lowest\nlevel APIs and most users should not work with this directly, but rather use\nDeno.writeAllSync() instead.\n\n**It is not guaranteed that the full buffer will be written in a single\ncall.**\n\n```ts\nconst encoder = new TextEncoder();\nconst data = encoder.encode(\"Hello world\");\nconst file = Deno.openSync(\"/foo/bar.txt\", {write: true});\nconst bytesWritten = Deno.writeSync(file.rid, data); // 11\nDeno.close(file.rid);\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "Uint8Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint8Array"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "write",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 816,
            "col": 2
          },
          "jsDoc": {
            "doc": "Write to the resource ID (`rid`) the contents of the array buffer (`data`).\n\nResolves to the number of bytes written.  This function is one of the lowest\nlevel APIs and most users should not work with this directly, but rather use\nDeno.writeAll() instead.\n\n**It is not guaranteed that the full buffer will be written in a single\ncall.**\n\n```ts\nconst encoder = new TextEncoder();\nconst data = encoder.encode(\"Hello world\");\nconst file = await Deno.open(\"/foo/bar.txt\", { write: true });\nconst bytesWritten = await Deno.write(file.rid, data); // 11\nDeno.close(file.rid);\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "Uint8Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint8Array"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "seekSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 849,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously seek a resource ID (`rid`) to the given `offset` under mode\ngiven by `whence`.  The new position within the resource (bytes from the\nstart) is returned.\n\n```ts\nconst file = Deno.openSync('hello.txt', {read: true, write: true, truncate: true, create: true});\nDeno.writeSync(file.rid, new TextEncoder().encode(\"Hello world\"));\n\n// advance cursor 6 bytes\nconst cursorPosition = Deno.seekSync(file.rid, 6, Deno.SeekMode.Start);\nconsole.log(cursorPosition);  // 6\nconst buf = new Uint8Array(100);\nfile.readSync(buf);\nconsole.log(new TextDecoder().decode(buf)); // \"world\"\n```\n\nThe seek modes work as follows:\n\n```ts\n// Given file.rid pointing to file with \"Hello world\", which is 11 bytes long:\nconst file = Deno.openSync('hello.txt', {read: true, write: true, truncate: true, create: true});\nDeno.writeSync(file.rid, new TextEncoder().encode(\"Hello world\"));\n\n// Seek 6 bytes from the start of the file\nconsole.log(Deno.seekSync(file.rid, 6, Deno.SeekMode.Start)); // \"6\"\n// Seek 2 more bytes from the current position\nconsole.log(Deno.seekSync(file.rid, 2, Deno.SeekMode.Current)); // \"8\"\n// Seek backwards 2 bytes from the end of the file\nconsole.log(Deno.seekSync(file.rid, -2, Deno.SeekMode.End)); // \"9\" (e.g. 11-2)\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "offset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "whence",
                "optional": false,
                "tsType": {
                  "repr": "SeekMode",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SeekMode"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "seek",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 886,
            "col": 2
          },
          "jsDoc": {
            "doc": "Seek a resource ID (`rid`) to the given `offset` under mode given by `whence`.\nThe call resolves to the new position within the resource (bytes from the start).\n\n```ts\n// Given file.rid pointing to file with \"Hello world\", which is 11 bytes long:\nconst file = await Deno.open('hello.txt', {read: true, write: true, truncate: true, create: true});\nawait Deno.write(file.rid, new TextEncoder().encode(\"Hello world\"));\n\n// advance cursor 6 bytes\nconst cursorPosition = await Deno.seek(file.rid, 6, Deno.SeekMode.Start);\nconsole.log(cursorPosition);  // 6\nconst buf = new Uint8Array(100);\nawait file.read(buf);\nconsole.log(new TextDecoder().decode(buf)); // \"world\"\n```\n\nThe seek modes work as follows:\n\n```ts\n// Given file.rid pointing to file with \"Hello world\", which is 11 bytes long:\nconst file = await Deno.open('hello.txt', {read: true, write: true, truncate: true, create: true});\nawait Deno.write(file.rid, new TextEncoder().encode(\"Hello world\"));\n\n// Seek 6 bytes from the start of the file\nconsole.log(await Deno.seek(file.rid, 6, Deno.SeekMode.Start)); // \"6\"\n// Seek 2 more bytes from the current position\nconsole.log(await Deno.seek(file.rid, 2, Deno.SeekMode.Current)); // \"8\"\n// Seek backwards 2 bytes from the end of the file\nconsole.log(await Deno.seek(file.rid, -2, Deno.SeekMode.End)); // \"9\" (e.g. 11-2)\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "offset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "whence",
                "optional": false,
                "tsType": {
                  "repr": "SeekMode",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SeekMode"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "fsyncSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 902,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously flushes any pending data and metadata operations of the given file stream to disk.\n ```ts\nconst file = Deno.openSync(\"my_file.txt\", { read: true, write: true, create: true });\nDeno.writeSync(file.rid, new TextEncoder().encode(\"Hello World\"));\nDeno.ftruncateSync(file.rid, 1);\nDeno.fsyncSync(file.rid);\nconsole.log(new TextDecoder().decode(Deno.readFileSync(\"my_file.txt\"))); // H\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "fsync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 914,
            "col": 2
          },
          "jsDoc": {
            "doc": "Flushes any pending data and metadata operations of the given file stream to disk.\n ```ts\nconst file = await Deno.open(\"my_file.txt\", { read: true, write: true, create: true });\nawait Deno.write(file.rid, new TextEncoder().encode(\"Hello World\"));\nawait Deno.ftruncate(file.rid, 1);\nawait Deno.fsync(file.rid);\nconsole.log(new TextDecoder().decode(await Deno.readFile(\"my_file.txt\"))); // H\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "fdatasyncSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 925,
            "col": 2
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "fdatasync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 936,
            "col": 2
          },
          "jsDoc": {
            "doc": "Flushes any pending data operations of the given file stream to disk.\n ```ts\nconst file = await Deno.open(\"my_file.txt\", { read: true, write: true, create: true });\nawait Deno.write(file.rid, new TextEncoder().encode(\"Hello World\"));\nawait Deno.fdatasync(file.rid);\nconsole.log(new TextDecoder().decode(await Deno.readFile(\"my_file.txt\"))); // Hello World\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "close",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 948,
            "col": 2
          },
          "jsDoc": {
            "doc": "Close the given resource ID (rid) which has been previously opened, such\nas via opening or creating a file.  Closing a file when you are finished\nwith it is important to avoid leaking resources.\n\n```ts\nconst file = await Deno.open(\"my_file.txt\");\n// do work with \"file\" object\nDeno.close(file.rid);\n````"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "class",
          "name": "File",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 951,
            "col": 2
          },
          "jsDoc": {
            "doc": "The Deno abstraction for reading and writing files."
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "accessibility": null,
                "name": "constructor",
                "params": [
                  {
                    "kind": "identifier",
                    "name": "rid",
                    "optional": false,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  }
                ],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 961,
                  "col": 4
                }
              }
            ],
            "properties": [
              {
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "rid",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 960,
                  "col": 4
                }
              }
            ],
            "indexSignatures": [],
            "methods": [
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "write",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "p",
                      "optional": false,
                      "tsType": {
                        "repr": "Uint8Array",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Uint8Array"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 962,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "writeSync",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "p",
                      "optional": false,
                      "tsType": {
                        "repr": "Uint8Array",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Uint8Array"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 963,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "truncate",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "len",
                      "optional": true,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "void",
                          "kind": "keyword",
                          "keyword": "void"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 964,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "truncateSync",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "len",
                      "optional": true,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 965,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "read",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "p",
                      "optional": false,
                      "tsType": {
                        "repr": "Uint8Array",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Uint8Array"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            {
                              "repr": "null",
                              "kind": "keyword",
                              "keyword": "null"
                            }
                          ]
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 966,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "readSync",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "p",
                      "optional": false,
                      "tsType": {
                        "repr": "Uint8Array",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Uint8Array"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      {
                        "repr": "null",
                        "kind": "keyword",
                        "keyword": "null"
                      }
                    ]
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 967,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "seek",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "offset",
                      "optional": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "whence",
                      "optional": false,
                      "tsType": {
                        "repr": "SeekMode",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "SeekMode"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 968,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "seekSync",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "offset",
                      "optional": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "whence",
                      "optional": false,
                      "tsType": {
                        "repr": "SeekMode",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "SeekMode"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 969,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "stat",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "FileInfo",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "FileInfo"
                          }
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 970,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "statSync",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "FileInfo",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "FileInfo"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 971,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "close",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 972,
                  "col": 4
                }
              }
            ],
            "extends": null,
            "implements": [
              {
                "repr": "Reader",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Reader"
                }
              },
              {
                "repr": "ReaderSync",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ReaderSync"
                }
              },
              {
                "repr": "Writer",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Writer"
                }
              },
              {
                "repr": "WriterSync",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "WriterSync"
                }
              },
              {
                "repr": "Seeker",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Seeker"
                }
              },
              {
                "repr": "SeekerSync",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "SeekerSync"
                }
              },
              {
                "repr": "Closer",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Closer"
                }
              }
            ],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "variable",
          "name": "stdin",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 976,
            "col": 2
          },
          "jsDoc": {
            "doc": "A handle for `stdin`."
          },
          "variableDef": {
            "tsType": {
              "repr": "",
              "kind": "intersection",
              "intersection": [
                {
                  "repr": "Reader",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Reader"
                  }
                },
                {
                  "repr": "ReaderSync",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ReaderSync"
                  }
                },
                {
                  "repr": "Closer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Closer"
                  }
                },
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "rid",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ]
            },
            "kind": "const"
          }
        },
        {
          "kind": "variable",
          "name": "stdout",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 978,
            "col": 2
          },
          "jsDoc": {
            "doc": "A handle for `stdout`."
          },
          "variableDef": {
            "tsType": {
              "repr": "",
              "kind": "intersection",
              "intersection": [
                {
                  "repr": "Writer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Writer"
                  }
                },
                {
                  "repr": "WriterSync",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WriterSync"
                  }
                },
                {
                  "repr": "Closer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Closer"
                  }
                },
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "rid",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ]
            },
            "kind": "const"
          }
        },
        {
          "kind": "variable",
          "name": "stderr",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 980,
            "col": 2
          },
          "jsDoc": {
            "doc": "A handle for `stderr`."
          },
          "variableDef": {
            "tsType": {
              "repr": "",
              "kind": "intersection",
              "intersection": [
                {
                  "repr": "Writer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Writer"
                  }
                },
                {
                  "repr": "WriterSync",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WriterSync"
                  }
                },
                {
                  "repr": "Closer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Closer"
                  }
                },
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "rid",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ]
            },
            "kind": "const"
          }
        },
        {
          "kind": "interface",
          "name": "OpenOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 982,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "read",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 985,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Sets the option for read access. This option, when `true`, means that the\nfile should be read-able if opened."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "write",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 990,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Sets the option for write access. This option, when `true`, means that\nthe file should be write-able if opened. If the file already exists,\nany write calls on it will overwrite its contents, by default without\ntruncating it."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "append",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 995,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Sets the option for the append mode. This option, when `true`, means that\nwrites will append to a file instead of overwriting previous contents.\nNote that setting `{ write: true, append: true }` has the same effect as\nsetting only `{ append: true }`."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "truncate",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1000,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Sets the option for truncating a previous file. If a file is\nsuccessfully opened with this option set it will truncate the file to `0`\nsize if it already exists. The file must be opened with write access\nfor truncate to work."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "create",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1004,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Sets the option to allow creating a new file, if one doesn't already\nexist at the specified path. Requires write or append access to be\nused."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "createNew",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1009,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Defaults to `false`. If set to `true`, no file, directory, or symlink is\nallowed to exist at the target location. Requires write or append\naccess to be used. When createNew is set to `true`, create and truncate\nare ignored."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mode",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1013,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Permissions to use if creating the file (defaults to `0o666`, before\nthe process's umask).\nIgnored on Windows."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ReadFileOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1016,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "signal",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1022,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "An abort signal to allow cancellation of the file read operation.\nIf the signal becomes aborted the readFile operation will be stopped\nand the promise returned will be rejected with an AbortError."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "AbortSignal",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AbortSignal"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "isatty",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1038,
            "col": 2
          },
          "jsDoc": {
            "doc": "Check if a given resource id (`rid`) is a TTY.\n\n```ts\n// This example is system and context specific\nconst nonTTYRid = Deno.openSync(\"my_file.txt\").rid;\nconst ttyRid = Deno.openSync(\"/dev/tty6\").rid;\nconsole.log(Deno.isatty(nonTTYRid)); // false\nconsole.log(Deno.isatty(ttyRid)); // true\nDeno.close(nonTTYRid);\nDeno.close(ttyRid);\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "class",
          "name": "Buffer",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1057,
            "col": 2
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated",
                "doc": "Use Buffer from https://deno.land/std/io/buffer.ts instead. Deno.Buffer will be removed in Deno 2.0.\n\nA variable-sized buffer of bytes with `read()` and `write()` methods.\n\nDeno.Buffer is almost always used with some I/O like files and sockets. It\nallows one to buffer up a download from a socket. Buffer grows and shrinks\nas necessary.\n\nDeno.Buffer is NOT the same thing as Node's Buffer. Node's Buffer was\ncreated in 2009 before JavaScript had the concept of ArrayBuffers. It's\nsimply a non-standard ArrayBuffer.\n\nArrayBuffer is a fixed memory allocation. Deno.Buffer is implemented on top\nof ArrayBuffer.\n\nBased on [Go Buffer](https://golang.org/pkg/bytes/#Buffer)."
              }
            ]
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "accessibility": null,
                "name": "constructor",
                "params": [
                  {
                    "kind": "identifier",
                    "name": "ab",
                    "optional": true,
                    "tsType": {
                      "repr": "ArrayBuffer",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ArrayBuffer"
                      }
                    }
                  }
                ],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1058,
                  "col": 4
                }
              }
            ],
            "properties": [
              {
                "jsDoc": {
                  "doc": "A read only number of bytes of the unread portion of the buffer."
                },
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "length",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1072,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "The read only capacity of the buffer's underlying byte slice, that is,\nthe total space allocated for the buffer's data."
                },
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "capacity",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1075,
                  "col": 4
                }
              }
            ],
            "indexSignatures": [],
            "methods": [
              {
                "jsDoc": {
                  "doc": "Returns a slice holding the unread portion of the buffer.\n\nThe slice is valid for use only until the next buffer modification (that\nis, only until the next call to a method like `read()`, `write()`,\n`reset()`, or `truncate()`). If `options.copy` is false the slice aliases the buffer content at\nleast until the next buffer modification, so immediate changes to the\nslice will affect the result of future reads.",
                  "tags": [
                    {
                      "kind": "param",
                      "name": "options",
                      "doc": "Defaults to `{ copy: true }`"
                    }
                  ]
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "bytes",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "options",
                      "optional": true,
                      "tsType": {
                        "repr": "",
                        "kind": "typeLiteral",
                        "typeLiteral": {
                          "methods": [],
                          "properties": [
                            {
                              "name": "copy",
                              "params": [],
                              "computed": false,
                              "optional": true,
                              "tsType": {
                                "repr": "boolean",
                                "kind": "keyword",
                                "keyword": "boolean"
                              },
                              "typeParams": []
                            }
                          ],
                          "callSignatures": [],
                          "indexSignatures": []
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Uint8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8Array"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1068,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Returns whether the unread portion of the buffer is empty."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "empty",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1070,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Discards all but the first `n` unread bytes from the buffer but\ncontinues to use the same allocated storage. It throws if `n` is\nnegative or greater than the length of the buffer."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "truncate",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "n",
                      "optional": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1079,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Resets the buffer to be empty, but it retains the underlying storage for\nuse by future writes. `.reset()` is the same as `.truncate(0)`."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "reset",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1082,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Reads the next `p.length` bytes from the buffer or until the buffer is\ndrained. Returns the number of bytes read. If the buffer has no data to\nreturn, the return is EOF (`null`)."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "readSync",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "p",
                      "optional": false,
                      "tsType": {
                        "repr": "Uint8Array",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Uint8Array"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      {
                        "repr": "null",
                        "kind": "keyword",
                        "keyword": "null"
                      }
                    ]
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1086,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Reads the next `p.length` bytes from the buffer or until the buffer is\ndrained. Resolves to the number of bytes read. If the buffer has no\ndata to return, resolves to EOF (`null`).\n\nNOTE: This methods reads bytes synchronously; it's provided for\ncompatibility with `Reader` interfaces."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "read",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "p",
                      "optional": false,
                      "tsType": {
                        "repr": "Uint8Array",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Uint8Array"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            {
                              "repr": "null",
                              "kind": "keyword",
                              "keyword": "null"
                            }
                          ]
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1094,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "writeSync",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "p",
                      "optional": false,
                      "tsType": {
                        "repr": "Uint8Array",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Uint8Array"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1095,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "NOTE: This methods writes bytes synchronously; it's provided for\ncompatibility with `Writer` interface."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "write",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "p",
                      "optional": false,
                      "tsType": {
                        "repr": "Uint8Array",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Uint8Array"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1098,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Grows the buffer's capacity, if necessary, to guarantee space for\nanother `n` bytes. After `.grow(n)`, at least `n` bytes can be written to\nthe buffer without another allocation. If `n` is negative, `.grow()` will\nthrow. If the buffer can't grow it will throw an error.\n\nBased on Go Lang's\n[Buffer.Grow](https://golang.org/pkg/bytes/#Buffer.Grow)."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "grow",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "n",
                      "optional": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1106,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Reads data from `r` until EOF (`null`) and appends it to the buffer,\ngrowing the buffer as needed. It resolves to the number of bytes read.\nIf the buffer becomes too large, `.readFrom()` will reject with an error.\n\nBased on Go Lang's\n[Buffer.ReadFrom](https://golang.org/pkg/bytes/#Buffer.ReadFrom)."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "readFrom",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "r",
                      "optional": false,
                      "tsType": {
                        "repr": "Reader",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Reader"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1113,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Reads data from `r` until EOF (`null`) and appends it to the buffer,\ngrowing the buffer as needed. It returns the number of bytes read. If the\nbuffer becomes too large, `.readFromSync()` will throw an error.\n\nBased on Go Lang's\n[Buffer.ReadFrom](https://golang.org/pkg/bytes/#Buffer.ReadFrom)."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "readFromSync",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "r",
                      "optional": false,
                      "tsType": {
                        "repr": "ReaderSync",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ReaderSync"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1120,
                  "col": 4
                }
              }
            ],
            "extends": null,
            "implements": [
              {
                "repr": "Reader",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Reader"
                }
              },
              {
                "repr": "ReaderSync",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ReaderSync"
                }
              },
              {
                "repr": "Writer",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Writer"
                }
              },
              {
                "repr": "WriterSync",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "WriterSync"
                }
              }
            ],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readAll",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1146,
            "col": 2
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated",
                "doc": "Use `readAll` from https://deno.land/std/streams/conversion.ts\ninstead. `Deno.readAll` will be removed in Deno 2.0.\n\nRead Reader `r` until EOF (`null`) and resolve to the content as\nUint8Array`.\n\n```ts\n// Example from stdin\nconst stdinContent = await Deno.readAll(Deno.stdin);\n\n// Example from file\nconst file = await Deno.open(\"my_file.txt\", {read: true});\nconst myFileContent = await Deno.readAll(file);\nDeno.close(file.rid);\n\n// Example from buffer\nconst myData = new Uint8Array(100);\n// ... fill myData array with data\nconst reader = new Deno.Buffer(myData.buffer as ArrayBuffer);\nconst bufferContent = await Deno.readAll(reader);\n```"
              }
            ]
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "r",
                "optional": false,
                "tsType": {
                  "repr": "Reader",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Reader"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Uint8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8Array"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readAllSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1172,
            "col": 2
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated",
                "doc": "Use `readAllSync` from\nhttps://deno.land/std/streams/conversion.ts instead. `Deno.readAllSync`\nwill be removed in Deno 2.0.\n\nSynchronously reads Reader `r` until EOF (`null`) and returns the content\nas `Uint8Array`.\n\n```ts\n// Example from stdin\nconst stdinContent = Deno.readAllSync(Deno.stdin);\n\n// Example from file\nconst file = Deno.openSync(\"my_file.txt\", {read: true});\nconst myFileContent = Deno.readAllSync(file);\nDeno.close(file.rid);\n\n// Example from buffer\nconst myData = new Uint8Array(100);\n// ... fill myData array with data\nconst reader = new Deno.Buffer(myData.buffer as ArrayBuffer);\nconst bufferContent = Deno.readAllSync(reader);\n```"
              }
            ]
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "r",
                "optional": false,
                "tsType": {
                  "repr": "ReaderSync",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ReaderSync"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Uint8Array",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Uint8Array"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "writeAll",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1202,
            "col": 2
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated",
                "doc": "Use `writeAll` from https://deno.land/std/streams/conversion.ts\ninstead. `Deno.writeAll` will be removed in Deno 2.0.\n\nWrite all the content of the array buffer (`arr`) to the writer (`w`).\n\n```ts\n// Example writing to stdout\nconst contentBytes = new TextEncoder().encode(\"Hello World\");\nawait Deno.writeAll(Deno.stdout, contentBytes);\n```\n\n```ts\n// Example writing to file\nconst contentBytes = new TextEncoder().encode(\"Hello World\");\nconst file = await Deno.open('test.file', {write: true});\nawait Deno.writeAll(file, contentBytes);\nDeno.close(file.rid);\n```\n\n```ts\n// Example writing to buffer\nconst contentBytes = new TextEncoder().encode(\"Hello World\");\nconst writer = new Deno.Buffer();\nawait Deno.writeAll(writer, contentBytes);\nconsole.log(writer.bytes().length);  // 11\n```"
              }
            ]
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "w",
                "optional": false,
                "tsType": {
                  "repr": "Writer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Writer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "arr",
                "optional": false,
                "tsType": {
                  "repr": "Uint8Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint8Array"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "writeAllSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1234,
            "col": 2
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated",
                "doc": "Use `writeAllSync` from\nhttps://deno.land/std/streams/conversion.ts instead. `Deno.writeAllSync`\nwill be removed in Deno 2.0.\n\nSynchronously write all the content of the array buffer (`arr`) to the\nwriter (`w`).\n\n```ts\n// Example writing to stdout\nconst contentBytes = new TextEncoder().encode(\"Hello World\");\nDeno.writeAllSync(Deno.stdout, contentBytes);\n```\n\n```ts\n// Example writing to file\nconst contentBytes = new TextEncoder().encode(\"Hello World\");\nconst file = Deno.openSync('test.file', {write: true});\nDeno.writeAllSync(file, contentBytes);\nDeno.close(file.rid);\n```\n\n```ts\n// Example writing to buffer\nconst contentBytes = new TextEncoder().encode(\"Hello World\");\nconst writer = new Deno.Buffer();\nDeno.writeAllSync(writer, contentBytes);\nconsole.log(writer.bytes().length);  // 11\n```"
              }
            ]
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "w",
                "optional": false,
                "tsType": {
                  "repr": "WriterSync",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WriterSync"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "arr",
                "optional": false,
                "tsType": {
                  "repr": "Uint8Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint8Array"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "MkdirOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1236,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "recursive",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1243,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Defaults to `false`. If set to `true`, means that any intermediate\ndirectories will also be created (as with the shell command `mkdir -p`).\nIntermediate directories are created with the same permissions.\nWhen recursive is set to `true`, succeeds silently (without changing any\npermissions) if a directory already exists at the path, or if the path\nis a symlink to an existing directory."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mode",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1247,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Permissions to use when creating the directory (defaults to `0o777`,\nbefore the process's umask).\nIgnored on Windows."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "mkdirSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1261,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously creates a new directory with the specified path.\n\n```ts\nDeno.mkdirSync(\"new_dir\");\nDeno.mkdirSync(\"nested/directories\", { recursive: true });\nDeno.mkdirSync(\"restricted_access_dir\", { mode: 0o700 });\n```\n\nDefaults to throwing error if the directory already exists.\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "MkdirOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MkdirOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "mkdir",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1274,
            "col": 2
          },
          "jsDoc": {
            "doc": "Creates a new directory with the specified path.\n\n```ts\nawait Deno.mkdir(\"new_dir\");\nawait Deno.mkdir(\"nested/directories\", { recursive: true });\nawait Deno.mkdir(\"restricted_access_dir\", { mode: 0o700 });\n```\n\nDefaults to throwing error if the directory already exists.\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "MkdirOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MkdirOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "MakeTempOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1279,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "dir",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1286,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Directory where the temporary directory should be created (defaults to\nthe env variable TMPDIR, or the system's default, usually /tmp).\n\nNote that if the passed `dir` is relative, the path returned by\nmakeTempFile() and makeTempDir() will also be relative. Be mindful of\nthis when changing working directory."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "prefix",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1289,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "String that should precede the random portion of the temporary\ndirectory's name."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "suffix",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1292,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "String that should follow the random portion of the temporary\ndirectory's name."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "makeTempDirSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1313,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously creates a new temporary directory in the default directory\nfor temporary files, unless `dir` is specified. Other optional options\ninclude prefixing and suffixing the directory name with `prefix` and\n`suffix` respectively.\n\nThe full path to the newly created directory is returned.\n\nMultiple programs calling this function simultaneously will create different\ndirectories. It is the caller's responsibility to remove the directory when\nno longer needed.\n\n```ts\nconst tempDirName0 = Deno.makeTempDirSync();  // e.g. /tmp/2894ea76\nconst tempDirName1 = Deno.makeTempDirSync({ prefix: 'my_temp' });  // e.g. /tmp/my_temp339c944d\n```\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "MakeTempOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MakeTempOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "makeTempDir",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1333,
            "col": 2
          },
          "jsDoc": {
            "doc": "Creates a new temporary directory in the default directory for temporary\nfiles, unless `dir` is specified. Other optional options include\nprefixing and suffixing the directory name with `prefix` and `suffix`\nrespectively.\n\nThis call resolves to the full path to the newly created directory.\n\nMultiple programs calling this function simultaneously will create different\ndirectories. It is the caller's responsibility to remove the directory when\nno longer needed.\n\n```ts\nconst tempDirName0 = await Deno.makeTempDir();  // e.g. /tmp/2894ea76\nconst tempDirName1 = await Deno.makeTempDir({ prefix: 'my_temp' }); // e.g. /tmp/my_temp339c944d\n```\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "MakeTempOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MakeTempOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "makeTempFileSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1352,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously creates a new temporary file in the default directory for\ntemporary files, unless `dir` is specified.\nOther optional options include prefixing and suffixing the directory name\nwith `prefix` and `suffix` respectively.\n\nThe full path to the newly created file is returned.\n\nMultiple programs calling this function simultaneously will create different\nfiles. It is the caller's responsibility to remove the file when no longer\nneeded.\n\n```ts\nconst tempFileName0 = Deno.makeTempFileSync(); // e.g. /tmp/419e0bf2\nconst tempFileName1 = Deno.makeTempFileSync({ prefix: 'my_temp' });  // e.g. /tmp/my_temp754d3098\n```\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "MakeTempOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MakeTempOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "makeTempFile",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1371,
            "col": 2
          },
          "jsDoc": {
            "doc": "Creates a new temporary file in the default directory for temporary\nfiles, unless `dir` is specified.  Other\noptional options include prefixing and suffixing the directory name with\n`prefix` and `suffix` respectively.\n\nThis call resolves to the full path to the newly created file.\n\nMultiple programs calling this function simultaneously will create different\nfiles. It is the caller's responsibility to remove the file when no longer\nneeded.\n\n```ts\nconst tmpFileName0 = await Deno.makeTempFile();  // e.g. /tmp/419e0bf2\nconst tmpFileName1 = await Deno.makeTempFile({ prefix: 'my_temp' });  // e.g. /tmp/my_temp754d3098\n```\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "MakeTempOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MakeTempOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "chmodSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1385,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously changes the permission of a specific file/directory of\nspecified path.  Ignores the process's umask.\n\n```ts\nDeno.chmodSync(\"/path/to/file\", 0o666);\n```\n\nFor a full description, see [chmod](#Deno.chmod)\n\nNOTE: This API currently throws on Windows\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "mode",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "chmod",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1415,
            "col": 2
          },
          "jsDoc": {
            "doc": "Changes the permission of a specific file/directory of specified path.\nIgnores the process's umask.\n\n```ts\nawait Deno.chmod(\"/path/to/file\", 0o666);\n```\n\nThe mode is a sequence of 3 octal numbers.  The first/left-most number\nspecifies the permissions for the owner.  The second number specifies the\npermissions for the group. The last/right-most number specifies the\npermissions for others.  For example, with a mode of 0o764, the owner (7) can\nread/write/execute, the group (6) can read/write and everyone else (4) can\nread only.\n\n| Number | Description |\n| ------ | ----------- |\n| 7      | read, write, and execute |\n| 6      | read and write |\n| 5      | read and execute |\n| 4      | read only |\n| 3      | write and execute |\n| 2      | write only |\n| 1      | execute only |\n| 0      | no permission |\n\nNOTE: This API currently throws on Windows\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "mode",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "chownSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1432,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously change owner of a regular file or directory. This functionality\nis not available on Windows.\n\n```ts\nDeno.chownSync(\"myFile.txt\", 1000, 1002);\n```\n\nRequires `allow-write` permission.\n\nThrows Error (not implemented) if executed on Windows\n",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "path to the file"
              },
              {
                "kind": "param",
                "name": "uid",
                "doc": "user id (UID) of the new owner, or `null` for no change"
              },
              {
                "kind": "param",
                "name": "gid",
                "doc": "group id (GID) of the new owner, or `null` for no change"
              }
            ]
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "uid",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "gid",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "chown",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1453,
            "col": 2
          },
          "jsDoc": {
            "doc": "Change owner of a regular file or directory. This functionality\nis not available on Windows.\n\n```ts\nawait Deno.chown(\"myFile.txt\", 1000, 1002);\n```\n\nRequires `allow-write` permission.\n\nThrows Error (not implemented) if executed on Windows\n",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "path to the file"
              },
              {
                "kind": "param",
                "name": "uid",
                "doc": "user id (UID) of the new owner, or `null` for no change"
              },
              {
                "kind": "param",
                "name": "gid",
                "doc": "group id (GID) of the new owner, or `null` for no change"
              }
            ]
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "uid",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "gid",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "RemoveOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1459,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "recursive",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1462,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Defaults to `false`. If set to `true`, path will be removed even if\nit's a non-empty directory."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "removeSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1476,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously removes the named file or directory.\n\n```ts\nDeno.removeSync(\"/path/to/empty_dir/or/file\");\nDeno.removeSync(\"/path/to/populated_dir/or/file\", { recursive: true });\n```\n\nThrows error if permission denied, path not found, or path is a non-empty\ndirectory and the `recursive` option isn't set to `true`.\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "RemoveOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RemoveOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "remove",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1489,
            "col": 2
          },
          "jsDoc": {
            "doc": "Removes the named file or directory.\n\n```ts\nawait Deno.remove(\"/path/to/empty_dir/or/file\");\nawait Deno.remove(\"/path/to/populated_dir/or/file\", { recursive: true });\n```\n\nThrows error if permission denied, path not found, or path is a non-empty\ndirectory and the `recursive` option isn't set to `true`.\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "RemoveOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RemoveOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "renameSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1509,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously renames (moves) `oldpath` to `newpath`. Paths may be files or\ndirectories.  If `newpath` already exists and is not a directory,\n`renameSync()` replaces it. OS-specific restrictions may apply when\n`oldpath` and `newpath` are in different directories.\n\n```ts\nDeno.renameSync(\"old/path\", \"new/path\");\n```\n\nOn Unix, this operation does not follow symlinks at either path.\n\nIt varies between platforms when the operation throws errors, and if so what\nthey are. It's always an error to rename anything to a non-empty directory.\n\nRequires `allow-read` and `allow-write` permissions."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "oldpath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "newpath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "rename",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1529,
            "col": 2
          },
          "jsDoc": {
            "doc": "Renames (moves) `oldpath` to `newpath`.  Paths may be files or directories.\nIf `newpath` already exists and is not a directory, `rename()` replaces it.\nOS-specific restrictions may apply when `oldpath` and `newpath` are in\ndifferent directories.\n\n```ts\nawait Deno.rename(\"old/path\", \"new/path\");\n```\n\nOn Unix, this operation does not follow symlinks at either path.\n\nIt varies between platforms when the operation throws errors, and if so what\nthey are. It's always an error to rename anything to a non-empty directory.\n\nRequires `allow-read` and `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "oldpath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "newpath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readTextFileSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1543,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously reads and returns the entire contents of a file as utf8\n encoded string. Reading a directory throws an error.\n\n```ts\nconst data = Deno.readTextFileSync(\"hello.txt\");\nconsole.log(data);\n```\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readTextFile",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1554,
            "col": 2
          },
          "jsDoc": {
            "doc": "Asynchronously reads and returns the entire contents of a file as utf8\n encoded string. Reading a directory throws an error.\n\n```ts\nconst data = await Deno.readTextFile(\"hello.txt\");\nconsole.log(data);\n```\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ReadFileOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ReadFileOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readFileSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1570,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously reads and returns the entire contents of a file as an array\nof bytes. `TextDecoder` can be used to transform the bytes to string if\nrequired.  Reading a directory returns an empty data array.\n\n```ts\nconst decoder = new TextDecoder(\"utf-8\");\nconst data = Deno.readFileSync(\"hello.txt\");\nconsole.log(decoder.decode(data));\n```\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Uint8Array",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Uint8Array"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readFile",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1583,
            "col": 2
          },
          "jsDoc": {
            "doc": "Reads and resolves to the entire contents of a file as an array of bytes.\n`TextDecoder` can be used to transform the bytes to string if required.\nReading a directory returns an empty data array.\n\n```ts\nconst decoder = new TextDecoder(\"utf-8\");\nconst data = await Deno.readFile(\"hello.txt\");\nconsole.log(decoder.decode(data));\n```\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ReadFileOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ReadFileOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Uint8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8Array"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "FileInfo",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1590,
            "col": 2
          },
          "jsDoc": {
            "doc": "A FileInfo describes a file and is returned by `stat`, `lstat`,\n`statSync`, `lstatSync`."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "isFile",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1593,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "True if this is info for a regular file. Mutually exclusive to\n`FileInfo.isDirectory` and `FileInfo.isSymlink`."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "isDirectory",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1596,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "True if this is info for a regular directory. Mutually exclusive to\n`FileInfo.isFile` and `FileInfo.isSymlink`."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "isSymlink",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1599,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "True if this is info for a symlink. Mutually exclusive to\n`FileInfo.isFile` and `FileInfo.isDirectory`."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "size",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1601,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The size of the file, in bytes."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "mtime",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1605,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The last modification time of the file. This corresponds to the `mtime`\nfield from `stat` on Linux/Mac OS and `ftLastWriteTime` on Windows. This\nmay not be available on all platforms."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Date",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Date"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "atime",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1609,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The last access time of the file. This corresponds to the `atime`\nfield from `stat` on Unix and `ftLastAccessTime` on Windows. This may not\nbe available on all platforms."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Date",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Date"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "birthtime",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1613,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The creation time of the file. This corresponds to the `birthtime`\nfield from `stat` on Mac/BSD and `ftCreationTime` on Windows. This may\nnot be available on all platforms."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Date",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Date"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "dev",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1617,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "ID of the device containing the file.\n\n_Linux/Mac OS only._"
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "ino",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1621,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Inode number.\n\n_Linux/Mac OS only._"
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "mode",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1626,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "**UNSTABLE**: Match behavior with Go on Windows for `mode`.\n\nThe underlying raw `st_mode` bits that contain the standard Unix\npermissions for this file/directory."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "nlink",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1630,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Number of hard links pointing to this file.\n\n_Linux/Mac OS only._"
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "uid",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1634,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "User ID of the owner of this file.\n\n_Linux/Mac OS only._"
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "gid",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1638,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Group ID of the owner of this file.\n\n_Linux/Mac OS only._"
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "rdev",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1642,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Device ID of this file.\n\n_Linux/Mac OS only._"
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "blksize",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1646,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Blocksize for filesystem I/O.\n\n_Linux/Mac OS only._"
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "blocks",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1650,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Number of blocks allocated to the file, in 512-byte units.\n\n_Linux/Mac OS only._"
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "realPathSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1667,
            "col": 2
          },
          "jsDoc": {
            "doc": "Returns absolute normalized path, with symbolic links resolved.\n\n```ts\n// e.g. given /home/alice/file.txt and current directory /home/alice\nDeno.symlinkSync(\"file.txt\", \"symlink_file.txt\");\nconst realPath = Deno.realPathSync(\"./file.txt\");\nconst realSymLinkPath = Deno.realPathSync(\"./symlink_file.txt\");\nconsole.log(realPath);  // outputs \"/home/alice/file.txt\"\nconsole.log(realSymLinkPath);  // outputs \"/home/alice/file.txt\"\n```\n\nRequires `allow-read` permission for the target path.\nAlso requires `allow-read` permission for the CWD if the target path is\nrelative."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "realPath",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1683,
            "col": 2
          },
          "jsDoc": {
            "doc": "Resolves to the absolute normalized path, with symbolic links resolved.\n\n```ts\n// e.g. given /home/alice/file.txt and current directory /home/alice\nawait Deno.symlink(\"file.txt\", \"symlink_file.txt\");\nconst realPath = await Deno.realPath(\"./file.txt\");\nconst realSymLinkPath = await Deno.realPath(\"./symlink_file.txt\");\nconsole.log(realPath);  // outputs \"/home/alice/file.txt\"\nconsole.log(realSymLinkPath);  // outputs \"/home/alice/file.txt\"\n```\n\nRequires `allow-read` permission for the target path.\nAlso requires `allow-read` permission for the CWD if the target path is\nrelative."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "DirEntry",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1685,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1686,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "isFile",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1687,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "isDirectory",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1688,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "isSymlink",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1689,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readDirSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1704,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously reads the directory given by `path` and returns an iterable\nof `Deno.DirEntry`.\n\n```ts\nfor (const dirEntry of Deno.readDirSync(\"/\")) {\n  console.log(dirEntry.name);\n}\n```\n\nThrows error if `path` is not a directory.\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Iterable",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DirEntry",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DirEntry"
                    }
                  }
                ],
                "typeName": "Iterable"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readDir",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1718,
            "col": 2
          },
          "jsDoc": {
            "doc": "Reads the directory given by `path` and returns an async iterable of\n`Deno.DirEntry`.\n\n```ts\nfor await (const dirEntry of Deno.readDir(\"/\")) {\n  console.log(dirEntry.name);\n}\n```\n\nThrows error if `path` is not a directory.\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "AsyncIterable",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DirEntry",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DirEntry"
                    }
                  }
                ],
                "typeName": "AsyncIterable"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "copyFileSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1730,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously copies the contents and permissions of one file to another\nspecified path, by default creating a new file if needed, else overwriting.\nFails if target path is a directory or is unwritable.\n\n```ts\nDeno.copyFileSync(\"from.txt\", \"to.txt\");\n```\n\nRequires `allow-read` permission on fromPath.\nRequires `allow-write` permission on toPath."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fromPath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "toPath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "copyFile",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1745,
            "col": 2
          },
          "jsDoc": {
            "doc": "Copies the contents and permissions of one file to another specified path,\nby default creating a new file if needed, else overwriting. Fails if target\npath is a directory or is unwritable.\n\n```ts\nawait Deno.copyFile(\"from.txt\", \"to.txt\");\n```\n\nRequires `allow-read` permission on fromPath.\nRequires `allow-write` permission on toPath."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fromPath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "toPath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readLinkSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1760,
            "col": 2
          },
          "jsDoc": {
            "doc": "Returns the full path destination of the named symbolic link.\n\n```ts\nDeno.symlinkSync(\"./test.txt\", \"./test_link.txt\");\nconst target = Deno.readLinkSync(\"./test_link.txt\"); // full path of ./test.txt\n```\n\nThrows TypeError if called with a hard link\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "readLink",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1772,
            "col": 2
          },
          "jsDoc": {
            "doc": "Resolves to the full path destination of the named symbolic link.\n\n```ts\nawait Deno.symlink(\"./test.txt\", \"./test_link.txt\");\nconst target = await Deno.readLink(\"./test_link.txt\"); // full path of ./test.txt\n```\n\nThrows TypeError if called with a hard link\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "lstat",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1785,
            "col": 2
          },
          "jsDoc": {
            "doc": "Resolves to a `Deno.FileInfo` for the specified `path`. If `path` is a\nsymlink, information for the symlink will be returned instead of what it\npoints to.\n\n```ts\nimport { assert } from \"https://deno.land/std/testing/asserts.ts\";\nconst fileInfo = await Deno.lstat(\"hello.txt\");\nassert(fileInfo.isFile);\n```\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "FileInfo",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "FileInfo"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "lstatSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1798,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously returns a `Deno.FileInfo` for the specified `path`. If\n`path` is a symlink, information for the symlink will be returned instead of\nwhat it points to..\n\n```ts\nimport { assert } from \"https://deno.land/std/testing/asserts.ts\";\nconst fileInfo = Deno.lstatSync(\"hello.txt\");\nassert(fileInfo.isFile);\n```\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "FileInfo",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "FileInfo"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "stat",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1810,
            "col": 2
          },
          "jsDoc": {
            "doc": "Resolves to a `Deno.FileInfo` for the specified `path`. Will always\nfollow symlinks.\n\n```ts\nimport { assert } from \"https://deno.land/std/testing/asserts.ts\";\nconst fileInfo = await Deno.stat(\"hello.txt\");\nassert(fileInfo.isFile);\n```\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "FileInfo",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "FileInfo"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "statSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1822,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously returns a `Deno.FileInfo` for the specified `path`. Will\nalways follow symlinks.\n\n```ts\nimport { assert } from \"https://deno.land/std/testing/asserts.ts\";\nconst fileInfo = Deno.statSync(\"hello.txt\");\nassert(fileInfo.isFile);\n```\n\nRequires `allow-read` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "FileInfo",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "FileInfo"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "WriteFileOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1825,
            "col": 2
          },
          "jsDoc": {
            "doc": "Options for writing to a file."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "append",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1828,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Defaults to `false`. If set to `true`, will append to a file instead of\noverwriting previous contents."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "create",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1831,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Sets the option to allow creating a new file, if one doesn't already\nexist at the specified path (defaults to `true`)."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mode",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1833,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Permissions always applied to file."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "signal",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1839,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "An abort signal to allow cancellation of the file write operation.\nIf the signal becomes aborted the writeFile operation will be stopped\nand the promise returned will be rejected with an AbortError."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "AbortSignal",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AbortSignal"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "writeFileSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1857,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously write `data` to the given `path`, by default creating a new\nfile if needed, else overwriting.\n\n```ts\nconst encoder = new TextEncoder();\nconst data = encoder.encode(\"Hello world\\n\");\nDeno.writeFileSync(\"hello1.txt\", data);  // overwrite \"hello1.txt\" or create it\nDeno.writeFileSync(\"hello2.txt\", data, {create: false});  // only works if \"hello2.txt\" exists\nDeno.writeFileSync(\"hello3.txt\", data, {mode: 0o777});  // set permissions on new file\nDeno.writeFileSync(\"hello4.txt\", data, {append: true});  // add data to the end of the file\n```\n\nRequires `allow-write` permission, and `allow-read` if `options.create` is\n`false`."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "Uint8Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint8Array"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "WriteFileOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WriteFileOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "writeFile",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1877,
            "col": 2
          },
          "jsDoc": {
            "doc": "Write `data` to the given `path`, by default creating a new file if needed,\nelse overwriting.\n\n```ts\nconst encoder = new TextEncoder();\nconst data = encoder.encode(\"Hello world\\n\");\nawait Deno.writeFile(\"hello1.txt\", data);  // overwrite \"hello1.txt\" or create it\nawait Deno.writeFile(\"hello2.txt\", data, {create: false});  // only works if \"hello2.txt\" exists\nawait Deno.writeFile(\"hello3.txt\", data, {mode: 0o777});  // set permissions on new file\nawait Deno.writeFile(\"hello4.txt\", data, {append: true});  // add data to the end of the file\n```\n\nRequires `allow-write` permission, and `allow-read` if `options.create` is `false`."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "Uint8Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint8Array"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "WriteFileOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WriteFileOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "writeTextFileSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1892,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously write string `data` to the given `path`, by default creating a new file if needed,\nelse overwriting.\n\n```ts\nDeno.writeTextFileSync(\"hello1.txt\", \"Hello world\\n\");  // overwrite \"hello1.txt\" or create it\n```\n\nRequires `allow-write` permission, and `allow-read` if `options.create` is `false`."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "WriteFileOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WriteFileOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "writeTextFile",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1907,
            "col": 2
          },
          "jsDoc": {
            "doc": "Asynchronously write string `data` to the given `path`, by default creating a new file if needed,\nelse overwriting.\n\n```ts\nawait Deno.writeTextFile(\"hello1.txt\", \"Hello world\\n\");  // overwrite \"hello1.txt\" or create it\n```\n\nRequires `allow-write` permission, and `allow-read` if `options.create` is `false`."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "WriteFileOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WriteFileOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "truncateSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1930,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously truncates or extends the specified file, to reach the\nspecified `len`.  If `len` is not specified then the entire file contents\nare truncated.\n\n```ts\n// truncate the entire file\nDeno.truncateSync(\"my_file.txt\");\n\n// truncate part of the file\nconst file = Deno.makeTempFileSync();\nDeno.writeFileSync(file, new TextEncoder().encode(\"Hello World\"));\nDeno.truncateSync(file, 7);\nconst data = Deno.readFileSync(file);\nconsole.log(new TextDecoder().decode(data));\n```\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "len",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "truncate",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1948,
            "col": 2
          },
          "jsDoc": {
            "doc": "Truncates or extends the specified file, to reach the specified `len`. If\n`len` is not specified then the entire file contents are truncated.\n\n```ts\n// truncate the entire file\nawait Deno.truncate(\"my_file.txt\");\n\n// truncate part of the file\nconst file = await Deno.makeTempFile();\nawait Deno.writeFile(file, new TextEncoder().encode(\"Hello World\"));\nawait Deno.truncate(file, 7);\nconst data = await Deno.readFile(file);\nconsole.log(new TextDecoder().decode(data));  // \"Hello W\"\n```\n\nRequires `allow-write` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "len",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "OpMetrics",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1950,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "opsDispatched",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1951,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "opsDispatchedSync",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1952,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "opsDispatchedAsync",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1953,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "opsDispatchedAsyncUnref",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1954,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "opsCompleted",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1955,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "opsCompletedSync",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1956,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "opsCompletedAsync",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1957,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "opsCompletedAsyncUnref",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1958,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "bytesSentControl",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1959,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "bytesSentData",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1960,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "bytesReceived",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1961,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "Metrics",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1964,
            "col": 2
          },
          "interfaceDef": {
            "extends": [
              {
                "repr": "OpMetrics",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "OpMetrics"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "ops",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 1965,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Record",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "OpMetrics",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "OpMetrics"
                        }
                      }
                    ],
                    "typeName": "Record"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "metrics",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 1989,
            "col": 2
          },
          "jsDoc": {
            "doc": "Receive metrics from the privileged side of Deno. This is primarily used\nin the development of Deno. 'Ops', also called 'bindings', are the go-between\nbetween Deno JavaScript and Deno Rust.\n\n     > console.table(Deno.metrics())\n     ┌─────────────────────────┬────────┐\n     │         (index)         │ Values │\n     ├─────────────────────────┼────────┤\n     │      opsDispatched      │   3    │\n     │    opsDispatchedSync    │   2    │\n     │   opsDispatchedAsync    │   1    │\n     │ opsDispatchedAsyncUnref │   0    │\n     │      opsCompleted       │   3    │\n     │    opsCompletedSync     │   2    │\n     │    opsCompletedAsync    │   1    │\n     │ opsCompletedAsyncUnref  │   0    │\n     │    bytesSentControl     │   73   │\n     │      bytesSentData      │   0    │\n     │      bytesReceived      │  375   │\n     └─────────────────────────┴────────┘"
          },
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Metrics",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Metrics"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "resources",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2008,
            "col": 2
          },
          "jsDoc": {
            "doc": "Returns a map of open resource ids (rid) along with their string\nrepresentations. This is an internal API and as such resource\nrepresentation has `any` type; that means it can change any time.\n\n```ts\nconsole.log(Deno.resources());\n// { 0: \"stdin\", 1: \"stdout\", 2: \"stderr\" }\nDeno.openSync('../test.file');\nconsole.log(Deno.resources());\n// { 0: \"stdin\", 1: \"stdout\", 2: \"stderr\", 3: \"fsFile\" }\n```"
          },
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ResourceMap",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ResourceMap"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "FsEvent",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2010,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "kind",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2011,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "any",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "any"
                      }
                    },
                    {
                      "repr": "access",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "access"
                      }
                    },
                    {
                      "repr": "create",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "create"
                      }
                    },
                    {
                      "repr": "modify",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "modify"
                      }
                    },
                    {
                      "repr": "remove",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "remove"
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "paths",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2012,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "FsWatcher",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2021,
            "col": 2
          },
          "jsDoc": {
            "doc": "FsWatcher is returned by `Deno.watchFs` function when you start watching\nthe file system. You can iterate over this interface to get the file\nsystem events, and also you can stop watching the file system by calling\n`.close()` method."
          },
          "interfaceDef": {
            "extends": [
              {
                "repr": "AsyncIterable",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "FsEvent",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "FsEvent"
                      }
                    }
                  ],
                  "typeName": "AsyncIterable"
                }
              }
            ],
            "methods": [
              {
                "name": "close",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2025,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Stops watching the file system and closes the watcher resource."
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                },
                "typeParams": []
              },
              {
                "name": "return",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2030,
                  "col": 4
                },
                "jsDoc": {
                  "tags": [
                    {
                      "kind": "deprecated",
                      "doc": "Stops watching the file system and closes the watcher resource.\nWill be removed at 2.0."
                    }
                  ]
                },
                "optional": true,
                "params": [
                  {
                    "kind": "identifier",
                    "name": "value",
                    "optional": true,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    }
                  }
                ],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "IteratorResult",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": [
                            {
                              "repr": "FsEvent",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "FsEvent"
                              }
                            }
                          ],
                          "typeName": "IteratorResult"
                        }
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              },
              {
                "name": "[Symbol.asyncIterator]",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2031,
                  "col": 4
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "AsyncIterableIterator",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "FsEvent",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "FsEvent"
                        }
                      }
                    ],
                    "typeName": "AsyncIterableIterator"
                  }
                },
                "typeParams": []
              }
            ],
            "properties": [
              {
                "name": "rid",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2023,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The resource id of the `FsWatcher`."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "watchFs",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2066,
            "col": 2
          },
          "jsDoc": {
            "doc": "Watch for file system events against one or more `paths`, which can be files\nor directories.  These paths must exist already.  One user action (e.g.\n`touch test.file`) can  generate multiple file system events.  Likewise,\none user action can result in multiple file paths in one event (e.g. `mv\nold_name.txt new_name.txt`).  Recursive option is `true` by default and,\nfor directories, will watch the specified directory and all sub directories.\nNote that the exact ordering of the events can vary between operating systems.\n\n```ts\nconst watcher = Deno.watchFs(\"/\");\nfor await (const event of watcher) {\n   console.log(\">>>> event\", event);\n   // { kind: \"create\", paths: [ \"/foo.txt\" ] }\n}\n```\n\nRequires `allow-read` permission.\n\nCall `watcher.close()` to stop watching.\n\n```ts\nconst watcher = Deno.watchFs(\"/\");\n\nsetTimeout(() => {\n  watcher.close();\n}, 5000);\n\nfor await (const event of watcher) {\n   console.log(\">>>> event\", event);\n}\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "paths",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "recursive",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "FsWatcher",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "FsWatcher"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "class",
          "name": "Process",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2071,
            "col": 2
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [],
            "properties": [
              {
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "rid",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2072,
                  "col": 4
                }
              },
              {
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "pid",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2073,
                  "col": 4
                }
              },
              {
                "tsType": {
                  "repr": "",
                  "kind": "conditional",
                  "conditionalType": {
                    "checkType": {
                      "repr": "",
                      "kind": "indexedAccess",
                      "indexedAccess": {
                        "readonly": false,
                        "objType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        },
                        "indexType": {
                          "repr": "stdin",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "stdin"
                          }
                        }
                      }
                    },
                    "extendsType": {
                      "repr": "piped",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "piped"
                      }
                    },
                    "trueType": {
                      "repr": "",
                      "kind": "intersection",
                      "intersection": [
                        {
                          "repr": "Writer",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Writer"
                          }
                        },
                        {
                          "repr": "Closer",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Closer"
                          }
                        }
                      ]
                    },
                    "falseType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "",
                          "kind": "parenthesized",
                          "parenthesized": {
                            "repr": "",
                            "kind": "intersection",
                            "intersection": [
                              {
                                "repr": "Writer",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "Writer"
                                }
                              },
                              {
                                "repr": "Closer",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "Closer"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "repr": "null",
                          "kind": "keyword",
                          "keyword": "null"
                        }
                      ]
                    }
                  }
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "stdin",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2074,
                  "col": 4
                }
              },
              {
                "tsType": {
                  "repr": "",
                  "kind": "conditional",
                  "conditionalType": {
                    "checkType": {
                      "repr": "",
                      "kind": "indexedAccess",
                      "indexedAccess": {
                        "readonly": false,
                        "objType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        },
                        "indexType": {
                          "repr": "stdout",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "stdout"
                          }
                        }
                      }
                    },
                    "extendsType": {
                      "repr": "piped",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "piped"
                      }
                    },
                    "trueType": {
                      "repr": "",
                      "kind": "intersection",
                      "intersection": [
                        {
                          "repr": "Reader",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Reader"
                          }
                        },
                        {
                          "repr": "Closer",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Closer"
                          }
                        }
                      ]
                    },
                    "falseType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "",
                          "kind": "parenthesized",
                          "parenthesized": {
                            "repr": "",
                            "kind": "intersection",
                            "intersection": [
                              {
                                "repr": "Reader",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "Reader"
                                }
                              },
                              {
                                "repr": "Closer",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "Closer"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "repr": "null",
                          "kind": "keyword",
                          "keyword": "null"
                        }
                      ]
                    }
                  }
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "stdout",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2076,
                  "col": 4
                }
              },
              {
                "tsType": {
                  "repr": "",
                  "kind": "conditional",
                  "conditionalType": {
                    "checkType": {
                      "repr": "",
                      "kind": "indexedAccess",
                      "indexedAccess": {
                        "readonly": false,
                        "objType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        },
                        "indexType": {
                          "repr": "stderr",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "stderr"
                          }
                        }
                      }
                    },
                    "extendsType": {
                      "repr": "piped",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "piped"
                      }
                    },
                    "trueType": {
                      "repr": "",
                      "kind": "intersection",
                      "intersection": [
                        {
                          "repr": "Reader",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Reader"
                          }
                        },
                        {
                          "repr": "Closer",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Closer"
                          }
                        }
                      ]
                    },
                    "falseType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "",
                          "kind": "parenthesized",
                          "parenthesized": {
                            "repr": "",
                            "kind": "intersection",
                            "intersection": [
                              {
                                "repr": "Reader",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "Reader"
                                }
                              },
                              {
                                "repr": "Closer",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "Closer"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "repr": "null",
                          "kind": "keyword",
                          "keyword": "null"
                        }
                      ]
                    }
                  }
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "stderr",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2078,
                  "col": 4
                }
              }
            ],
            "indexSignatures": [],
            "methods": [
              {
                "jsDoc": {
                  "doc": "Wait for the process to exit and return its exit status.\n\nCalling this function multiple times will return the same status.\n\nStdin handle to the process will be closed before waiting to avoid\na deadlock.\n\nIf `stdout` and/or `stderr` were set to `\"piped\"`, they must be closed\nmanually before the process can exit.\n\nTo run process to completion and collect output from both `stdout` and\n`stderr` use:\n\n```ts\nconst p = Deno.run({ cmd: [ \"echo\", \"hello world\" ], stderr: 'piped', stdout: 'piped' });\nconst [status, stdout, stderr] = await Promise.all([\n  p.status(),\n  p.output(),\n  p.stderrOutput()\n]);\np.close();\n```"
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "status",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "ProcessStatus",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "ProcessStatus"
                          }
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2103,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Buffer the stdout until EOF and return it as `Uint8Array`.\n\nYou must set stdout to `\"piped\"` when creating the process.\n\nThis calls `close()` on stdout after its done."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "output",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Uint8Array",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Uint8Array"
                          }
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2109,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Buffer the stderr until EOF and return it as `Uint8Array`.\n\nYou must set stderr to `\"piped\"` when creating the process.\n\nThis calls `close()` on stderr after its done."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "stderrOutput",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "Uint8Array",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Uint8Array"
                          }
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2115,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "close",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2116,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Send a signal to process.\n\n```ts\nconst p = Deno.run({ cmd: [ \"sleep\", \"20\" ]});\np.kill(\"SIGTERM\");\np.close();\n```"
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "kill",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "signo",
                      "optional": false,
                      "tsType": {
                        "repr": "Signal",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Signal"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2126,
                  "col": 4
                }
              }
            ],
            "extends": null,
            "implements": [],
            "typeParams": [
              {
                "name": "T",
                "constraint": {
                  "repr": "RunOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RunOptions"
                  }
                },
                "default": {
                  "repr": "RunOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RunOptions"
                  }
                }
              }
            ],
            "superTypeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "Signal",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2129,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "SIGABRT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGABRT"
                  }
                },
                {
                  "repr": "SIGALRM",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGALRM"
                  }
                },
                {
                  "repr": "SIGBUS",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGBUS"
                  }
                },
                {
                  "repr": "SIGCHLD",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGCHLD"
                  }
                },
                {
                  "repr": "SIGCONT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGCONT"
                  }
                },
                {
                  "repr": "SIGEMT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGEMT"
                  }
                },
                {
                  "repr": "SIGFPE",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGFPE"
                  }
                },
                {
                  "repr": "SIGHUP",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGHUP"
                  }
                },
                {
                  "repr": "SIGILL",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGILL"
                  }
                },
                {
                  "repr": "SIGINFO",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGINFO"
                  }
                },
                {
                  "repr": "SIGINT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGINT"
                  }
                },
                {
                  "repr": "SIGIO",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGIO"
                  }
                },
                {
                  "repr": "SIGKILL",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGKILL"
                  }
                },
                {
                  "repr": "SIGPIPE",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGPIPE"
                  }
                },
                {
                  "repr": "SIGPROF",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGPROF"
                  }
                },
                {
                  "repr": "SIGPWR",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGPWR"
                  }
                },
                {
                  "repr": "SIGQUIT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGQUIT"
                  }
                },
                {
                  "repr": "SIGSEGV",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGSEGV"
                  }
                },
                {
                  "repr": "SIGSTKFLT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGSTKFLT"
                  }
                },
                {
                  "repr": "SIGSTOP",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGSTOP"
                  }
                },
                {
                  "repr": "SIGSYS",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGSYS"
                  }
                },
                {
                  "repr": "SIGTERM",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGTERM"
                  }
                },
                {
                  "repr": "SIGTRAP",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGTRAP"
                  }
                },
                {
                  "repr": "SIGTSTP",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGTSTP"
                  }
                },
                {
                  "repr": "SIGTTIN",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGTTIN"
                  }
                },
                {
                  "repr": "SIGTTOU",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGTTOU"
                  }
                },
                {
                  "repr": "SIGURG",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGURG"
                  }
                },
                {
                  "repr": "SIGUSR1",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGUSR1"
                  }
                },
                {
                  "repr": "SIGUSR2",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGUSR2"
                  }
                },
                {
                  "repr": "SIGVTALRM",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGVTALRM"
                  }
                },
                {
                  "repr": "SIGWINCH",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGWINCH"
                  }
                },
                {
                  "repr": "SIGXCPU",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGXCPU"
                  }
                },
                {
                  "repr": "SIGXFSZ",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SIGXFSZ"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "ProcessStatus",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2164,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "success",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "true",
                          "kind": "literal",
                          "literal": {
                            "kind": "boolean",
                            "boolean": true
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "code",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "0",
                          "kind": "literal",
                          "literal": {
                            "kind": "number",
                            "number": 0
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "signal",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "undefined",
                          "kind": "keyword",
                          "keyword": "undefined"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "success",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "false",
                          "kind": "literal",
                          "literal": {
                            "kind": "boolean",
                            "boolean": false
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "code",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "signal",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "RunOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2176,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "cmd",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2179,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Arguments to pass. Note, the first element needs to be a path to the\nbinary"
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "tuple",
                      "tuple": [
                        {
                          "repr": "URL",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "URL"
                          }
                        },
                        {
                          "repr": "",
                          "kind": "rest",
                          "rest": {
                            "repr": "",
                            "kind": "array",
                            "array": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "cwd",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2180,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "env",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2181,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [],
                    "callSignatures": [],
                    "indexSignatures": [
                      {
                        "readonly": false,
                        "params": [
                          {
                            "kind": "identifier",
                            "name": "key",
                            "optional": false,
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          }
                        ],
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      }
                    ]
                  }
                },
                "typeParams": []
              },
              {
                "name": "stdout",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2184,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "inherit",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "inherit"
                      }
                    },
                    {
                      "repr": "piped",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "piped"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "null"
                      }
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "stderr",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2185,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "inherit",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "inherit"
                      }
                    },
                    {
                      "repr": "piped",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "piped"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "null"
                      }
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "stdin",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2186,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "inherit",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "inherit"
                      }
                    },
                    {
                      "repr": "piped",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "piped"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "null"
                      }
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "run",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2231,
            "col": 2
          },
          "jsDoc": {
            "doc": "Spawns new subprocess.  RunOptions must contain at a minimum the `opt.cmd`,\nan array of program arguments, the first of which is the binary.\n\n```ts\nconst p = Deno.run({\n  cmd: [\"echo\", \"hello\"],\n});\n```\n\nSubprocess uses same working directory as parent process unless `opt.cwd`\nis specified.\n\nEnvironmental variables from parent process can be cleared using `opt.clearEnv`.\nDoesn't guarantee that only `opt.env` variables are present,\nas the OS may set environmental variables for processes.\n\nEnvironmental variables for subprocess can be specified using `opt.env`\nmapping.\n\n`opt.uid` sets the child process’s user ID. This translates to a setuid call\nin the child process. Failure in the setuid call will cause the spawn to fail.\n\n`opt.gid` is similar to `opt.uid`, but sets the group ID of the child process.\nThis has the same semantics as the uid field.\n\nBy default subprocess inherits stdio of parent process. To change that\n`opt.stdout`, `opt.stderr` and `opt.stdin` can be specified independently -\nthey can be set to either an rid of open file or set to \"inherit\" \"piped\"\nor \"null\":\n\n`\"inherit\"` The default if unspecified. The child inherits from the\ncorresponding parent descriptor.\n\n`\"piped\"` A new pipe should be arranged to connect the parent and child\nsub-processes.\n\n`\"null\"` This stream will be ignored. This is the equivalent of attaching\nthe stream to `/dev/null`.\n\nDetails of the spawned process are returned.\n\nRequires `allow-run` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "opt",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Process",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                ],
                "typeName": "Process"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T",
                "constraint": {
                  "repr": "RunOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RunOptions"
                  }
                },
                "default": {
                  "repr": "RunOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RunOptions"
                  }
                }
              }
            ]
          }
        },
        {
          "kind": "interface",
          "name": "InspectOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2233,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "colors",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2235,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Stylize output with ANSI colors. Defaults to false."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "compact",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2238,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Try to fit more than one entry of a collection on the same line.\nDefaults to true."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "depth",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2240,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Traversal depth for nested objects. Defaults to 4."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "iterableLimit",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2242,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The maximum number of iterable entries to print. Defaults to 100."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "showProxy",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2244,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Show a Proxy's target and handler. Defaults to false."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "sorted",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2246,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Sort Object, Set and Map entries by key. Defaults to false."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "trailingComma",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2248,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Add a trailing comma for multiline collections. Defaults to false."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "getters",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2250,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "* Evaluate the result of calling getters. Defaults to false."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "showHidden",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2252,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Show an object's non-enumerable properties. Defaults to false."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "inspect",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2289,
            "col": 2
          },
          "jsDoc": {
            "doc": "Converts the input into a string that has the same format as printed by\n`console.log()`.\n\n```ts\nconst obj = {\n  a: 10,\n  b: \"hello\",\n};\nconst objAsString = Deno.inspect(obj); // { a: 10, b: \"hello\" }\nconsole.log(obj);  // prints same value as objAsString, e.g. { a: 10, b: \"hello\" }\n```\n\nYou can also register custom inspect functions, via the symbol `Symbol.for(\"Deno.customInspect\")`,\non objects, to control and customize the output.\n\n```ts\nclass A {\n  x = 10;\n  y = \"hello\";\n  [Symbol.for(\"Deno.customInspect\")](): string {\n    return \"x=\" + this.x + \", y=\" + this.y;\n  }\n}\n\nconst inStringFormat = Deno.inspect(new A()); // \"x=10, y=hello\"\nconsole.log(inStringFormat);  // prints \"x=10, y=hello\"\n```\n\nFinally, you can also specify the depth to which it will format.\n\n```ts\nDeno.inspect({a: {b: {c: {d: 'hello'}}}}, {depth: 2}); // { a: { b: [Object] } }\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "InspectOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InspectOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "PermissionName",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2292,
            "col": 2
          },
          "jsDoc": {
            "doc": "The name of a \"powerful feature\" which needs permission."
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "run",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "run"
                  }
                },
                {
                  "repr": "read",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "read"
                  }
                },
                {
                  "repr": "write",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "write"
                  }
                },
                {
                  "repr": "net",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "net"
                  }
                },
                {
                  "repr": "env",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "env"
                  }
                },
                {
                  "repr": "ffi",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "ffi"
                  }
                },
                {
                  "repr": "hrtime",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "hrtime"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "PermissionState",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2302,
            "col": 2
          },
          "jsDoc": {
            "doc": "The current status of the permission."
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "granted",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "granted"
                  }
                },
                {
                  "repr": "denied",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "denied"
                  }
                },
                {
                  "repr": "prompt",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "prompt"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "RunPermissionDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2304,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2305,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "run",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "run"
                  }
                },
                "typeParams": []
              },
              {
                "name": "command",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2306,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ReadPermissionDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2309,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2310,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "read",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "read"
                  }
                },
                "typeParams": []
              },
              {
                "name": "path",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2311,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "WritePermissionDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2314,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2315,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "write",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "write"
                  }
                },
                "typeParams": []
              },
              {
                "name": "path",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2316,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "NetPermissionDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2319,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2320,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "net",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "net"
                  }
                },
                "typeParams": []
              },
              {
                "name": "host",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2326,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Optional host string of the form `\"<hostname>[:<port>]\"`. Examples:\n\n     \"github.com\"\n     \"deno.land:8080\""
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "EnvPermissionDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2329,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2330,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "env",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "env"
                  }
                },
                "typeParams": []
              },
              {
                "name": "variable",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2331,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "FfiPermissionDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2334,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2335,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "ffi",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "ffi"
                  }
                },
                "typeParams": []
              },
              {
                "name": "path",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2336,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "HrtimePermissionDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2339,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2340,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "hrtime",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "hrtime"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "PermissionDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2345,
            "col": 2
          },
          "jsDoc": {
            "doc": "Permission descriptors which define a permission and can be queried,\nrequested, or revoked."
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "RunPermissionDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RunPermissionDescriptor"
                  }
                },
                {
                  "repr": "ReadPermissionDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ReadPermissionDescriptor"
                  }
                },
                {
                  "repr": "WritePermissionDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WritePermissionDescriptor"
                  }
                },
                {
                  "repr": "NetPermissionDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "NetPermissionDescriptor"
                  }
                },
                {
                  "repr": "EnvPermissionDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EnvPermissionDescriptor"
                  }
                },
                {
                  "repr": "FfiPermissionDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "FfiPermissionDescriptor"
                  }
                },
                {
                  "repr": "HrtimePermissionDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "HrtimePermissionDescriptor"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "PermissionStatusEventMap",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2354,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "change",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2355,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Event",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Event"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "class",
          "name": "PermissionStatus",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2358,
            "col": 2
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [],
            "properties": [
              {
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "",
                      "kind": "parenthesized",
                      "parenthesized": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "any",
                            "kind": "keyword",
                            "keyword": "any"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "this",
                              "optional": false,
                              "tsType": {
                                "repr": "PermissionStatus",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "PermissionStatus"
                                }
                              }
                            },
                            {
                              "kind": "identifier",
                              "name": "ev",
                              "optional": false,
                              "tsType": {
                                "repr": "Event",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "Event"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "readonly": false,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "onchange",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2360,
                  "col": 4
                }
              },
              {
                "tsType": {
                  "repr": "PermissionState",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionState"
                  }
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "state",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2361,
                  "col": 4
                }
              }
            ],
            "indexSignatures": [],
            "methods": [
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "addEventListener",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "type",
                      "optional": false,
                      "tsType": {
                        "repr": "K",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "K"
                        }
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "listener",
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "any",
                            "kind": "keyword",
                            "keyword": "any"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "this",
                              "optional": false,
                              "tsType": {
                                "repr": "PermissionStatus",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "PermissionStatus"
                                }
                              }
                            },
                            {
                              "kind": "identifier",
                              "name": "ev",
                              "optional": false,
                              "tsType": {
                                "repr": "",
                                "kind": "indexedAccess",
                                "indexedAccess": {
                                  "readonly": false,
                                  "objType": {
                                    "repr": "PermissionStatusEventMap",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "PermissionStatusEventMap"
                                    }
                                  },
                                  "indexType": {
                                    "repr": "K",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "K"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "options",
                      "optional": true,
                      "tsType": {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "boolean",
                            "kind": "keyword",
                            "keyword": "boolean"
                          },
                          {
                            "repr": "AddEventListenerOptions",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "AddEventListenerOptions"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": [
                    {
                      "name": "K",
                      "constraint": {
                        "repr": "",
                        "kind": "typeOperator",
                        "typeOperator": {
                          "operator": "keyof",
                          "tsType": {
                            "repr": "PermissionStatusEventMap",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "PermissionStatusEventMap"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2362,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "addEventListener",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "type",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "listener",
                      "optional": false,
                      "tsType": {
                        "repr": "EventListenerOrEventListenerObject",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "EventListenerOrEventListenerObject"
                        }
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "options",
                      "optional": true,
                      "tsType": {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "boolean",
                            "kind": "keyword",
                            "keyword": "boolean"
                          },
                          {
                            "repr": "AddEventListenerOptions",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "AddEventListenerOptions"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2370,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "removeEventListener",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "type",
                      "optional": false,
                      "tsType": {
                        "repr": "K",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "K"
                        }
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "listener",
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "any",
                            "kind": "keyword",
                            "keyword": "any"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "this",
                              "optional": false,
                              "tsType": {
                                "repr": "PermissionStatus",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "PermissionStatus"
                                }
                              }
                            },
                            {
                              "kind": "identifier",
                              "name": "ev",
                              "optional": false,
                              "tsType": {
                                "repr": "",
                                "kind": "indexedAccess",
                                "indexedAccess": {
                                  "readonly": false,
                                  "objType": {
                                    "repr": "PermissionStatusEventMap",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "PermissionStatusEventMap"
                                    }
                                  },
                                  "indexType": {
                                    "repr": "K",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "K"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "options",
                      "optional": true,
                      "tsType": {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "boolean",
                            "kind": "keyword",
                            "keyword": "boolean"
                          },
                          {
                            "repr": "EventListenerOptions",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "EventListenerOptions"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": [
                    {
                      "name": "K",
                      "constraint": {
                        "repr": "",
                        "kind": "typeOperator",
                        "typeOperator": {
                          "operator": "keyof",
                          "tsType": {
                            "repr": "PermissionStatusEventMap",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "PermissionStatusEventMap"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2375,
                  "col": 4
                }
              },
              {
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "removeEventListener",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "type",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "listener",
                      "optional": false,
                      "tsType": {
                        "repr": "EventListenerOrEventListenerObject",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "EventListenerOrEventListenerObject"
                        }
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "options",
                      "optional": true,
                      "tsType": {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "boolean",
                            "kind": "keyword",
                            "keyword": "boolean"
                          },
                          {
                            "repr": "EventListenerOptions",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "EventListenerOptions"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2383,
                  "col": 4
                }
              }
            ],
            "extends": "EventTarget",
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "class",
          "name": "Permissions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2390,
            "col": 2
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [],
            "properties": [],
            "indexSignatures": [],
            "methods": [
              {
                "jsDoc": {
                  "doc": "Resolves to the current status of a permission.\n\n```ts\nconst status = await Deno.permissions.query({ name: \"read\", path: \"/etc\" });\nconsole.log(status.state);\n```"
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "query",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "desc",
                      "optional": false,
                      "tsType": {
                        "repr": "PermissionDescriptor",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "PermissionDescriptor"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "PermissionStatus",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "PermissionStatus"
                          }
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2398,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Revokes a permission, and resolves to the state of the permission.\n\n```ts\nimport { assert } from \"https://deno.land/std/testing/asserts.ts\";\n\nconst status = await Deno.permissions.revoke({ name: \"run\" });\nassert(status.state !== \"granted\")\n```"
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "revoke",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "desc",
                      "optional": false,
                      "tsType": {
                        "repr": "PermissionDescriptor",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "PermissionDescriptor"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "PermissionStatus",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "PermissionStatus"
                          }
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2409,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Requests the permission, and resolves to the state of the permission.\n\n```ts\nconst status = await Deno.permissions.request({ name: \"env\" });\nif (status.state === \"granted\") {\n  console.log(\"'env' permission is granted.\");\n} else {\n  console.log(\"'env' permission is denied.\");\n}\n```"
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "request",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "desc",
                      "optional": false,
                      "tsType": {
                        "repr": "PermissionDescriptor",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "PermissionDescriptor"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "Promise",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "PermissionStatus",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "PermissionStatus"
                          }
                        }
                      ],
                      "typeName": "Promise"
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2422,
                  "col": 4
                }
              }
            ],
            "extends": null,
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "variable",
          "name": "permissions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2426,
            "col": 2
          },
          "jsDoc": {
            "doc": "Deno's permission management API."
          },
          "variableDef": {
            "tsType": {
              "repr": "Permissions",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Permissions"
              }
            },
            "kind": "const"
          }
        },
        {
          "kind": "variable",
          "name": "build",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2429,
            "col": 2
          },
          "jsDoc": {
            "doc": "Build related information."
          },
          "variableDef": {
            "tsType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "target",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "arch",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "x86_64",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "x86_64"
                          }
                        },
                        {
                          "repr": "aarch64",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "aarch64"
                          }
                        }
                      ]
                    },
                    "typeParams": []
                  },
                  {
                    "name": "os",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "darwin",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "darwin"
                          }
                        },
                        {
                          "repr": "linux",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "linux"
                          }
                        },
                        {
                          "repr": "windows",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "windows"
                          }
                        }
                      ]
                    },
                    "typeParams": []
                  },
                  {
                    "name": "vendor",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "env",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            },
            "kind": "const"
          }
        },
        {
          "kind": "variable",
          "name": "version",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2443,
            "col": 2
          },
          "jsDoc": {
            "doc": "Version related information."
          },
          "variableDef": {
            "tsType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "deno",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "v8",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "typescript",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            },
            "kind": "const"
          }
        },
        {
          "kind": "variable",
          "name": "args",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2461,
            "col": 2
          },
          "jsDoc": {
            "doc": "Returns the script arguments to the program. If for example we run a\nprogram:\n\ndeno run --allow-read https://deno.land/std/examples/cat.ts /etc/passwd\n\nThen `Deno.args` will contain:\n\n[ \"/etc/passwd\" ]"
          },
          "variableDef": {
            "tsType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            "kind": "const"
          }
        },
        {
          "kind": "variable",
          "name": "customInspect",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2470,
            "col": 2
          },
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated",
                "doc": "A symbol which can be used as a key for a custom method which will be\ncalled when `Deno.inspect()` is called, or when the object is logged to\nthe console.\n\nThis symbol is deprecated since 1.9. Use `Symbol.for(\"Deno.customInspect\")` instead."
              }
            ]
          },
          "variableDef": {
            "tsType": {
              "repr": "",
              "kind": "typeOperator",
              "typeOperator": {
                "operator": "unique",
                "tsType": {
                  "repr": "symbol",
                  "kind": "keyword",
                  "keyword": "symbol"
                }
              }
            },
            "kind": "const"
          }
        },
        {
          "kind": "variable",
          "name": "mainModule",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2473,
            "col": 2
          },
          "jsDoc": {
            "doc": "The URL of the entrypoint module entered from the command-line."
          },
          "variableDef": {
            "tsType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "kind": "const"
          }
        },
        {
          "kind": "typeAlias",
          "name": "SymlinkOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2475,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "type",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "file",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "file"
                          }
                        },
                        {
                          "repr": "dir",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "dir"
                          }
                        }
                      ]
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            },
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "symlinkSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2490,
            "col": 2
          },
          "jsDoc": {
            "doc": "Creates `newpath` as a symbolic link to `oldpath`.\n\nThe options.type parameter can be set to `file` or `dir`. This argument is only\navailable on Windows and ignored on other platforms.\n\n```ts\nDeno.symlinkSync(\"old/name\", \"new/name\");\n```\n\nRequires full `allow-read` and `allow-write` permissions."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "oldpath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "newpath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "SymlinkOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SymlinkOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "symlink",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2507,
            "col": 2
          },
          "jsDoc": {
            "doc": "Creates `newpath` as a symbolic link to `oldpath`.\n\nThe options.type parameter can be set to `file` or `dir`. This argument is only\navailable on Windows and ignored on other platforms.\n\n```ts\nawait Deno.symlink(\"old/name\", \"new/name\");\n```\n\nRequires full `allow-read` and `allow-write` permissions."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "oldpath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "newpath",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "URL",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "SymlinkOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "SymlinkOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "ftruncateSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2540,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously truncates or extends the specified file stream, to reach the\nspecified `len`.\n\nIf `len` is not specified then the entire file contents are truncated as if len was set to 0.\n\nif the file previously was larger than this new length, the extra  data  is  lost.\n\nif  the  file  previously  was shorter, it is extended, and the extended part reads as null bytes ('\\0').\n\n```ts\n// truncate the entire file\nconst file = Deno.openSync(\"my_file.txt\", { read: true, write: true, truncate: true, create: true });\nDeno.ftruncateSync(file.rid);\n```\n\n```ts\n// truncate part of the file\nconst file = Deno.openSync(\"my_file.txt\", { read: true, write: true, create: true });\nDeno.writeSync(file.rid, new TextEncoder().encode(\"Hello World\"));\nDeno.ftruncateSync(file.rid, 7);\nDeno.seekSync(file.rid, 0, Deno.SeekMode.Start);\nconst data = new Uint8Array(32);\nDeno.readSync(file.rid, data);\nconsole.log(new TextDecoder().decode(data)); // Hello W\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "len",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "ftruncate",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2567,
            "col": 2
          },
          "jsDoc": {
            "doc": "Truncates or extends the specified file stream, to reach the specified `len`.\n\nIf `len` is not specified then the entire file contents are truncated as if len was set to 0.\n\nIf the file previously was larger than this new length, the extra  data  is  lost.\n\nIf  the  file  previously  was shorter, it is extended, and the extended part reads as null bytes ('\\0').\n\n```ts\n// truncate the entire file\nconst file = await Deno.open(\"my_file.txt\", { read: true, write: true, create: true });\nawait Deno.ftruncate(file.rid);\n```\n\n```ts\n// truncate part of the file\nconst file = await Deno.open(\"my_file.txt\", { read: true, write: true, create: true });\nawait Deno.write(file.rid, new TextEncoder().encode(\"Hello World\"));\nawait Deno.ftruncate(file.rid, 7);\nconst data = new Uint8Array(32);\nawait Deno.read(file.rid, data);\nconsole.log(new TextDecoder().decode(data)); // Hello W\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "len",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "fstatSync",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2579,
            "col": 2
          },
          "jsDoc": {
            "doc": "Synchronously returns a `Deno.FileInfo` for the given file stream.\n\n```ts\nimport { assert } from \"https://deno.land/std/testing/asserts.ts\";\nconst file = Deno.openSync(\"file.txt\", { read: true });\nconst fileInfo = Deno.fstatSync(file.rid);\nassert(fileInfo.isFile);\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "FileInfo",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "FileInfo"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "fstat",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2591,
            "col": 2
          },
          "jsDoc": {
            "doc": "Returns a `Deno.FileInfo` for the given file stream.\n\n```ts\nimport { assert } from \"https://deno.land/std/testing/asserts.ts\";\nconst file = await Deno.open(\"file.txt\", { read: true });\nconst fileInfo = await Deno.fstat(file.rid);\nassert(fileInfo.isFile);\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "FileInfo",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "FileInfo"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "RequestEvent",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2593,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [
              {
                "name": "respondWith",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2595,
                  "col": 4
                },
                "optional": false,
                "params": [
                  {
                    "kind": "identifier",
                    "name": "r",
                    "optional": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "Response",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Response"
                          }
                        },
                        {
                          "repr": "Promise",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "Response",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "Response"
                                }
                              }
                            ],
                            "typeName": "Promise"
                          }
                        }
                      ]
                    }
                  }
                ],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "void",
                        "kind": "keyword",
                        "keyword": "void"
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              }
            ],
            "properties": [
              {
                "name": "request",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2594,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Request",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Request"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "HttpConn",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2598,
            "col": 2
          },
          "interfaceDef": {
            "extends": [
              {
                "repr": "AsyncIterable",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "RequestEvent",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "RequestEvent"
                      }
                    }
                  ],
                  "typeName": "AsyncIterable"
                }
              }
            ],
            "methods": [
              {
                "name": "nextRequest",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2601,
                  "col": 4
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "RequestEvent",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "RequestEvent"
                            }
                          },
                          {
                            "repr": "null",
                            "kind": "keyword",
                            "keyword": "null"
                          }
                        ]
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              },
              {
                "name": "close",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2602,
                  "col": 4
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                },
                "typeParams": []
              }
            ],
            "properties": [
              {
                "name": "rid",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2599,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "serveHttp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2634,
            "col": 2
          },
          "jsDoc": {
            "doc": "Services HTTP requests given a TCP or TLS socket.\n\n```ts\nconst conn = await Deno.listen({ port: 80 });\nconst httpConn = Deno.serveHttp(await conn.accept());\nconst e = await httpConn.nextRequest();\nif (e) {\n  e.respondWith(new Response(\"Hello World\"));\n}\n```\n\nIf `httpConn.nextRequest()` encounters an error or returns `null`\nthen the underlying HttpConn resource is closed automatically.\n\nAlternatively, you can also use the Async Iterator approach:\n\n```ts\nasync function handleHttp(conn: Deno.Conn) {\n  for await (const e of Deno.serveHttp(conn)) {\n    e.respondWith(new Response(\"Hello World\"));\n  }\n}\n\nfor await (const conn of Deno.listen({ port: 80 })) {\n  handleHttp(conn);\n}\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "conn",
                "optional": false,
                "tsType": {
                  "repr": "Conn",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Conn"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "HttpConn",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "HttpConn"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "WebSocketUpgrade",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2636,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "response",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2637,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Response",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Response"
                  }
                },
                "typeParams": []
              },
              {
                "name": "socket",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2638,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "WebSocket",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocket"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "UpgradeWebSocketOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2641,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "protocol",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2642,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "upgradeWebSocket",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2677,
            "col": 2
          },
          "jsDoc": {
            "doc": "Used to upgrade an incoming HTTP request to a WebSocket.\n\nGiven a request, returns a pair of WebSocket and Response. The original\nrequest must be responded to with the returned response for the websocket\nupgrade to be successful.\n\n```ts\nconst conn = await Deno.listen({ port: 80 });\nconst httpConn = Deno.serveHttp(await conn.accept());\nconst e = await httpConn.nextRequest();\nif (e) {\n  const { socket, response } = Deno.upgradeWebSocket(e.request);\n  socket.onopen = () => {\n    socket.send(\"Hello World!\");\n  };\n  socket.onmessage = (e) => {\n    console.log(e.data);\n    socket.close();\n  };\n  socket.onclose = () => console.log(\"WebSocket has been closed.\");\n  socket.onerror = (e) => console.error(\"WebSocket error:\", e);\n  e.respondWith(response);\n}\n```\n\nIf the request body is disturbed (read from) before the upgrade is\ncompleted, upgrading fails.\n\nThis operation does not yet consume the request or open the websocket. This\nonly happens once the returned response has been passed to `respondWith`."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "request",
                "optional": false,
                "tsType": {
                  "repr": "Request",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Request"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "UpgradeWebSocketOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UpgradeWebSocketOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "WebSocketUpgrade",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "WebSocketUpgrade"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "kill",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2694,
            "col": 2
          },
          "jsDoc": {
            "doc": "Send a signal to process under given `pid`.\n\nIf `pid` is negative, the signal will be sent to the process group\nidentified by `pid`.\n\n     const p = Deno.run({\n       cmd: [\"sleep\", \"10000\"]\n     });\n\n     Deno.kill(p.pid, \"SIGINT\");\n\nRequires `allow-run` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "pid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "signo",
                "optional": false,
                "tsType": {
                  "repr": "Signal",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Signal"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "RecordType",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2698,
            "col": 2
          },
          "jsDoc": {
            "doc": "The type of the resource record.\nOnly the listed types are supported currently."
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "A",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "A"
                  }
                },
                {
                  "repr": "AAAA",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "AAAA"
                  }
                },
                {
                  "repr": "ANAME",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "ANAME"
                  }
                },
                {
                  "repr": "CNAME",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "CNAME"
                  }
                },
                {
                  "repr": "MX",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "MX"
                  }
                },
                {
                  "repr": "PTR",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "PTR"
                  }
                },
                {
                  "repr": "SRV",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SRV"
                  }
                },
                {
                  "repr": "TXT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "TXT"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ResolveDnsOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2708,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "nameServer",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2711,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The name server to be used for lookups.\nIf not specified, defaults to the system configuration e.g. `/etc/resolv.conf` on Unix."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "ipAddr",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "port",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "MXRecord",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2721,
            "col": 2
          },
          "jsDoc": {
            "doc": "If `resolveDns` is called with \"MX\" record type specified, it will return an array of this interface."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "preference",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2722,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "exchange",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2723,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "SRVRecord",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2727,
            "col": 2
          },
          "jsDoc": {
            "doc": "If `resolveDns` is called with \"SRV\" record type specified, it will return an array of this interface."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "priority",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2728,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "weight",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2729,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "port",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2730,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "target",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 2731,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "resolveDns",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2734,
            "col": 2
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "query",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "recordType",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "A",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "A"
                      }
                    },
                    {
                      "repr": "AAAA",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "AAAA"
                      }
                    },
                    {
                      "repr": "ANAME",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "ANAME"
                      }
                    },
                    {
                      "repr": "CNAME",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "CNAME"
                      }
                    },
                    {
                      "repr": "PTR",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "PTR"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ResolveDnsOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ResolveDnsOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "resolveDns",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2740,
            "col": 2
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "query",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "recordType",
                "optional": false,
                "tsType": {
                  "repr": "MX",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "MX"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ResolveDnsOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ResolveDnsOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "MXRecord",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MXRecord"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "resolveDns",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2746,
            "col": 2
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "query",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "recordType",
                "optional": false,
                "tsType": {
                  "repr": "SRV",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "SRV"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ResolveDnsOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ResolveDnsOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "SRVRecord",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SRVRecord"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "resolveDns",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2752,
            "col": 2
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "query",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "recordType",
                "optional": false,
                "tsType": {
                  "repr": "TXT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "TXT"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ResolveDnsOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ResolveDnsOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "resolveDns",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2775,
            "col": 2
          },
          "jsDoc": {
            "doc": "Performs DNS resolution against the given query, returning resolved records.\nFails in the cases such as:\n- the query is in invalid format\n- the options have an invalid parameter, e.g. `nameServer.port` is beyond the range of 16-bit unsigned integer\n- timed out\n\n```ts\nconst a = await Deno.resolveDns(\"example.com\", \"A\");\n\nconst aaaa = await Deno.resolveDns(\"example.com\", \"AAAA\", {\n  nameServer: { ipAddr: \"8.8.8.8\", port: 53 },\n});\n```\n\nRequires `allow-net` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "query",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "recordType",
                "optional": false,
                "tsType": {
                  "repr": "RecordType",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RecordType"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "ResolveDnsOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ResolveDnsOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "",
                        "kind": "array",
                        "array": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      },
                      {
                        "repr": "",
                        "kind": "array",
                        "array": {
                          "repr": "MXRecord",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "MXRecord"
                          }
                        }
                      },
                      {
                        "repr": "",
                        "kind": "array",
                        "array": {
                          "repr": "SRVRecord",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "SRVRecord"
                          }
                        }
                      },
                      {
                        "repr": "",
                        "kind": "array",
                        "array": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          }
                        }
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        }
      ]
    }
  },
  {
    "kind": "interface",
    "name": "Console",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 2789,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "assert",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2790,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "condition",
              "optional": true,
              "tsType": {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              }
            },
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "clear",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2791,
            "col": 2
          },
          "optional": false,
          "params": [],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "count",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2792,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "label",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "countReset",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2793,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "label",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "debug",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2794,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "dir",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2795,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "item",
              "optional": true,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            },
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "dirxml",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2796,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "error",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2797,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "group",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2798,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "groupCollapsed",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2799,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "groupEnd",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2800,
            "col": 2
          },
          "optional": false,
          "params": [],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "info",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2801,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "log",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2802,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "table",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2803,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "tabularData",
              "optional": true,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            },
            {
              "kind": "identifier",
              "name": "properties",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "time",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2804,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "label",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "timeEnd",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2805,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "label",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "timeLog",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2806,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "label",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "trace",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2807,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        },
        {
          "name": "warn",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2808,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "rest",
              "arg": {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": null
              },
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            }
          ],
          "returnType": {
            "repr": "void",
            "kind": "keyword",
            "keyword": "void"
          },
          "typeParams": []
        }
      ],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "URLSearchParams",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 2818,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "init",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  },
                  {
                    "repr": "Record",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      ],
                      "typeName": "Record"
                    }
                  },
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "URLSearchParams",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "URLSearchParams"
                    }
                  }
                ]
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2819,
            "col": 2
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2822,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Appends a specified key/value pair as a new search parameter.\n\n```ts\nlet searchParams = new URLSearchParams();\nsearchParams.append('name', 'first');\nsearchParams.append('name', 'second');\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "append",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2832,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Deletes the given search parameter and its associated value,\nfrom the list of all search parameters.\n\n```ts\nlet searchParams = new URLSearchParams([['name', 'value']]);\nsearchParams.delete('name');\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2842,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all the values associated with a given search parameter\nas an array.\n\n```ts\nsearchParams.getAll('name');\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAll",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2851,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the first value associated to the given search parameter.\n\n```ts\nsearchParams.get('name');\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2859,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a Boolean that indicates whether a parameter with the\nspecified name exists.\n\n```ts\nsearchParams.has('name');\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2868,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the value associated with a given search parameter to the\ngiven value. If there were several matching values, this method\ndeletes the others. If the search parameter doesn't exist, this\nmethod creates it.\n\n```ts\nsearchParams.set('name', 'value');\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2879,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sort all key/value pairs contained in this object in place and\nreturn undefined. The sort order is according to Unicode code\npoints of the keys.\n\n```ts\nsearchParams.sort();\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sort",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2889,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Calls a function for each element contained in this object in\nplace and return undefined. Optionally accepts an object to use\nas this when executing callback as second argument.\n\n```ts\nconst params = new URLSearchParams([[\"a\", \"b\"], [\"c\", \"d\"]]);\nparams.forEach((value, key, parent) => {\n  console.log(value, key, parent);\n});\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "forEach",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callbackfn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "parent",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2902,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an iterator allowing to go through all keys contained\nin this object.\n\n```ts\nconst params = new URLSearchParams([[\"a\", \"b\"], [\"c\", \"d\"]]);\nfor (const key of params.keys()) {\n  console.log(key);\n}\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "keys",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2917,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an iterator allowing to go through all values contained\nin this object.\n\n```ts\nconst params = new URLSearchParams([[\"a\", \"b\"], [\"c\", \"d\"]]);\nfor (const value of params.values()) {\n  console.log(value);\n}\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "values",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2929,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an iterator allowing to go through all key/value\npairs contained in this object.\n\n```ts\nconst params = new URLSearchParams([[\"a\", \"b\"], [\"c\", \"d\"]]);\nfor (const [key, value] of params.entries()) {\n  console.log(key, value);\n}\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "entries",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    ]
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2941,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an iterator allowing to go through all key/value\npairs contained in this object.\n\n```ts\nconst params = new URLSearchParams([[\"a\", \"b\"], [\"c\", \"d\"]]);\nfor (const [key, value] of params) {\n  console.log(key, value);\n}\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "[Symbol.iterator]",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    ]
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2953,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a query string suitable for use in a URL.\n\n```ts\nsearchParams.toString();\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2961,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "URL",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 2965,
      "col": 0
    },
    "jsDoc": {
      "doc": "The URL interface represents an object providing static methods used for creating object URLs."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "url",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "base",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "URL",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "URL"
                    }
                  }
                ]
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2966,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hash",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2970,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "host",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2971,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hostname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2972,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "href",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2973,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "origin",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2975,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "password",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2976,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pathname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2977,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "port",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2978,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "protocol",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2979,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "search",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2980,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "URLSearchParams",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLSearchParams"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "searchParams",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2981,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "username",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2982,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "createObjectURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "blob",
                "optional": false,
                "tsType": {
                  "repr": "Blob",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Blob"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2967,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "revokeObjectURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2968,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2974,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2983,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "URLPatternInit",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 2986,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "protocol",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2987,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "username",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2988,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "password",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2989,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "hostname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2990,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "port",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2991,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "pathname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2992,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "search",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2993,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "hash",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2994,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "baseURL",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 2995,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "URLPatternInput",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 2998,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          {
            "repr": "URLPatternInit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPatternInit"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "URLPatternComponentResult",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3000,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "input",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3001,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "groups",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3002,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "URLPatternResult",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3006,
      "col": 0
    },
    "jsDoc": {
      "doc": "`URLPatternResult` is the object returned from `URLPattern.exec`."
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "inputs",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3008,
            "col": 2
          },
          "jsDoc": {
            "doc": "The inputs provided when matching."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "URLPatternInit",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "URLPatternInit"
                    }
                  }
                ]
              },
              {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "URLPatternInit",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "URLPatternInit"
                    }
                  },
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ]
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "protocol",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3011,
            "col": 2
          },
          "jsDoc": {
            "doc": "The matched result for the `protocol` matcher."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPatternComponentResult",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPatternComponentResult"
            }
          },
          "typeParams": []
        },
        {
          "name": "username",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3013,
            "col": 2
          },
          "jsDoc": {
            "doc": "The matched result for the `username` matcher."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPatternComponentResult",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPatternComponentResult"
            }
          },
          "typeParams": []
        },
        {
          "name": "password",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3015,
            "col": 2
          },
          "jsDoc": {
            "doc": "The matched result for the `password` matcher."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPatternComponentResult",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPatternComponentResult"
            }
          },
          "typeParams": []
        },
        {
          "name": "hostname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3017,
            "col": 2
          },
          "jsDoc": {
            "doc": "The matched result for the `hostname` matcher."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPatternComponentResult",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPatternComponentResult"
            }
          },
          "typeParams": []
        },
        {
          "name": "port",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3019,
            "col": 2
          },
          "jsDoc": {
            "doc": "The matched result for the `port` matcher."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPatternComponentResult",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPatternComponentResult"
            }
          },
          "typeParams": []
        },
        {
          "name": "pathname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3021,
            "col": 2
          },
          "jsDoc": {
            "doc": "The matched result for the `pathname` matcher."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPatternComponentResult",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPatternComponentResult"
            }
          },
          "typeParams": []
        },
        {
          "name": "search",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3023,
            "col": 2
          },
          "jsDoc": {
            "doc": "The matched result for the `search` matcher."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPatternComponentResult",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPatternComponentResult"
            }
          },
          "typeParams": []
        },
        {
          "name": "hash",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3025,
            "col": 2
          },
          "jsDoc": {
            "doc": "The matched result for the `hash` matcher."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPatternComponentResult",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPatternComponentResult"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "URLPattern",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3056,
      "col": 0
    },
    "jsDoc": {
      "doc": "The URLPattern API provides a web platform primitive for matching URLs based\non a convenient pattern syntax.\n\nThe syntax is based on path-to-regexp. Wildcards, named capture groups,\nregular groups, and group modifiers are all supported.\n\n```ts\n// Specify the pattern as structured data.\nconst pattern = new URLPattern({ pathname: \"/users/:user\" });\nconst match = pattern.exec(\"/users/joe\");\nconsole.log(match.pathname.groups.user); // joe\n```\n\n```ts\n// Specify a fully qualified string pattern.\nconst pattern = new URLPattern(\"https://example.com/books/:id\");\nconsole.log(pattern.test(\"https://example.com/books/123\")); // true\nconsole.log(pattern.test(\"https://deno.land/books/123\")); // false\n```\n\n```ts\n// Specify a relative string pattern with a base URL.\nconst pattern = new URLPattern(\"/:article\", \"https://blog.example.com\");\nconsole.log(pattern.test(\"https://blog.example.com/article\")); // true\nconsole.log(pattern.test(\"https://blog.example.com/article/123\")); // false\n```"
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "input",
              "optional": false,
              "tsType": {
                "repr": "URLPatternInput",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "URLPatternInput"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "baseURL",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3057,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "The pattern string for the `protocol`."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "protocol",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3105,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "The pattern string for the `username`."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "username",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3107,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "The pattern string for the `password`."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "password",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3109,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "The pattern string for the `hostname`."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hostname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3111,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "The pattern string for the `port`."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "port",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3113,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "The pattern string for the `pathname`."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pathname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3115,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "The pattern string for the `search`."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "search",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3117,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "The pattern string for the `hash`."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hash",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3119,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Test if the given input matches the stored pattern.\n\nThe input can either be provided as a url string (with an optional base),\nor as individual components in the form of an object.\n\n```ts\nconst pattern = new URLPattern(\"https://example.com/books/:id\");\n\n// Test a url string.\nconsole.log(pattern.test(\"https://example.com/books/123\")); // true\n\n// Test a relative url with a base.\nconsole.log(pattern.test(\"/books/123\", \"https://example.com\")); // true\n\n// Test an object of url components.\nconsole.log(pattern.test({ pathname: \"/books/123\" })); // true\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "test",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "input",
                "optional": false,
                "tsType": {
                  "repr": "URLPatternInput",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "URLPatternInput"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "baseURL",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3078,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Match the given input against the stored pattern.\n\nThe input can either be provided as a url string (with an optional base),\nor as individual components in the form of an object.\n\n```ts\nconst pattern = new URLPattern(\"https://example.com/books/:id\");\n\n// Match a url string.\nlet match = pattern.exec(\"https://example.com/books/123\");\nconsole.log(match.pathname.groups.id); // 123\n\n// Match a relative url with a base.\nmatch = pattern.exec(\"/books/123\", \"https://example.com\");\nconsole.log(match.pathname.groups.id); // 123\n\n// Match an object of url components.\nmatch = pattern.exec({ pathname: \"/books/123\" });\nconsole.log(match.pathname.groups.id); // 123\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exec",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "input",
                "optional": false,
                "tsType": {
                  "repr": "URLPatternInput",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "URLPatternInput"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "baseURL",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "URLPatternResult",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "URLPatternResult"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3102,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DOMException",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3129,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "name",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3130,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3131,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3132,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3133,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Error",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Event",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3143,
      "col": 0
    },
    "jsDoc": {
      "doc": "An event which takes place in the DOM."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "eventInitDict",
              "optional": true,
              "tsType": {
                "repr": "EventInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EventInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3144,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Returns true or false depending on how event was initialized. True if\nevent goes through its target's ancestors in reverse tree order, and\nfalse otherwise."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bubbles",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3148,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cancelBubble",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3149,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true or false depending on how event was initialized. Its return\nvalue does not always carry meaning, but true can indicate that part of the\noperation during which event was dispatched, can be canceled by invoking\nthe preventDefault() method."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cancelable",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3154,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true or false depending on how event was initialized. True if\nevent invokes listeners past a ShadowRoot node that is the root of its\ntarget, and false otherwise."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "composed",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3158,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the object whose event listener's callback is currently being\ninvoked."
          },
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "EventTarget",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EventTarget"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "currentTarget",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3161,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if preventDefault() was invoked successfully to indicate\ncancellation, and false otherwise."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultPrevented",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3164,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the event's phase, which is one of NONE, CAPTURING_PHASE,\nAT_TARGET, and BUBBLING_PHASE."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "eventPhase",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3167,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if event was dispatched by the user agent, and false\notherwise."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isTrusted",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3170,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the object to which event is dispatched (its target)."
          },
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "EventTarget",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EventTarget"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "target",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3172,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the event's timestamp as the number of milliseconds measured\nrelative to the time origin."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timeStamp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3175,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\"."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3177,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "AT_TARGET",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3195,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "BUBBLING_PHASE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3196,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "CAPTURING_PHASE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3197,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "NONE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3198,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "AT_TARGET",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3199,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "BUBBLING_PHASE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3200,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "CAPTURING_PHASE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3201,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "NONE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3202,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Returns the invocation target objects of event's path (objects on which\nlisteners will be invoked), except for any nodes in shadow trees of which\nthe shadow root's mode is \"closed\" that are not reachable from event's\ncurrentTarget."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "composedPath",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "EventTarget",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EventTarget"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3182,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "If invoked when the cancelable attribute value is true, and while\nexecuting a listener for the event with passive set to false, signals to\nthe operation that caused event to be dispatched that it needs to be\ncanceled."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "preventDefault",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3187,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Invoking this method prevents event from reaching any registered event\nlisteners after the current one finishes running and, when dispatched in a\ntree, also prevents event from reaching any other objects."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "stopImmediatePropagation",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3191,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "When dispatched in a tree, invoking this method prevents event from\nreaching any objects other than the current object."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "stopPropagation",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3194,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "EventTarget",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3209,
      "col": 0
    },
    "jsDoc": {
      "doc": "EventTarget is a DOM interface implemented by objects that can receive events\nand may have listeners for them."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Appends an event listener for events whose type attribute value is type.\nThe callback argument sets the callback that will be invoked when the event\nis dispatched.\n\nThe options argument sets listener-specific options. For compatibility this\ncan be a boolean, in which case the method behaves exactly as if the value\nwas specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked\nwhen the event's eventPhase attribute value is BUBBLING_PHASE. When false\n(or not present), callback will not be invoked when event's eventPhase\nattribute value is CAPTURING_PHASE. Either way, callback will be invoked if\nevent's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not\ncancel the event by invoking preventDefault(). This is used to enable\nperformance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be\ninvoked once after which the event listener will be removed.\n\nThe event listener is appended to target's event listener list and is not\nappended if it has the same type, callback, and capture."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EventListenerOrEventListenerObject",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EventListenerOrEventListenerObject"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "AddEventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AddEventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3233,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Dispatches a synthetic event event to target and returns true if either\nevent's cancelable attribute value is false or its preventDefault() method\nwas not invoked, and false otherwise."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dispatchEvent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "Event",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Event"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3241,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the event listener in target's event listener list with the same\ntype, callback, and options."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "callback",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EventListenerOrEventListenerObject",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EventListenerOrEventListenerObject"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "EventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EventListenerOptions"
                      }
                    },
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3244,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "EventListenerOrEventListenerObject",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3259,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "EventListener",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EventListener"
            }
          },
          {
            "repr": "EventListenerObject",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EventListenerObject"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ProgressEvent",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3281,
      "col": 0
    },
    "jsDoc": {
      "doc": "Events measuring progress of an underlying process, like an HTTP request\n(for an XMLHttpRequest, or the loading of the underlying resource of an\n<img>, <audio>, <video>, <style> or <link>)."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "eventInitDict",
              "optional": true,
              "tsType": {
                "repr": "ProgressEventInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ProgressEventInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3282,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lengthComputable",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3283,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "loaded",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3284,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "target",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3285,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "total",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3286,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Event",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "constraint": {
            "repr": "EventTarget",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EventTarget"
            }
          },
          "default": {
            "repr": "EventTarget",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EventTarget"
            }
          }
        }
      ],
      "superTypeParams": []
    }
  },
  {
    "kind": "function",
    "name": "atob",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3293,
      "col": 0
    },
    "jsDoc": {
      "doc": "Decodes a string of data which has been encoded using base-64 encoding.\n\n    console.log(atob(\"aGVsbG8gd29ybGQ=\")); // outputs 'hello world'"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "s",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "btoa",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3299,
      "col": 0
    },
    "jsDoc": {
      "doc": "Creates a base-64 ASCII encoded string from the input string.\n\n    console.log(btoa(\"hello world\"));  // outputs \"aGVsbG8gd29ybGQ=\""
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "s",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "TextDecoderOptions",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3301,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "fatal",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3302,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "ignoreBOM",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3303,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "TextDecodeOptions",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3306,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "stream",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3307,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "TextDecoder",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3322,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "TextDecoder",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextDecoder"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "interface",
    "name": "TextEncoderEncodeIntoResult",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3327,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "read",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3328,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "written",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3329,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "TextEncoder",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3340,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "TextEncoder",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextEncoder"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "TextDecoderStream",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3357,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "TextDecoderStream",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextDecoderStream"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "TextEncoderStream",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3370,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "TextEncoderStream",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TextEncoderStream"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "class",
    "name": "AbortController",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3377,
      "col": 0
    },
    "jsDoc": {
      "doc": "A controller object that allows you to abort one or more DOM requests as and\nwhen desired."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": {
            "doc": "Returns the AbortSignal object associated with this object."
          },
          "tsType": {
            "repr": "AbortSignal",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AbortSignal"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "signal",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3379,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Invoking this method will set this object's AbortSignal's aborted flag and\nsignal to any observers that the associated activity is to be aborted."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "abort",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reason",
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3382,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "AbortSignal",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3419,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [
            {
              "name": "abort",
              "params": [
                {
                  "kind": "identifier",
                  "name": "reason",
                  "optional": true,
                  "tsType": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              ],
              "optional": false,
              "returnType": {
                "repr": "AbortSignal",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "AbortSignal"
                }
              },
              "typeParams": []
            }
          ],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "AbortSignal",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "AbortSignal"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "FileReader",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3477,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "FileReader",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "FileReader"
                }
              },
              "typeParams": []
            },
            {
              "name": "DONE",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              "typeParams": []
            },
            {
              "name": "EMPTY",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              "typeParams": []
            },
            {
              "name": "LOADING",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "class",
    "name": "Blob",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3493,
      "col": 0
    },
    "jsDoc": {
      "doc": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "blobParts",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "BlobPart",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BlobPart"
                  }
                }
              }
            },
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "BlobPropertyBag",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BlobPropertyBag"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3494,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "size",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3496,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3497,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "arrayBuffer",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ArrayBuffer",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ArrayBuffer"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3498,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "slice",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "start",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "end",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "contentType",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Blob",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Blob"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3499,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "stream",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ReadableStream",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Uint8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8Array"
                    }
                  }
                ],
                "typeName": "ReadableStream"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3500,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "text",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3501,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "File",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3510,
      "col": 0
    },
    "jsDoc": {
      "doc": "Provides information about files and allows JavaScript in a web page to\naccess their content."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "fileBits",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "BlobPart",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BlobPart"
                  }
                }
              }
            },
            {
              "kind": "identifier",
              "name": "fileName",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "FilePropertyBag",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "FilePropertyBag"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3511,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastModified",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3517,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3518,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Blob",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "ReadableStreamDefaultReader",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3571,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "ReadableStreamDefaultReader",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ReadableStreamDefaultReader"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "ReadableStreamReader",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3582,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "ReadableStreamReader",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ReadableStreamReader"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "ReadableStreamDefaultController",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3629,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "ReadableStreamDefaultController",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ReadableStreamDefaultController"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "ReadableByteStreamController",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3642,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "ReadableByteStreamController",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ReadableByteStreamController"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "CountQueuingStrategy",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3670,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "CountQueuingStrategy",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CountQueuingStrategy"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "ByteLengthQueuingStrategy",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3680,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "ByteLengthQueuingStrategy",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ByteLengthQueuingStrategy"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "ReadableStream",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3707,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "ReadableStream",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ReadableStream"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "WritableStream",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3748,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "WritableStream",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "WritableStream"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "WritableStreamDefaultController",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3765,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "WritableStreamDefaultController",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "WritableStreamDefaultController"
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "WritableStreamDefaultWriter",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3781,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "WritableStreamDefaultWriter",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "WritableStreamDefaultWriter"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "TransformStream",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3791,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "TransformStream",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "TransformStream"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "TransformStreamDefaultController",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3807,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "TransformStreamDefaultController",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "TransformStreamDefaultController"
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "class",
    "name": "MessageEvent",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3834,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "eventInitDict",
              "optional": true,
              "tsType": {
                "repr": "MessageEventInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MessageEventInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3847,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Returns the data of the message."
          },
          "tsType": {
            "repr": "T",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "T"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "data",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3838,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the last event ID string, for server-sent events."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastEventId",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3842,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns transfered ports."
          },
          "tsType": {
            "repr": "ReadonlyArray",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "MessagePort",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessagePort"
                  }
                }
              ],
              "typeName": "ReadonlyArray"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ports",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3846,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Event",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "default": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          }
        }
      ],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MessageChannel",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3867,
      "col": 0
    },
    "jsDoc": {
      "doc": "The MessageChannel interface of the Channel Messaging API allows us to\ncreate a new message channel and send data through it via its two MessagePort\nproperties."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3868,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "MessagePort",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessagePort"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "port1",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3869,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "MessagePort",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessagePort"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "port2",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3870,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MessagePort",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3881,
      "col": 0
    },
    "jsDoc": {
      "doc": "The MessagePort interface of the Channel Messaging API represents one of the\ntwo ports of a MessageChannel, allowing messages to be sent from one port and\nlistening out for them arriving at the other."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "MessagePort",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "MessagePort"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "MessageEvent",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "MessageEvent"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onmessage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3882,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "MessagePort",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "MessagePort"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "MessageEvent",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "MessageEvent"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onmessageerror",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3883,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Disconnects the port, so that it is no longer active."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "close",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3887,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Posts a message through the channel. Objects listed in transfer are\ntransferred, not just cloned, meaning that they are no longer usable on the\nsending side.\n\nThrows a \"DataCloneError\" DOMException if transfer contains duplicate\nobjects or port, or if message could not be cloned."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "postMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "transfer",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Transferable",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Transferable"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3896,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "postMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "StructuredSerializeOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "StructuredSerializeOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3897,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Begins dispatching messages received on the port. This is implictly called\nwhen assiging a value to `this.onmessage`."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "start",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3902,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "MessagePort",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "MessagePort"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "indexedAccess",
                          "indexedAccess": {
                            "readonly": false,
                            "objType": {
                              "repr": "MessagePortEventMap",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "MessagePortEventMap"
                              }
                            },
                            "indexType": {
                              "repr": "K",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "K"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "AddEventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AddEventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "MessagePortEventMap",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MessagePortEventMap"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3903,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "EventListenerOrEventListenerObject",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EventListenerOrEventListenerObject"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "AddEventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AddEventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3908,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "MessagePort",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "MessagePort"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "indexedAccess",
                          "indexedAccess": {
                            "readonly": false,
                            "objType": {
                              "repr": "MessagePortEventMap",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "MessagePortEventMap"
                              }
                            },
                            "indexType": {
                              "repr": "K",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "K"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "EventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "MessagePortEventMap",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MessagePortEventMap"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3913,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "EventListenerOrEventListenerObject",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EventListenerOrEventListenerObject"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "EventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 3918,
            "col": 2
          }
        }
      ],
      "extends": "EventTarget",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "function",
    "name": "structuredClone",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3925,
      "col": 0
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "value",
          "optional": false,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          }
        },
        {
          "kind": "identifier",
          "name": "options",
          "optional": true,
          "tsType": {
            "repr": "StructuredSerializeOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "StructuredSerializeOptions"
            }
          }
        }
      ],
      "returnType": {
        "repr": "any",
        "kind": "keyword",
        "keyword": "any"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "FormData",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 3971,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "FormData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "FormData"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "class",
    "name": "Headers",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4026,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "init",
              "optional": true,
              "tsType": {
                "repr": "HeadersInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "HeadersInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4027,
            "col": 2
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Appends a new value onto an existing header inside a `Headers` object, or\nadds the header if it does not already exist."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "append",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4032,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Deletes a header from a `Headers` object."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4034,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an iterator allowing to go through all key/value pairs\ncontained in this Headers object. The both the key and value of each pairs\nare ByteString objects."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "entries",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    ]
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4039,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a `ByteString` sequence of all the values of a header within a\n`Headers` object with a given name."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4043,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a boolean stating whether a `Headers` object contains a certain\nheader."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4047,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an iterator allowing to go through all keys contained in\nthis Headers object. The keys are ByteString objects."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "keys",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4051,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets a new value for an existing header inside a Headers object, or adds\nthe header if it does not already exist."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4055,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an iterator allowing to go through all values contained in\nthis Headers object. The values are ByteString objects."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "values",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4059,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "forEach",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callbackfn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "parent",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4060,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "The Symbol.iterator well-known symbol specifies the default\niterator for this Headers object"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "[Symbol.iterator]",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": [
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      },
                      {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    ]
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4067,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "DomIterable",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            ],
            "typeName": "DomIterable"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Request",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4183,
      "col": 0
    },
    "jsDoc": {
      "doc": "This Fetch API interface represents a resource request."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "input",
              "optional": false,
              "tsType": {
                "repr": "RequestInfo",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RequestInfo"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "init",
              "optional": true,
              "tsType": {
                "repr": "RequestInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RequestInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4184,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Returns the cache mode associated with request, which is a string\nindicating how the request will interact with the browser's cache when\nfetching."
          },
          "tsType": {
            "repr": "RequestCache",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestCache"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cache",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4191,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the credentials mode associated with request, which is a string\nindicating whether credentials will be sent with the request always, never,\nor only when sent to a same-origin URL."
          },
          "tsType": {
            "repr": "RequestCredentials",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestCredentials"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "credentials",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4197,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the kind of resource requested by request, e.g., \"document\" or \"script\"."
          },
          "tsType": {
            "repr": "RequestDestination",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestDestination"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "destination",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4201,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a Headers object consisting of the headers associated with request.\nNote that headers added in the network layer by the user agent will not be\naccounted for in this object, e.g., the \"Host\" header."
          },
          "tsType": {
            "repr": "Headers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Headers"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "headers",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4207,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns request's subresource integrity metadata, which is a cryptographic\nhash of the resource being fetched. Its value consists of multiple hashes\nseparated by whitespace. [SRI]"
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "integrity",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4213,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a boolean indicating whether or not request is for a history\nnavigation (a.k.a. back-forward navigation)."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isHistoryNavigation",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4218,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a boolean indicating whether or not request is for a reload\nnavigation."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isReloadNavigation",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4223,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a boolean indicating whether or not request can outlive the global\nin which it was created."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "keepalive",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4228,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns request's HTTP method, which is \"GET\" by default."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4232,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the mode associated with request, which is a string indicating\nwhether the request will use CORS, or will be restricted to same-origin\nURLs."
          },
          "tsType": {
            "repr": "RequestMode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestMode"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mode",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4238,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the redirect mode associated with request, which is a string\nindicating how redirects for the request will be handled during fetching. A\nrequest will follow redirects by default."
          },
          "tsType": {
            "repr": "RequestRedirect",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestRedirect"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "redirect",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4244,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the referrer of request. Its value can be a same-origin URL if\nexplicitly set in init, the empty string to indicate no referrer, and\n\"about:client\" when defaulting to the global's default. This is used during\nfetching to determine the value of the `Referer` header of the request\nbeing made."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "referrer",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4252,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the referrer policy associated with request. This is used during\nfetching to compute the value of the request's referrer."
          },
          "tsType": {
            "repr": "ReferrerPolicy",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ReferrerPolicy"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "referrerPolicy",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4257,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the signal associated with request, which is an AbortSignal object\nindicating whether or not request has been aborted, and its abort event\nhandler."
          },
          "tsType": {
            "repr": "AbortSignal",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AbortSignal"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "signal",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4263,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the URL of request as a string."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4267,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "A simple getter used to expose a `ReadableStream` of the body contents."
          },
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ReadableStream",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "Uint8Array",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Uint8Array"
                      }
                    }
                  ],
                  "typeName": "ReadableStream"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "body",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4271,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Stores a `Boolean` that declares whether the body has been used in a\nresponse yet."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bodyUsed",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4275,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clone",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Request",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Request"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4268,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with an `ArrayBuffer`."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "arrayBuffer",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ArrayBuffer",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ArrayBuffer"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4279,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with a `Blob`."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "blob",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Blob",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Blob"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4283,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with a `FormData` object."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "formData",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "FormData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "FormData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4287,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with the result of parsing the body text as JSON."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "json",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4291,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with a `USVString` (text)."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "text",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4295,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Body",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Body"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Response",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4313,
      "col": 0
    },
    "jsDoc": {
      "doc": "This Fetch API interface represents the response to a request."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "body",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "BodyInit",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "BodyInit"
                    }
                  },
                  {
                    "repr": "null",
                    "kind": "keyword",
                    "keyword": "null"
                  }
                ]
              }
            },
            {
              "kind": "identifier",
              "name": "init",
              "optional": true,
              "tsType": {
                "repr": "ResponseInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ResponseInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4314,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Headers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Headers"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "headers",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4318,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ok",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4319,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "redirected",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4320,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "status",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4321,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "statusText",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4322,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Headers",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Headers"
                  }
                }
              ],
              "typeName": "Promise"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "trailer",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4323,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "ResponseType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ResponseType"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4324,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4325,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "A simple getter used to expose a `ReadableStream` of the body contents."
          },
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "ReadableStream",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "Uint8Array",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Uint8Array"
                      }
                    }
                  ],
                  "typeName": "ReadableStream"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "body",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4329,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Stores a `Boolean` that declares whether the body has been used in a\nresponse yet."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bodyUsed",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4333,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "error",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Response",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Response"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4315,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "redirect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "status",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Response",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Response"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4316,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clone",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Response",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Response"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4326,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with an `ArrayBuffer`."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "arrayBuffer",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ArrayBuffer",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ArrayBuffer"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4337,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with a `Blob`."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "blob",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Blob",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Blob"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4341,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with a `FormData` object."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "formData",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "FormData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "FormData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4345,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with the result of parsing the body text as JSON."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "json",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4349,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Takes a `Response` stream and reads it to completion. It returns a promise\nthat resolves with a `USVString` (text)."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "text",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4353,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Body",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Body"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "function",
    "name": "fetch",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4364,
      "col": 0
    },
    "jsDoc": {
      "doc": "Fetch a resource from the network. It returns a Promise that resolves to the\nResponse to that request, whether it is successful or not.\n\n    const response = await fetch(\"http://my.json.host/data.json\");\n    console.log(response.status);  // e.g. 200\n    console.log(response.statusText); // e.g. \"OK\"\n    const jsonData = await response.json();"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "input",
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Request",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Request"
                }
              },
              {
                "repr": "URL",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "URL"
                }
              },
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            ]
          }
        },
        {
          "kind": "identifier",
          "name": "init",
          "optional": true,
          "tsType": {
            "repr": "RequestInit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestInit"
            }
          }
        }
      ],
      "returnType": {
        "repr": "Promise",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": [
            {
              "repr": "Response",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Response"
              }
            }
          ],
          "typeName": "Promise"
        }
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUObjectDescriptorBase",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4382,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4383,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUSupportedLimits",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4386,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxTextureDimension1D",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4387,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxTextureDimension2D",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4388,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxTextureDimension3D",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4389,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxTextureArrayLayers",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4390,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxBindGroups",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4391,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxDynamicUniformBuffersPerPipelineLayout",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4392,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxDynamicStorageBuffersPerPipelineLayout",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4393,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxSampledTexturesPerShaderStage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4394,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxSamplersPerShaderStage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4395,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxStorageBuffersPerShaderStage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4396,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxStorageTexturesPerShaderStage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4397,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxUniformBuffersPerShaderStage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4398,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxUniformBufferBindingSize",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4399,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxStorageBufferBindingSize",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4400,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "minUniformBufferOffsetAlignment",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4401,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "minStorageBufferOffsetAlignment",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4402,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxVertexBuffers",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4403,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxVertexAttributes",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4404,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxVertexBufferArrayStride",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4405,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxInterStageShaderComponents",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4406,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxComputeWorkgroupStorageSize",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4407,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxComputeInvocationsPerWorkgroup",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4408,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxComputeWorkgroupSizeX",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4409,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxComputeWorkgroupSizeY",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4410,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxComputeWorkgroupSizeZ",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4411,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxComputeWorkgroupsPerDimension",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4412,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUSupportedFeatures",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4415,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "size",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4425,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "forEach",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callbackfn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "GPUFeatureName",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "GPUFeatureName"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value2",
                        "optional": false,
                        "tsType": {
                          "repr": "GPUFeatureName",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "GPUFeatureName"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "set",
                        "optional": false,
                        "tsType": {
                          "repr": "Set",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "GPUFeatureName",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "GPUFeatureName"
                                }
                              }
                            ],
                            "typeName": "Set"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4416,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "GPUFeatureName",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUFeatureName"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4424,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "[\n    Symbol\n      .iterator\n  ]",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GPUFeatureName",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPUFeatureName"
                    }
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4426,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "entries",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "tuple",
                    "tuple": [
                      {
                        "repr": "GPUFeatureName",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "GPUFeatureName"
                        }
                      },
                      {
                        "repr": "GPUFeatureName",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "GPUFeatureName"
                        }
                      }
                    ]
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4430,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "keys",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GPUFeatureName",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPUFeatureName"
                    }
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4431,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "values",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GPUFeatureName",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPUFeatureName"
                    }
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4432,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPU",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4435,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "requestAdapter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "GPURequestAdapterOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPURequestAdapterOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "GPUAdapter",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "GPUAdapter"
                        }
                      },
                      {
                        "repr": "null",
                        "kind": "keyword",
                        "keyword": "null"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4436,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPURequestAdapterOptions",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4441,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "powerPreference",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4442,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUPowerPreference",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUPowerPreference"
            }
          },
          "typeParams": []
        },
        {
          "name": "forceFallbackAdapter",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4443,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUPowerPreference",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4446,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "low-power",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "low-power"
            }
          },
          {
            "repr": "high-performance",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "high-performance"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUAdapter",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4448,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4449,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "GPUSupportedFeatures",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUSupportedFeatures"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "features",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4450,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "GPUSupportedLimits",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUSupportedLimits"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "limits",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4451,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isFallbackAdapter",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4452,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "requestDevice",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": true,
                "tsType": {
                  "repr": "GPUDeviceDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUDeviceDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GPUDevice",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPUDevice"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4454,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUDeviceDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4457,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "requiredFeatures",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4458,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GPUFeatureName",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUFeatureName"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "requiredLimits",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4459,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              ],
              "typeName": "Record"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUFeatureName",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4462,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "depth-clamping",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth-clamping"
            }
          },
          {
            "repr": "depth24unorm-stencil8",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth24unorm-stencil8"
            }
          },
          {
            "repr": "depth32float-stencil8",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth32float-stencil8"
            }
          },
          {
            "repr": "pipeline-statistics-query",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "pipeline-statistics-query"
            }
          },
          {
            "repr": "texture-compression-bc",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "texture-compression-bc"
            }
          },
          {
            "repr": "timestamp-query",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "timestamp-query"
            }
          },
          {
            "repr": "mappable-primary-buffers",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "mappable-primary-buffers"
            }
          },
          {
            "repr": "sampled-texture-binding-array",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sampled-texture-binding-array"
            }
          },
          {
            "repr": "sampled-texture-array-dynamic-indexing",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sampled-texture-array-dynamic-indexing"
            }
          },
          {
            "repr": "sampled-texture-array-non-uniform-indexing",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sampled-texture-array-non-uniform-indexing"
            }
          },
          {
            "repr": "unsized-binding-array",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "unsized-binding-array"
            }
          },
          {
            "repr": "multi-draw-indirect",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "multi-draw-indirect"
            }
          },
          {
            "repr": "multi-draw-indirect-count",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "multi-draw-indirect-count"
            }
          },
          {
            "repr": "push-constants",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "push-constants"
            }
          },
          {
            "repr": "address-mode-clamp-to-border",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "address-mode-clamp-to-border"
            }
          },
          {
            "repr": "non-fill-polygon-mode",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "non-fill-polygon-mode"
            }
          },
          {
            "repr": "texture-compression-etc2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "texture-compression-etc2"
            }
          },
          {
            "repr": "texture-compression-astc-ldr",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "texture-compression-astc-ldr"
            }
          },
          {
            "repr": "texture-adapter-specific-format-features",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "texture-adapter-specific-format-features"
            }
          },
          {
            "repr": "shader-float64",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "shader-float64"
            }
          },
          {
            "repr": "vertex-attribute-64bit",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "vertex-attribute-64bit"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUDevice",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4486,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4487,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "GPUDeviceLostInfo",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUDeviceLostInfo"
                  }
                }
              ],
              "typeName": "Promise"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lost",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4489,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "GPUDevice",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "GPUDevice"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "GPUUncapturedErrorEvent",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "GPUUncapturedErrorEvent"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onuncapturederror",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4492,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "ReadonlyArray",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "GPUFeatureName",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUFeatureName"
                  }
                }
              ],
              "typeName": "ReadonlyArray"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "features",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4496,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Record",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              ],
              "typeName": "Record"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "limits",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4497,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "GPUQueue",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUQueue"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "queue",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4498,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pushErrorScope",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "filter",
                "optional": false,
                "tsType": {
                  "repr": "GPUErrorFilter",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUErrorFilter"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4490,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "popErrorScope",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "GPUError",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "GPUError"
                        }
                      },
                      {
                        "repr": "null",
                        "kind": "keyword",
                        "keyword": "null"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4491,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "destroy",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4500,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createBuffer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPUBufferDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBufferDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUBuffer",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUBuffer"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4502,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createTexture",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPUTextureDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUTextureDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUTexture",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUTexture"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4503,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createSampler",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": true,
                "tsType": {
                  "repr": "GPUSamplerDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUSamplerDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUSampler",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUSampler"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4504,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createBindGroupLayout",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPUBindGroupLayoutDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBindGroupLayoutDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUBindGroupLayout",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUBindGroupLayout"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4506,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createPipelineLayout",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPUPipelineLayoutDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUPipelineLayoutDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUPipelineLayout",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUPipelineLayout"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4509,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createBindGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPUBindGroupDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBindGroupDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUBindGroup",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUBindGroup"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4512,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createShaderModule",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPUShaderModuleDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUShaderModuleDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUShaderModule",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUShaderModule"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4514,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createComputePipeline",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPUComputePipelineDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUComputePipelineDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUComputePipeline",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUComputePipeline"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4515,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createRenderPipeline",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPURenderPipelineDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPURenderPipelineDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPURenderPipeline",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPURenderPipeline"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4518,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createComputePipelineAsync",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPUComputePipelineDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUComputePipelineDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GPUComputePipeline",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPUComputePipeline"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4521,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createRenderPipelineAsync",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPURenderPipelineDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPURenderPipelineDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GPURenderPipeline",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPURenderPipeline"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4524,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createCommandEncoder",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": true,
                "tsType": {
                  "repr": "GPUCommandEncoderDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUCommandEncoderDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUCommandEncoder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUCommandEncoder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4528,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createRenderBundleEncoder",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPURenderBundleEncoderDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPURenderBundleEncoderDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPURenderBundleEncoder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPURenderBundleEncoder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4531,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createQuerySet",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPUQuerySetDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUQuerySetDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUQuerySet",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUQuerySet"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4535,
            "col": 2
          }
        }
      ],
      "extends": "EventTarget",
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUBuffer",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4538,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4539,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mapAsync",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "mode",
                "optional": false,
                "tsType": {
                  "repr": "GPUMapModeFlags",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUMapModeFlags"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "offset",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "size",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "undefined",
                    "kind": "keyword",
                    "keyword": "undefined"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4541,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMappedRange",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "offset",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "size",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "ArrayBuffer",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ArrayBuffer"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4546,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unmap",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4547,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "destroy",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4549,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUBufferDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4552,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "size",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4553,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "usage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4554,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBufferUsageFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBufferUsageFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "mappedAtCreation",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4555,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUBufferUsageFlags",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4558,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "number",
        "kind": "keyword",
        "keyword": "number"
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUBufferUsage",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4559,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "MAP_READ",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4560,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "MAP_WRITE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4561,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "COPY_SRC",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4562,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "8",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 8
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "COPY_DST",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4563,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "16",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 16
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "INDEX",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4564,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "32",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 32
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "VERTEX",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4565,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "64",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 64
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "UNIFORM",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4566,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "128",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 128
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "STORAGE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4567,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "256",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 256
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "INDIRECT",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4568,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "512",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 512
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "QUERY_RESOLVE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4569,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUMapModeFlags",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4572,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "number",
        "kind": "keyword",
        "keyword": "number"
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUMapMode",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4573,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "READ",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4574,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "WRITE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4575,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUTexture",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4578,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4579,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createView",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": true,
                "tsType": {
                  "repr": "GPUTextureViewDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUTextureViewDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUTextureView",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUTextureView"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4581,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "destroy",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4582,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUTextureDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4585,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "size",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4586,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUExtent3D",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUExtent3D"
            }
          },
          "typeParams": []
        },
        {
          "name": "mipLevelCount",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4587,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "sampleCount",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4588,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "dimension",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4589,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureDimension",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureDimension"
            }
          },
          "typeParams": []
        },
        {
          "name": "format",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4590,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUTextureFormat",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureFormat"
            }
          },
          "typeParams": []
        },
        {
          "name": "usage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4591,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUTextureUsageFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureUsageFlags"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUTextureDimension",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4594,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "1d",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "1d"
            }
          },
          {
            "repr": "2d",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "2d"
            }
          },
          {
            "repr": "3d",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "3d"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUTextureUsageFlags",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4596,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "number",
        "kind": "keyword",
        "keyword": "number"
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUTextureUsage",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4597,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "COPY_SRC",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4598,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "COPY_DST",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4599,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "TEXTURE_BINDING",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4600,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "8",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 8
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "STORAGE_BINDING",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4601,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "16",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 16
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "RENDER_ATTACHMENT",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4602,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUTextureView",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4605,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4606,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUTextureViewDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4609,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "format",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4610,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureFormat",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureFormat"
            }
          },
          "typeParams": []
        },
        {
          "name": "dimension",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4611,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureViewDimension",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureViewDimension"
            }
          },
          "typeParams": []
        },
        {
          "name": "aspect",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4612,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureAspect",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureAspect"
            }
          },
          "typeParams": []
        },
        {
          "name": "baseMipLevel",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4613,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "mipLevelCount",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4614,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "baseArrayLayer",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4615,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "arrayLayerCount",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4616,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUTextureViewDimension",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4619,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "1d",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "1d"
            }
          },
          {
            "repr": "2d",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "2d"
            }
          },
          {
            "repr": "2d-array",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "2d-array"
            }
          },
          {
            "repr": "cube",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "cube"
            }
          },
          {
            "repr": "cube-array",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "cube-array"
            }
          },
          {
            "repr": "3d",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "3d"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUTextureAspect",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4627,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "all",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "all"
            }
          },
          {
            "repr": "stencil-only",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "stencil-only"
            }
          },
          {
            "repr": "depth-only",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth-only"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUTextureFormat",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4629,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "r8unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r8unorm"
            }
          },
          {
            "repr": "r8snorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r8snorm"
            }
          },
          {
            "repr": "r8uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r8uint"
            }
          },
          {
            "repr": "r8sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r8sint"
            }
          },
          {
            "repr": "r16uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r16uint"
            }
          },
          {
            "repr": "r16sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r16sint"
            }
          },
          {
            "repr": "r16float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r16float"
            }
          },
          {
            "repr": "rg8unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg8unorm"
            }
          },
          {
            "repr": "rg8snorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg8snorm"
            }
          },
          {
            "repr": "rg8uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg8uint"
            }
          },
          {
            "repr": "rg8sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg8sint"
            }
          },
          {
            "repr": "r32uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r32uint"
            }
          },
          {
            "repr": "r32sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r32sint"
            }
          },
          {
            "repr": "r32float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "r32float"
            }
          },
          {
            "repr": "rg16uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg16uint"
            }
          },
          {
            "repr": "rg16sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg16sint"
            }
          },
          {
            "repr": "rg16float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg16float"
            }
          },
          {
            "repr": "rgba8unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba8unorm"
            }
          },
          {
            "repr": "rgba8unorm-srgb",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba8unorm-srgb"
            }
          },
          {
            "repr": "rgba8snorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba8snorm"
            }
          },
          {
            "repr": "rgba8uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba8uint"
            }
          },
          {
            "repr": "rgba8sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba8sint"
            }
          },
          {
            "repr": "bgra8unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bgra8unorm"
            }
          },
          {
            "repr": "bgra8unorm-srgb",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bgra8unorm-srgb"
            }
          },
          {
            "repr": "rgb9e5ufloat",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgb9e5ufloat"
            }
          },
          {
            "repr": "rgb10a2unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgb10a2unorm"
            }
          },
          {
            "repr": "rg11b10ufloat",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg11b10ufloat"
            }
          },
          {
            "repr": "rg32uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg32uint"
            }
          },
          {
            "repr": "rg32sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg32sint"
            }
          },
          {
            "repr": "rg32float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rg32float"
            }
          },
          {
            "repr": "rgba16uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba16uint"
            }
          },
          {
            "repr": "rgba16sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba16sint"
            }
          },
          {
            "repr": "rgba16float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba16float"
            }
          },
          {
            "repr": "rgba32uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba32uint"
            }
          },
          {
            "repr": "rgba32sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba32sint"
            }
          },
          {
            "repr": "rgba32float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "rgba32float"
            }
          },
          {
            "repr": "stencil8",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "stencil8"
            }
          },
          {
            "repr": "depth16unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth16unorm"
            }
          },
          {
            "repr": "depth24plus",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth24plus"
            }
          },
          {
            "repr": "depth24plus-stencil8",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth24plus-stencil8"
            }
          },
          {
            "repr": "depth32float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth32float"
            }
          },
          {
            "repr": "bc1-rgba-unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc1-rgba-unorm"
            }
          },
          {
            "repr": "bc1-rgba-unorm-srgb",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc1-rgba-unorm-srgb"
            }
          },
          {
            "repr": "bc2-rgba-unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc2-rgba-unorm"
            }
          },
          {
            "repr": "bc2-rgba-unorm-srgb",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc2-rgba-unorm-srgb"
            }
          },
          {
            "repr": "bc3-rgba-unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc3-rgba-unorm"
            }
          },
          {
            "repr": "bc3-rgba-unorm-srgb",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc3-rgba-unorm-srgb"
            }
          },
          {
            "repr": "bc4-r-unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc4-r-unorm"
            }
          },
          {
            "repr": "bc4-r-snorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc4-r-snorm"
            }
          },
          {
            "repr": "bc5-rg-unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc5-rg-unorm"
            }
          },
          {
            "repr": "bc5-rg-snorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc5-rg-snorm"
            }
          },
          {
            "repr": "bc6h-rgb-ufloat",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc6h-rgb-ufloat"
            }
          },
          {
            "repr": "bc6h-rgb-float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc6h-rgb-float"
            }
          },
          {
            "repr": "bc7-rgba-unorm",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc7-rgba-unorm"
            }
          },
          {
            "repr": "bc7-rgba-unorm-srgb",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "bc7-rgba-unorm-srgb"
            }
          },
          {
            "repr": "depth24unorm-stencil8",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth24unorm-stencil8"
            }
          },
          {
            "repr": "depth32float-stencil8",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth32float-stencil8"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUSampler",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4688,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4689,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUSamplerDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4692,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "addressModeU",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4693,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUAddressMode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUAddressMode"
            }
          },
          "typeParams": []
        },
        {
          "name": "addressModeV",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4694,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUAddressMode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUAddressMode"
            }
          },
          "typeParams": []
        },
        {
          "name": "addressModeW",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4695,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUAddressMode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUAddressMode"
            }
          },
          "typeParams": []
        },
        {
          "name": "magFilter",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4696,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUFilterMode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUFilterMode"
            }
          },
          "typeParams": []
        },
        {
          "name": "minFilter",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4697,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUFilterMode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUFilterMode"
            }
          },
          "typeParams": []
        },
        {
          "name": "mipmapFilter",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4698,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUFilterMode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUFilterMode"
            }
          },
          "typeParams": []
        },
        {
          "name": "lodMinClamp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4699,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "lodMaxClamp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4700,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "compare",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4701,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUCompareFunction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUCompareFunction"
            }
          },
          "typeParams": []
        },
        {
          "name": "maxAnisotropy",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4702,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUAddressMode",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4705,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "clamp-to-edge",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "clamp-to-edge"
            }
          },
          {
            "repr": "repeat",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "repeat"
            }
          },
          {
            "repr": "mirror-repeat",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "mirror-repeat"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUFilterMode",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4707,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "nearest",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "nearest"
            }
          },
          {
            "repr": "linear",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "linear"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUCompareFunction",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4709,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "never",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "never"
            }
          },
          {
            "repr": "less",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "less"
            }
          },
          {
            "repr": "equal",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "equal"
            }
          },
          {
            "repr": "less-equal",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "less-equal"
            }
          },
          {
            "repr": "greater",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "greater"
            }
          },
          {
            "repr": "not-equal",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "not-equal"
            }
          },
          {
            "repr": "greater-equal",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "greater-equal"
            }
          },
          {
            "repr": "always",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "always"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUBindGroupLayout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4719,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4720,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUBindGroupLayoutDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4723,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "entries",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4724,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GPUBindGroupLayoutEntry",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUBindGroupLayoutEntry"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUBindGroupLayoutEntry",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4727,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "binding",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4728,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "visibility",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4729,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUShaderStageFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUShaderStageFlags"
            }
          },
          "typeParams": []
        },
        {
          "name": "buffer",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4731,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUBufferBindingLayout",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBufferBindingLayout"
            }
          },
          "typeParams": []
        },
        {
          "name": "sampler",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4732,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUSamplerBindingLayout",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUSamplerBindingLayout"
            }
          },
          "typeParams": []
        },
        {
          "name": "texture",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4733,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureBindingLayout",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureBindingLayout"
            }
          },
          "typeParams": []
        },
        {
          "name": "storageTexture",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4734,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUStorageTextureBindingLayout",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStorageTextureBindingLayout"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUShaderStageFlags",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4737,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "number",
        "kind": "keyword",
        "keyword": "number"
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUShaderStage",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4738,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "VERTEX",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4739,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "FRAGMENT",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4740,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "COMPUTE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4741,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUBufferBindingLayout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4744,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4745,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUBufferBindingType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBufferBindingType"
            }
          },
          "typeParams": []
        },
        {
          "name": "hasDynamicOffset",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4746,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "minBindingSize",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4747,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUBufferBindingType",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4750,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "uniform",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uniform"
            }
          },
          {
            "repr": "storage",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "storage"
            }
          },
          {
            "repr": "read-only-storage",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "read-only-storage"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUSamplerBindingLayout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4752,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4753,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUSamplerBindingType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUSamplerBindingType"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUSamplerBindingType",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4756,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "filtering",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "filtering"
            }
          },
          {
            "repr": "non-filtering",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "non-filtering"
            }
          },
          {
            "repr": "comparison",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "comparison"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUTextureBindingLayout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4761,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "sampleType",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4762,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureSampleType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureSampleType"
            }
          },
          "typeParams": []
        },
        {
          "name": "viewDimension",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4763,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureViewDimension",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureViewDimension"
            }
          },
          "typeParams": []
        },
        {
          "name": "multisampled",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4764,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUTextureSampleType",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4767,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "float"
            }
          },
          {
            "repr": "unfilterable-float",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "unfilterable-float"
            }
          },
          {
            "repr": "depth",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "depth"
            }
          },
          {
            "repr": "sint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sint"
            }
          },
          {
            "repr": "uint",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUStorageTextureAccess",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4774,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "write-only",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "write-only"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUStorageTextureBindingLayout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4776,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "access",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4777,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUStorageTextureAccess",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStorageTextureAccess"
            }
          },
          "typeParams": []
        },
        {
          "name": "format",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4778,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUTextureFormat",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureFormat"
            }
          },
          "typeParams": []
        },
        {
          "name": "viewDimension",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4779,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureViewDimension",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureViewDimension"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUBindGroup",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4782,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4783,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUBindGroupDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4786,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "layout",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4787,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBindGroupLayout",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBindGroupLayout"
            }
          },
          "typeParams": []
        },
        {
          "name": "entries",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4788,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GPUBindGroupEntry",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUBindGroupEntry"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUBindingResource",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4791,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "GPUSampler",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUSampler"
            }
          },
          {
            "repr": "GPUTextureView",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureView"
            }
          },
          {
            "repr": "GPUBufferBinding",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBufferBinding"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUBindGroupEntry",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4796,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "binding",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4797,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "resource",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4798,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBindingResource",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBindingResource"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUBufferBinding",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4801,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "buffer",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4802,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBuffer",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBuffer"
            }
          },
          "typeParams": []
        },
        {
          "name": "offset",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4803,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "size",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4804,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUPipelineLayout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4807,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4808,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUPipelineLayoutDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4811,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "bindGroupLayouts",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4812,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GPUBindGroupLayout",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUBindGroupLayout"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUCompilationMessageType",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4815,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "error",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "error"
            }
          },
          {
            "repr": "warning",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "warning"
            }
          },
          {
            "repr": "info",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "info"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUCompilationMessage",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4817,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "message",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4818,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "type",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4819,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUCompilationMessageType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUCompilationMessageType"
            }
          },
          "typeParams": []
        },
        {
          "name": "lineNum",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4820,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "linePos",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4821,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUCompilationInfo",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4824,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "messages",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4825,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "ReadonlyArray",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "GPUCompilationMessage",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUCompilationMessage"
                  }
                }
              ],
              "typeName": "ReadonlyArray"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUShaderModule",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4828,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4829,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "compilationInfo",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GPUCompilationInfo",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPUCompilationInfo"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4831,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUShaderModuleDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4834,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "code",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4835,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        },
        {
          "name": "sourceMap",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4836,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUPipelineDescriptorBase",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4839,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "layout",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4840,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUPipelineLayout",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUPipelineLayout"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUPipelineBase",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4843,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "getBindGroupLayout",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4844,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "index",
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "returnType": {
            "repr": "GPUBindGroupLayout",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBindGroupLayout"
            }
          },
          "typeParams": []
        }
      ],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUProgrammableStage",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4847,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "module",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4848,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUShaderModule",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUShaderModule"
            }
          },
          "typeParams": []
        },
        {
          "name": "entryPoint",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4849,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUComputePipeline",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4852,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4853,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBindGroupLayout",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "index",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "GPUBindGroupLayout",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUBindGroupLayout"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4855,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        },
        {
          "repr": "GPUPipelineBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUPipelineBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUComputePipelineDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4858,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUPipelineDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUPipelineDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "compute",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4860,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUProgrammableStage",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUProgrammableStage"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPURenderPipeline",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4863,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4864,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBindGroupLayout",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "index",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "GPUBindGroupLayout",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUBindGroupLayout"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4866,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        },
        {
          "repr": "GPUPipelineBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUPipelineBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPURenderPipelineDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4869,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUPipelineDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUPipelineDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "vertex",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4871,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUVertexState",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUVertexState"
            }
          },
          "typeParams": []
        },
        {
          "name": "primitive",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4872,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUPrimitiveState",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUPrimitiveState"
            }
          },
          "typeParams": []
        },
        {
          "name": "depthStencil",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4873,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUDepthStencilState",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUDepthStencilState"
            }
          },
          "typeParams": []
        },
        {
          "name": "multisample",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4874,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUMultisampleState",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUMultisampleState"
            }
          },
          "typeParams": []
        },
        {
          "name": "fragment",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4875,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUFragmentState",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUFragmentState"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUPrimitiveTopology",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4878,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "point-list",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "point-list"
            }
          },
          {
            "repr": "line-list",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "line-list"
            }
          },
          {
            "repr": "line-strip",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "line-strip"
            }
          },
          {
            "repr": "triangle-list",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "triangle-list"
            }
          },
          {
            "repr": "triangle-strip",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "triangle-strip"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUPrimitiveState",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4885,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "topology",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4886,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUPrimitiveTopology",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUPrimitiveTopology"
            }
          },
          "typeParams": []
        },
        {
          "name": "stripIndexFormat",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4887,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUIndexFormat",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUIndexFormat"
            }
          },
          "typeParams": []
        },
        {
          "name": "frontFace",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4888,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUFrontFace",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUFrontFace"
            }
          },
          "typeParams": []
        },
        {
          "name": "cullMode",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4889,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUCullMode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUCullMode"
            }
          },
          "typeParams": []
        },
        {
          "name": "clampDepth",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4890,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUFrontFace",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4893,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "ccw",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ccw"
            }
          },
          {
            "repr": "cw",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "cw"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUCullMode",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4895,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "none",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "none"
            }
          },
          {
            "repr": "front",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "front"
            }
          },
          {
            "repr": "back",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "back"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUMultisampleState",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4897,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "count",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4898,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "mask",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4899,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "alphaToCoverageEnabled",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4900,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUFragmentState",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4903,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUProgrammableStage",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUProgrammableStage"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "targets",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4904,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GPUColorTargetState",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUColorTargetState"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUColorTargetState",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4907,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "format",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4908,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUTextureFormat",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureFormat"
            }
          },
          "typeParams": []
        },
        {
          "name": "blend",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4910,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUBlendState",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBlendState"
            }
          },
          "typeParams": []
        },
        {
          "name": "writeMask",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4911,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUColorWriteFlags",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUColorWriteFlags"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUBlendState",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4914,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "color",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4915,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBlendComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBlendComponent"
            }
          },
          "typeParams": []
        },
        {
          "name": "alpha",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4916,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBlendComponent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBlendComponent"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUColorWriteFlags",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4919,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "number",
        "kind": "keyword",
        "keyword": "number"
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUColorWrite",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4920,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "RED",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4921,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "2",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 2
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "GREEN",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4922,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "4",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 4
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "BLUE",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4923,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "8",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 8
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "ALPHA",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4924,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "15",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 15
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "ALL",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4925,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUBlendComponent",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4928,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "srcFactor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4929,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBlendFactor",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBlendFactor"
            }
          },
          "typeParams": []
        },
        {
          "name": "dstFactor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4930,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBlendFactor",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBlendFactor"
            }
          },
          "typeParams": []
        },
        {
          "name": "operation",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4931,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBlendOperation",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBlendOperation"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUBlendFactor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4934,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "zero",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "zero"
            }
          },
          {
            "repr": "one",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "one"
            }
          },
          {
            "repr": "src",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "src"
            }
          },
          {
            "repr": "one-minus-src",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "one-minus-src"
            }
          },
          {
            "repr": "src-alpha",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "src-alpha"
            }
          },
          {
            "repr": "one-minus-src-alpha",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "one-minus-src-alpha"
            }
          },
          {
            "repr": "dst",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "dst"
            }
          },
          {
            "repr": "one-minus-dst",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "one-minus-dst"
            }
          },
          {
            "repr": "dst-alpha",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "dst-alpha"
            }
          },
          {
            "repr": "one-minus-dst-alpha",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "one-minus-dst-alpha"
            }
          },
          {
            "repr": "src-alpha-saturated",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "src-alpha-saturated"
            }
          },
          {
            "repr": "constant",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "constant"
            }
          },
          {
            "repr": "one-minus-constant",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "one-minus-constant"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUBlendOperation",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4949,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "add",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "add"
            }
          },
          {
            "repr": "subtract",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "subtract"
            }
          },
          {
            "repr": "reverse-subtract",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "reverse-subtract"
            }
          },
          {
            "repr": "min",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "min"
            }
          },
          {
            "repr": "max",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "max"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUDepthStencilState",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4956,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "format",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4957,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUTextureFormat",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureFormat"
            }
          },
          "typeParams": []
        },
        {
          "name": "depthWriteEnabled",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4959,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "depthCompare",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4960,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUCompareFunction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUCompareFunction"
            }
          },
          "typeParams": []
        },
        {
          "name": "stencilFront",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4962,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUStencilFaceState",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStencilFaceState"
            }
          },
          "typeParams": []
        },
        {
          "name": "stencilBack",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4963,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUStencilFaceState",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStencilFaceState"
            }
          },
          "typeParams": []
        },
        {
          "name": "stencilReadMask",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4965,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "stencilWriteMask",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4966,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "depthBias",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4968,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "depthBiasSlopeScale",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4969,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "depthBiasClamp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4970,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUStencilFaceState",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4973,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "compare",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4974,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUCompareFunction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUCompareFunction"
            }
          },
          "typeParams": []
        },
        {
          "name": "failOp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4975,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUStencilOperation",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStencilOperation"
            }
          },
          "typeParams": []
        },
        {
          "name": "depthFailOp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4976,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUStencilOperation",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStencilOperation"
            }
          },
          "typeParams": []
        },
        {
          "name": "passOp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 4977,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUStencilOperation",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStencilOperation"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUStencilOperation",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4980,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "keep",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "keep"
            }
          },
          {
            "repr": "zero",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "zero"
            }
          },
          {
            "repr": "replace",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "replace"
            }
          },
          {
            "repr": "invert",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "invert"
            }
          },
          {
            "repr": "increment-clamp",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "increment-clamp"
            }
          },
          {
            "repr": "decrement-clamp",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "decrement-clamp"
            }
          },
          {
            "repr": "increment-wrap",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "increment-wrap"
            }
          },
          {
            "repr": "decrement-wrap",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "decrement-wrap"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUIndexFormat",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4990,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "uint16",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint16"
            }
          },
          {
            "repr": "uint32",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint32"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUVertexFormat",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 4992,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "uint8x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint8x2"
            }
          },
          {
            "repr": "uint8x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint8x4"
            }
          },
          {
            "repr": "sint8x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sint8x2"
            }
          },
          {
            "repr": "sint8x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sint8x4"
            }
          },
          {
            "repr": "unorm8x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "unorm8x2"
            }
          },
          {
            "repr": "unorm8x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "unorm8x4"
            }
          },
          {
            "repr": "snorm8x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "snorm8x2"
            }
          },
          {
            "repr": "snorm8x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "snorm8x4"
            }
          },
          {
            "repr": "uint16x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint16x2"
            }
          },
          {
            "repr": "uint16x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint16x4"
            }
          },
          {
            "repr": "sint16x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sint16x2"
            }
          },
          {
            "repr": "sint16x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sint16x4"
            }
          },
          {
            "repr": "unorm16x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "unorm16x2"
            }
          },
          {
            "repr": "unorm16x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "unorm16x4"
            }
          },
          {
            "repr": "snorm16x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "snorm16x2"
            }
          },
          {
            "repr": "snorm16x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "snorm16x4"
            }
          },
          {
            "repr": "float16x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "float16x2"
            }
          },
          {
            "repr": "float16x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "float16x4"
            }
          },
          {
            "repr": "float32",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "float32"
            }
          },
          {
            "repr": "float32x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "float32x2"
            }
          },
          {
            "repr": "float32x3",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "float32x3"
            }
          },
          {
            "repr": "float32x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "float32x4"
            }
          },
          {
            "repr": "uint32",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint32"
            }
          },
          {
            "repr": "uint32x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint32x2"
            }
          },
          {
            "repr": "uint32x3",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint32x3"
            }
          },
          {
            "repr": "uint32x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "uint32x4"
            }
          },
          {
            "repr": "sint32",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sint32"
            }
          },
          {
            "repr": "sint32x2",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sint32x2"
            }
          },
          {
            "repr": "sint32x3",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sint32x3"
            }
          },
          {
            "repr": "sint32x4",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "sint32x4"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUVertexStepMode",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5023,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "vertex",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "vertex"
            }
          },
          {
            "repr": "instance",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "instance"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUVertexState",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5025,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUProgrammableStage",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUProgrammableStage"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "buffers",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5026,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "",
              "kind": "parenthesized",
              "parenthesized": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "GPUVertexBufferLayout",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPUVertexBufferLayout"
                    }
                  },
                  {
                    "repr": "null",
                    "kind": "keyword",
                    "keyword": "null"
                  }
                ]
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUVertexBufferLayout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5029,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "arrayStride",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5030,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "stepMode",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5031,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUVertexStepMode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUVertexStepMode"
            }
          },
          "typeParams": []
        },
        {
          "name": "attributes",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5032,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GPUVertexAttribute",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUVertexAttribute"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUVertexAttribute",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5035,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "format",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5036,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUVertexFormat",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUVertexFormat"
            }
          },
          "typeParams": []
        },
        {
          "name": "offset",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5037,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "shaderLocation",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5039,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUCommandBuffer",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5042,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5043,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              ],
              "typeName": "Promise"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "executionTime",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5045,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUCommandBufferDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5048,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUCommandEncoder",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5050,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5051,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "beginRenderPass",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": false,
                "tsType": {
                  "repr": "GPURenderPassDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPURenderPassDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPURenderPassEncoder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPURenderPassEncoder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5053,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "beginComputePass",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": true,
                "tsType": {
                  "repr": "GPUComputePassDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUComputePassDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUComputePassEncoder",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUComputePassEncoder"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5054,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "copyBufferToBuffer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "source",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "sourceOffset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "destination",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "destinationOffset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "size",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5058,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "copyBufferToTexture",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "source",
                "optional": false,
                "tsType": {
                  "repr": "GPUImageCopyBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUImageCopyBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "destination",
                "optional": false,
                "tsType": {
                  "repr": "GPUImageCopyTexture",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUImageCopyTexture"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "copySize",
                "optional": false,
                "tsType": {
                  "repr": "GPUExtent3D",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUExtent3D"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5066,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "copyTextureToBuffer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "source",
                "optional": false,
                "tsType": {
                  "repr": "GPUImageCopyTexture",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUImageCopyTexture"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "destination",
                "optional": false,
                "tsType": {
                  "repr": "GPUImageCopyBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUImageCopyBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "copySize",
                "optional": false,
                "tsType": {
                  "repr": "GPUExtent3D",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUExtent3D"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5072,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "copyTextureToTexture",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "source",
                "optional": false,
                "tsType": {
                  "repr": "GPUImageCopyTexture",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUImageCopyTexture"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "destination",
                "optional": false,
                "tsType": {
                  "repr": "GPUImageCopyTexture",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUImageCopyTexture"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "copySize",
                "optional": false,
                "tsType": {
                  "repr": "GPUExtent3D",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUExtent3D"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5078,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pushDebugGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "groupLabel",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5084,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "popDebugGroup",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5085,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "insertDebugMarker",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "markerLabel",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5086,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "writeTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "querySet",
                "optional": false,
                "tsType": {
                  "repr": "GPUQuerySet",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUQuerySet"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "queryIndex",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5088,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resolveQuerySet",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "querySet",
                "optional": false,
                "tsType": {
                  "repr": "GPUQuerySet",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUQuerySet"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "firstQuery",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "queryCount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "destination",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "destinationOffset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5090,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "finish",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": true,
                "tsType": {
                  "repr": "GPUCommandBufferDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUCommandBufferDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPUCommandBuffer",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUCommandBuffer"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5098,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUCommandEncoderDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5101,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "measureExecutionTime",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5102,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUImageDataLayout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5105,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "offset",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5106,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "bytesPerRow",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5107,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "rowsPerImage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5108,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUImageCopyBuffer",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5111,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUImageDataLayout",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUImageDataLayout"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "buffer",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5112,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUBuffer",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUBuffer"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUImageCopyTexture",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5115,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "texture",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5116,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUTexture",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTexture"
            }
          },
          "typeParams": []
        },
        {
          "name": "mipLevel",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5117,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "origin",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5118,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUOrigin3D",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUOrigin3D"
            }
          },
          "typeParams": []
        },
        {
          "name": "aspect",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5119,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureAspect",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureAspect"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUComputePassEncoder",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5142,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5144,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBindGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "index",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "bindGroup",
                "optional": false,
                "tsType": {
                  "repr": "GPUBindGroup",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBindGroup"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsets",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5145,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBindGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "index",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "bindGroup",
                "optional": false,
                "tsType": {
                  "repr": "GPUBindGroup",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBindGroup"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsetsData",
                "optional": false,
                "tsType": {
                  "repr": "Uint32Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint32Array"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsetsDataStart",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsetsDataLength",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5150,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pushDebugGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "groupLabel",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5157,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "popDebugGroup",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5158,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "insertDebugMarker",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "markerLabel",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5159,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPipeline",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "pipeline",
                "optional": false,
                "tsType": {
                  "repr": "GPUComputePipeline",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUComputePipeline"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5160,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dispatch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "x",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "z",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5161,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dispatchIndirect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "indirectBuffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "indirectOffset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5162,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "beginPipelineStatisticsQuery",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "querySet",
                "optional": false,
                "tsType": {
                  "repr": "GPUQuerySet",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUQuerySet"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "queryIndex",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5167,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "endPipelineStatisticsQuery",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5171,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "writeTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "querySet",
                "optional": false,
                "tsType": {
                  "repr": "GPUQuerySet",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUQuerySet"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "queryIndex",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5173,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "endPass",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5175,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        },
        {
          "repr": "GPUProgrammablePassEncoder",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUProgrammablePassEncoder"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUComputePassDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5178,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPURenderPassEncoder",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5217,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5219,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBindGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "index",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "bindGroup",
                "optional": false,
                "tsType": {
                  "repr": "GPUBindGroup",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBindGroup"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsets",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5220,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBindGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "index",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "bindGroup",
                "optional": false,
                "tsType": {
                  "repr": "GPUBindGroup",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBindGroup"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsetsData",
                "optional": false,
                "tsType": {
                  "repr": "Uint32Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint32Array"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsetsDataStart",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsetsDataLength",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5225,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pushDebugGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "groupLabel",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5232,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "popDebugGroup",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5233,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "insertDebugMarker",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "markerLabel",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5234,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPipeline",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "pipeline",
                "optional": false,
                "tsType": {
                  "repr": "GPURenderPipeline",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPURenderPipeline"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5235,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setIndexBuffer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "buffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "indexFormat",
                "optional": false,
                "tsType": {
                  "repr": "GPUIndexFormat",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUIndexFormat"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "offset",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "size",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5236,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setVertexBuffer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "slot",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "buffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "offset",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "size",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5242,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "draw",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "vertexCount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "instanceCount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "firstVertex",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "firstInstance",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5248,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "drawIndexed",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "indexCount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "instanceCount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "firstIndex",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "baseVertex",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "firstInstance",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5254,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "drawIndirect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "indirectBuffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "indirectOffset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5261,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "drawIndexedIndirect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "indirectBuffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "indirectOffset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5262,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setViewport",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "x",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "width",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "height",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "minDepth",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "maxDepth",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5267,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setScissorRect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "x",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "width",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "height",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5276,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBlendConstant",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "color",
                "optional": false,
                "tsType": {
                  "repr": "GPUColor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUColor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5283,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setStencilReference",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "reference",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5284,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "beginOcclusionQuery",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "queryIndex",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5286,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "endOcclusionQuery",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5287,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "beginPipelineStatisticsQuery",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "querySet",
                "optional": false,
                "tsType": {
                  "repr": "GPUQuerySet",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUQuerySet"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "queryIndex",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5289,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "endPipelineStatisticsQuery",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5293,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "writeTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "querySet",
                "optional": false,
                "tsType": {
                  "repr": "GPUQuerySet",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUQuerySet"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "queryIndex",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5295,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "executeBundles",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bundles",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "GPURenderBundle",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPURenderBundle"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5297,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "endPass",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5298,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        },
        {
          "repr": "GPUProgrammablePassEncoder",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUProgrammablePassEncoder"
          }
        },
        {
          "repr": "GPURenderEncoderBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPURenderEncoderBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPURenderPassDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5301,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "colorAttachments",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5302,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GPURenderPassColorAttachment",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPURenderPassColorAttachment"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "depthStencilAttachment",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5303,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPURenderPassDepthStencilAttachment",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPURenderPassDepthStencilAttachment"
            }
          },
          "typeParams": []
        },
        {
          "name": "occlusionQuerySet",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5304,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUQuerySet",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUQuerySet"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPURenderPassColorAttachment",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5307,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "view",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5308,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUTextureView",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureView"
            }
          },
          "typeParams": []
        },
        {
          "name": "resolveTarget",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5309,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureView",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureView"
            }
          },
          "typeParams": []
        },
        {
          "name": "loadValue",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5311,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "GPULoadOp",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GPULoadOp"
                }
              },
              {
                "repr": "GPUColor",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GPUColor"
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "storeOp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5312,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUStoreOp",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStoreOp"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPURenderPassDepthStencilAttachment",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5315,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "view",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5316,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUTextureView",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureView"
            }
          },
          "typeParams": []
        },
        {
          "name": "depthLoadValue",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5318,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "GPULoadOp",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GPULoadOp"
                }
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "depthStoreOp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5319,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUStoreOp",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStoreOp"
            }
          },
          "typeParams": []
        },
        {
          "name": "depthReadOnly",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5320,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "stencilLoadValue",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5322,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "GPULoadOp",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GPULoadOp"
                }
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "stencilStoreOp",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5323,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUStoreOp",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUStoreOp"
            }
          },
          "typeParams": []
        },
        {
          "name": "stencilReadOnly",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5324,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPULoadOp",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5327,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "load",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "load"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUStoreOp",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5329,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "store",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "store"
            }
          },
          {
            "repr": "discard",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "discard"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPURenderBundle",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5331,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5332,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPURenderBundleDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5335,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPURenderBundleEncoder",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5337,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5339,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "draw",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "vertexCount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "instanceCount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "firstVertex",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "firstInstance",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5340,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "drawIndexed",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "indexCount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "instanceCount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "firstIndex",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "baseVertex",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "firstInstance",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5346,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "drawIndexedIndirect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "indirectBuffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "indirectOffset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5353,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "drawIndirect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "indirectBuffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "indirectOffset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5357,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "insertDebugMarker",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "markerLabel",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5358,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "popDebugGroup",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5359,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pushDebugGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "groupLabel",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5360,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBindGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "index",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "bindGroup",
                "optional": false,
                "tsType": {
                  "repr": "GPUBindGroup",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBindGroup"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsets",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5361,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBindGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "index",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "bindGroup",
                "optional": false,
                "tsType": {
                  "repr": "GPUBindGroup",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBindGroup"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsetsData",
                "optional": false,
                "tsType": {
                  "repr": "Uint32Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint32Array"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsetsDataStart",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "dynamicOffsetsDataLength",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5366,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setIndexBuffer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "buffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "indexFormat",
                "optional": false,
                "tsType": {
                  "repr": "GPUIndexFormat",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUIndexFormat"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "offset",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "size",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5373,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPipeline",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "pipeline",
                "optional": false,
                "tsType": {
                  "repr": "GPURenderPipeline",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPURenderPipeline"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5379,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setVertexBuffer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "slot",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "buffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "offset",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "size",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5380,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "finish",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "descriptor",
                "optional": true,
                "tsType": {
                  "repr": "GPURenderBundleDescriptor",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPURenderBundleDescriptor"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "GPURenderBundle",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPURenderBundle"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5387,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        },
        {
          "repr": "GPUProgrammablePassEncoder",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUProgrammablePassEncoder"
          }
        },
        {
          "repr": "GPURenderEncoderBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPURenderEncoderBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPURenderPassLayout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5390,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "colorFormats",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5391,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GPUTextureFormat",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUTextureFormat"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "depthStencilFormat",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5392,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUTextureFormat",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUTextureFormat"
            }
          },
          "typeParams": []
        },
        {
          "name": "sampleCount",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5393,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPURenderBundleEncoderDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5396,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPURenderPassLayout",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPURenderPassLayout"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "depthReadOnly",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5397,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "stencilReadOnly",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5398,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUQueue",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5401,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5402,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "submit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "commandBuffers",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "GPUCommandBuffer",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GPUCommandBuffer"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5404,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onSubmittedWorkDone",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "undefined",
                    "kind": "keyword",
                    "keyword": "undefined"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5406,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "writeBuffer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "buffer",
                "optional": false,
                "tsType": {
                  "repr": "GPUBuffer",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUBuffer"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "bufferOffset",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "BufferSource",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BufferSource"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dataOffset",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "size",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5408,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "writeTexture",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "destination",
                "optional": false,
                "tsType": {
                  "repr": "GPUImageCopyTexture",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUImageCopyTexture"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "BufferSource",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BufferSource"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "dataLayout",
                "optional": false,
                "tsType": {
                  "repr": "GPUImageDataLayout",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUImageDataLayout"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "size",
                "optional": false,
                "tsType": {
                  "repr": "GPUExtent3D",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GPUExtent3D"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5416,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUQuerySet",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5424,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5425,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "destroy",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5427,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "GPUObjectBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectBase"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUQuerySetDescriptor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5430,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "GPUObjectDescriptorBase",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "GPUObjectDescriptorBase"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "type",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5431,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "GPUQueryType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUQueryType"
            }
          },
          "typeParams": []
        },
        {
          "name": "count",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5432,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "pipelineStatistics",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5433,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "GPUPipelineStatisticName",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "GPUPipelineStatisticName"
              }
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUQueryType",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5436,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "occlusion",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "occlusion"
            }
          },
          {
            "repr": "pipeline-statistics",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "pipeline-statistics"
            }
          },
          {
            "repr": "timestamp",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "timestamp"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUPipelineStatisticName",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5438,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "vertex-shader-invocations",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "vertex-shader-invocations"
            }
          },
          {
            "repr": "clipper-invocations",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "clipper-invocations"
            }
          },
          {
            "repr": "clipper-primitives-out",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "clipper-primitives-out"
            }
          },
          {
            "repr": "fragment-shader-invocations",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "fragment-shader-invocations"
            }
          },
          {
            "repr": "compute-shader-invocations",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "compute-shader-invocations"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUDeviceLostReason",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5445,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "destroyed",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "destroyed"
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUDeviceLostInfo",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5447,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "reason",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5448,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "GPUDeviceLostReason",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GPUDeviceLostReason"
                }
              },
              {
                "repr": "undefined",
                "kind": "keyword",
                "keyword": "undefined"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "message",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5449,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUErrorFilter",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5452,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "out-of-memory",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "out-of-memory"
            }
          },
          {
            "repr": "validation",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "validation"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUOutOfMemoryError",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5454,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5455,
            "col": 2
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUValidationError",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5458,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "message",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5459,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5460,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUError",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5463,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "GPUOutOfMemoryError",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUOutOfMemoryError"
            }
          },
          {
            "repr": "GPUValidationError",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUValidationError"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GPUUncapturedErrorEvent",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5465,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "gpuUncapturedErrorEventInitDict",
              "optional": false,
              "tsType": {
                "repr": "GPUUncapturedErrorEventInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GPUUncapturedErrorEventInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5466,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "GPUError",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUError"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "error",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5470,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Event",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUUncapturedErrorEventInit",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5473,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "EventInit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "EventInit"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "error",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5474,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GPUError",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUError"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUColorDict",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5477,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "r",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5478,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "g",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5479,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "b",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5480,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "a",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5481,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUColor",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5484,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          {
            "repr": "GPUColorDict",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUColorDict"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUOrigin3DDict",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5486,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "x",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5487,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "y",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5488,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "z",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5489,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUOrigin3D",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5492,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          {
            "repr": "GPUOrigin3DDict",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUOrigin3DDict"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "GPUExtent3DDict",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5494,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "width",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5495,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "height",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5496,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "depthOrArrayLayers",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5497,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "GPUExtent3D",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5500,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            }
          },
          {
            "repr": "GPUExtent3DDict",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPUExtent3DDict"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "CloseEvent",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5515,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "eventInitDict",
              "optional": true,
              "tsType": {
                "repr": "CloseEventInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CloseEventInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5516,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Returns the WebSocket connection close code provided by the server."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5520,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the WebSocket connection close reason provided by the server."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reason",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5524,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the connection closed cleanly; false otherwise."
          },
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "wasClean",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5528,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Event",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "WebSocket",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5539,
      "col": 0
    },
    "jsDoc": {
      "doc": "Provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "url",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "protocols",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  }
                ]
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5540,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "CLOSED",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5542,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "CLOSING",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5543,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "CONNECTING",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5544,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "OPEN",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5545,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n\nCan be set, to change how binary data is returned. The default is \"blob\"."
          },
          "tsType": {
            "repr": "BinaryType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "BinaryType"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "binaryType",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5552,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n\nIf the WebSocket connection is closed, this attribute's value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)"
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bufferedAmount",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5558,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the extensions selected by the server, if any."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "extensions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5562,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "WebSocket",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "WebSocket"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "CloseEvent",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "CloseEvent"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onclose",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5563,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "WebSocket",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "WebSocket"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Event",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Event"
                              }
                            },
                            {
                              "repr": "ErrorEvent",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "ErrorEvent"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onerror",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5564,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "WebSocket",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "WebSocket"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "MessageEvent",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "MessageEvent"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onmessage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5565,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "WebSocket",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "WebSocket"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "Event",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Event"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onopen",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5566,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor's second argument to perform subprotocol negotiation."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "protocol",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5570,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the state of the WebSocket object's connection. It can have the values described below."
          },
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "readyState",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5574,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the URL that was used to establish the WebSocket connection."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5578,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "CLOSED",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5587,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "CLOSING",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5588,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "CONNECTING",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5589,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "OPEN",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5590,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "close",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "code",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "reason",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5582,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "send",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "ArrayBufferLike",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ArrayBufferLike"
                      }
                    },
                    {
                      "repr": "Blob",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Blob"
                      }
                    },
                    {
                      "repr": "ArrayBufferView",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ArrayBufferView"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5586,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "WebSocket",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "WebSocket"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "indexedAccess",
                          "indexedAccess": {
                            "readonly": false,
                            "objType": {
                              "repr": "WebSocketEventMap",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "WebSocketEventMap"
                              }
                            },
                            "indexType": {
                              "repr": "K",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "K"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "AddEventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AddEventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "WebSocketEventMap",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "WebSocketEventMap"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5591,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "EventListenerOrEventListenerObject",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EventListenerOrEventListenerObject"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "AddEventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AddEventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5596,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "WebSocket",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "WebSocket"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "indexedAccess",
                          "indexedAccess": {
                            "readonly": false,
                            "objType": {
                              "repr": "WebSocketEventMap",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "WebSocketEventMap"
                              }
                            },
                            "indexType": {
                              "repr": "K",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "K"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "EventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "WebSocketEventMap",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "WebSocketEventMap"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5601,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "EventListenerOrEventListenerObject",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EventListenerOrEventListenerObject"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "EventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5606,
            "col": 2
          }
        }
      ],
      "extends": "EventTarget",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "Storage",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5653,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "Storage",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Storage"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "crypto",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5663,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "Crypto",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "Crypto"
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "CryptoKey",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5813,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "CryptoKey",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CryptoKey"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "CryptoKeyPair",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5824,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "CryptoKeyPair",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CryptoKeyPair"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "interface",
    "name": "Crypto",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5919,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "getRandomValues",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5921,
            "col": 2
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "array",
              "optional": false,
              "tsType": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            }
          ],
          "returnType": {
            "repr": "T",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "T"
            }
          },
          "typeParams": [
            {
              "name": "T",
              "constraint": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "Int8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Int8Array"
                    }
                  },
                  {
                    "repr": "Int16Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Int16Array"
                    }
                  },
                  {
                    "repr": "Int32Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Int32Array"
                    }
                  },
                  {
                    "repr": "Uint8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8Array"
                    }
                  },
                  {
                    "repr": "Uint16Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint16Array"
                    }
                  },
                  {
                    "repr": "Uint32Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint32Array"
                    }
                  },
                  {
                    "repr": "Uint8ClampedArray",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8ClampedArray"
                    }
                  },
                  {
                    "repr": "Float32Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Float32Array"
                    }
                  },
                  {
                    "repr": "Float64Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Float64Array"
                    }
                  },
                  {
                    "repr": "DataView",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DataView"
                    }
                  },
                  {
                    "repr": "null",
                    "kind": "keyword",
                    "keyword": "null"
                  }
                ]
              }
            }
          ]
        },
        {
          "name": "randomUUID",
          "kind": "method",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5937,
            "col": 2
          },
          "optional": false,
          "params": [],
          "returnType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "typeParams": []
        }
      ],
      "properties": [
        {
          "name": "subtle",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 5920,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "SubtleCrypto",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "SubtleCrypto"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "SubtleCrypto",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5940,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "SubtleCrypto",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "SubtleCrypto"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "BroadcastChannel",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 5996,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "prototype",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "BroadcastChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BroadcastChannel"
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "namespace",
    "name": "Deno",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6006,
      "col": 0
    },
    "namespaceDef": {
      "elements": [
        {
          "kind": "interface",
          "name": "NetAddr",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6007,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "transport",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6008,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "tcp",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "tcp"
                      }
                    },
                    {
                      "repr": "udp",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "udp"
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "hostname",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6009,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "port",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6010,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "UnixAddr",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6013,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "transport",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6014,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "unix",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "unix"
                      }
                    },
                    {
                      "repr": "unixpacket",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "unixpacket"
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "path",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6015,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "Addr",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6018,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "NetAddr",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "NetAddr"
                  }
                },
                {
                  "repr": "UnixAddr",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UnixAddr"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "Listener",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6021,
            "col": 2
          },
          "jsDoc": {
            "doc": "A generic network listener for stream-oriented protocols."
          },
          "interfaceDef": {
            "extends": [
              {
                "repr": "AsyncIterable",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "Conn",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Conn"
                      }
                    }
                  ],
                  "typeName": "AsyncIterable"
                }
              }
            ],
            "methods": [
              {
                "name": "accept",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6023,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Waits for and resolves to the next connection to the `Listener`."
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "Conn",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Conn"
                        }
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              },
              {
                "name": "close",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6026,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Close closes the listener. Any pending accept promises will be rejected\nwith errors."
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "void",
                  "kind": "keyword",
                  "keyword": "void"
                },
                "typeParams": []
              },
              {
                "name": "[Symbol.asyncIterator]",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6033,
                  "col": 4
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "AsyncIterableIterator",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "Conn",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Conn"
                        }
                      }
                    ],
                    "typeName": "AsyncIterableIterator"
                  }
                },
                "typeParams": []
              }
            ],
            "properties": [
              {
                "name": "addr",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6028,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Return the address of the `Listener`."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Addr",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Addr"
                  }
                },
                "typeParams": []
              },
              {
                "name": "rid",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6031,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Return the rid of the `Listener`."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "TlsListener",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6037,
            "col": 2
          },
          "jsDoc": {
            "doc": "Specialized listener that accepts TLS connections."
          },
          "interfaceDef": {
            "extends": [
              {
                "repr": "Listener",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Listener"
                }
              },
              {
                "repr": "AsyncIterable",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "TlsConn",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "TlsConn"
                      }
                    }
                  ],
                  "typeName": "AsyncIterable"
                }
              }
            ],
            "methods": [
              {
                "name": "accept",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6039,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Waits for a TLS client to connect and accepts the connection."
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "TlsConn",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "TlsConn"
                        }
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              },
              {
                "name": "[Symbol.asyncIterator]",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6040,
                  "col": 4
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "AsyncIterableIterator",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "TlsConn",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "TlsConn"
                        }
                      }
                    ],
                    "typeName": "AsyncIterableIterator"
                  }
                },
                "typeParams": []
              }
            ],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "Conn",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6043,
            "col": 2
          },
          "interfaceDef": {
            "extends": [
              {
                "repr": "Reader",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Reader"
                }
              },
              {
                "repr": "Writer",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Writer"
                }
              },
              {
                "repr": "Closer",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Closer"
                }
              }
            ],
            "methods": [
              {
                "name": "closeWrite",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6052,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Shuts down (`shutdown(2)`) the write side of the connection. Most\ncallers should just use `close()`."
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "void",
                        "kind": "keyword",
                        "keyword": "void"
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              }
            ],
            "properties": [
              {
                "name": "localAddr",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6045,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The local address of the connection."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Addr",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Addr"
                  }
                },
                "typeParams": []
              },
              {
                "name": "remoteAddr",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6047,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The remote address of the connection."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Addr",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Addr"
                  }
                },
                "typeParams": []
              },
              {
                "name": "rid",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6049,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The resource ID of the connection."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "TlsConn",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6055,
            "col": 2
          },
          "interfaceDef": {
            "extends": [
              {
                "repr": "Conn",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Conn"
                }
              }
            ],
            "methods": [
              {
                "name": "handshake",
                "kind": "method",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6059,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Runs the client or server handshake protocol to completion if that has\nnot happened yet. Calling this method is optional; the TLS handshake\nwill be completed automatically as soon as data is sent or received."
                },
                "optional": false,
                "params": [],
                "returnType": {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "void",
                        "kind": "keyword",
                        "keyword": "void"
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                "typeParams": []
              }
            ],
            "properties": [],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ListenOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6062,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "port",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6064,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The port to listen on."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "hostname",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6072,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "A literal IP address or host name that can be resolved to an IP address.\nIf not specified, defaults to `0.0.0.0`.\n\n__Note about `0.0.0.0`__ While listening `0.0.0.0` works on all platforms,\nthe browsers on Windows don't work with the address `0.0.0.0`.\nYou should show the message like `server running on localhost:8080` instead of\n`server running on 0.0.0.0:8080` if your program supports Windows."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "listen",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6085,
            "col": 2
          },
          "jsDoc": {
            "doc": "Listen announces on the local transport address.\n\n```ts\nconst listener1 = Deno.listen({ port: 80 })\nconst listener2 = Deno.listen({ hostname: \"192.0.2.1\", port: 80 })\nconst listener3 = Deno.listen({ hostname: \"[2001:db8::1]\", port: 80 });\nconst listener4 = Deno.listen({ hostname: \"golang.org\", port: 80, transport: \"tcp\" });\n```\n\nRequires `allow-net` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "intersection",
                  "intersection": [
                    {
                      "repr": "ListenOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ListenOptions"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "transport",
                            "params": [],
                            "computed": false,
                            "optional": true,
                            "tsType": {
                              "repr": "tcp",
                              "kind": "literal",
                              "literal": {
                                "kind": "string",
                                "string": "tcp"
                              }
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Listener",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Listener"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ListenTlsOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6089,
            "col": 2
          },
          "interfaceDef": {
            "extends": [
              {
                "repr": "ListenOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ListenOptions"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "certFile",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6092,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Path to a file containing a PEM formatted CA certificate. Requires\n`--allow-read`."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "keyFile",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6094,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "Server public key file. Requires `--allow-read`."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "transport",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6096,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "tcp",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "tcp"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "listenTls",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6107,
            "col": 2
          },
          "jsDoc": {
            "doc": "Listen announces on the local transport address over TLS (transport layer\nsecurity).\n\n```ts\nconst lstnr = Deno.listenTls({ port: 443, certFile: \"./server.crt\", keyFile: \"./server.key\" });\n```\n\nRequires `allow-net` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ListenTlsOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ListenTlsOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "TlsListener",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "TlsListener"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ConnectOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6109,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "port",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6111,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The port to connect to."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "hostname",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6114,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "A literal IP address or host name that can be resolved to an IP address.\nIf not specified, defaults to `127.0.0.1`."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "transport",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6115,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "tcp",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "tcp"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "connect",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6130,
            "col": 2
          },
          "jsDoc": {
            "doc": "Connects to the hostname (default is \"127.0.0.1\") and port on the named\ntransport (default is \"tcp\"), and resolves to the connection (`Conn`).\n\n```ts\nconst conn1 = await Deno.connect({ port: 80 });\nconst conn2 = await Deno.connect({ hostname: \"192.0.2.1\", port: 80 });\nconst conn3 = await Deno.connect({ hostname: \"[2001:db8::1]\", port: 80 });\nconst conn4 = await Deno.connect({ hostname: \"golang.org\", port: 80, transport: \"tcp\" });\n```\n\nRequires `allow-net` permission for \"tcp\"."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ConnectOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ConnectOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Conn",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Conn"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ConnectTlsOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6132,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "port",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6134,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "The port to connect to."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "hostname",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6137,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "A literal IP address or host name that can be resolved to an IP address.\nIf not specified, defaults to `127.0.0.1`."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "certFile",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6144,
                  "col": 4
                },
                "jsDoc": {
                  "tags": [
                    {
                      "kind": "deprecated",
                      "doc": "This option is deprecated and will be removed in a future\nrelease.\n\nServer certificate file."
                    }
                  ]
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "caCerts",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6149,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "A list of root certificates that will be used in addition to the\ndefault root certificates to verify the peer's certificate.\n\nMust be in PEM format."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "connectTls",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6167,
            "col": 2
          },
          "jsDoc": {
            "doc": "Establishes a secure connection over TLS (transport layer security) using\nan optional cert file, hostname (default is \"127.0.0.1\") and port.  The\ncert file is optional and if not included Mozilla's root certificates will\nbe used (see also https://github.com/ctz/webpki-roots for specifics)\n\n```ts\nconst caCert = await Deno.readTextFile(\"./certs/my_custom_root_CA.pem\");\nconst conn1 = await Deno.connectTls({ port: 80 });\nconst conn2 = await Deno.connectTls({ caCerts: [caCert], hostname: \"192.0.2.1\", port: 80 });\nconst conn3 = await Deno.connectTls({ hostname: \"[2001:db8::1]\", port: 80 });\nconst conn4 = await Deno.connectTls({ caCerts: [caCert], hostname: \"golang.org\", port: 80});\n```\n\nRequires `allow-net` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "ConnectTlsOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ConnectTlsOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "TlsConn",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "TlsConn"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "StartTlsOptions",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6169,
            "col": 2
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "hostname",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6172,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "A literal IP address or host name that can be resolved to an IP address.\nIf not specified, defaults to `127.0.0.1`."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "caCerts",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6177,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "A list of root certificates that will be used in addition to the\ndefault root certificates to verify the peer's certificate.\n\nMust be in PEM format."
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "startTls",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6194,
            "col": 2
          },
          "jsDoc": {
            "doc": "Start TLS handshake from an existing connection using an optional list of\nCA certificates, and hostname (default is \"127.0.0.1\"). Specifying CA certs\nis optional. By default the configured root certificates are used. Using\nthis function requires that the other end of the connection is prepared for\na TLS handshake.\n\n```ts\nconst conn = await Deno.connect({ port: 80, hostname: \"127.0.0.1\" });\nconst caCert = await Deno.readTextFile(\"./certs/my_custom_root_CA.pem\");\nconst tlsConn = await Deno.startTls(conn, { caCerts: [caCert], hostname: \"localhost\" });\n```\n\nRequires `allow-net` permission."
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "conn",
                "optional": false,
                "tsType": {
                  "repr": "Conn",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Conn"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "StartTlsOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "StartTlsOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "TlsConn",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "TlsConn"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "shutdown",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6209,
            "col": 2
          },
          "jsDoc": {
            "doc": "Shutdown socket send operations.\n\nMatches behavior of POSIX shutdown(3).\n\n```ts\nconst listener = Deno.listen({ port: 80 });\nconst conn = await listener.accept();\nDeno.shutdown(conn.rid);\n```"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rid",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        }
      ]
    }
  },
  {
    "kind": "namespace",
    "name": "WebAssembly",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6227,
      "col": 0
    },
    "namespaceDef": {
      "elements": [
        {
          "kind": "class",
          "name": "CompileError",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6233,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `WebAssembly.CompileError` object indicates an error during WebAssembly decoding or validation.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/CompileError)"
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "jsDoc": {
                  "doc": "Creates a new `WebAssembly.CompileError` object."
                },
                "accessibility": null,
                "name": "constructor",
                "params": [],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6235,
                  "col": 4
                }
              }
            ],
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "Error",
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "class",
          "name": "Global",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6245,
            "col": 2
          },
          "jsDoc": {
            "doc": "A `WebAssembly.Global` object represents a global variable instance, accessible from\nboth JavaScript and importable/exportable across one or more `WebAssembly.Module`\ninstances. This allows dynamic linking of multiple modules.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Global)"
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "jsDoc": {
                  "doc": "Creates a new `Global` object."
                },
                "accessibility": null,
                "name": "constructor",
                "params": [
                  {
                    "kind": "identifier",
                    "name": "descriptor",
                    "optional": false,
                    "tsType": {
                      "repr": "GlobalDescriptor",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GlobalDescriptor"
                      }
                    }
                  },
                  {
                    "kind": "identifier",
                    "name": "v",
                    "optional": true,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    }
                  }
                ],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6247,
                  "col": 4
                }
              }
            ],
            "properties": [
              {
                "jsDoc": {
                  "doc": "The value contained inside the global variable — this can be used to directly set\nand get the global's value."
                },
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                },
                "readonly": false,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "value",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6253,
                  "col": 4
                }
              }
            ],
            "indexSignatures": [],
            "methods": [
              {
                "jsDoc": {
                  "doc": "Old-style method that returns the value contained inside the global variable."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "valueOf",
                "kind": "method",
                "functionDef": {
                  "params": [],
                  "returnType": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6256,
                  "col": 4
                }
              }
            ],
            "extends": null,
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "class",
          "name": "Instance",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6266,
            "col": 2
          },
          "jsDoc": {
            "doc": "A `WebAssembly.Instance` object is a stateful, executable instance of a `WebAssembly.Module`.\nInstance objects contain all the Exported WebAssembly functions that allow calling into\nWebAssembly code from JavaScript.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Instance)"
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "jsDoc": {
                  "doc": "Creates a new Instance object."
                },
                "accessibility": null,
                "name": "constructor",
                "params": [
                  {
                    "kind": "identifier",
                    "name": "module",
                    "optional": false,
                    "tsType": {
                      "repr": "Module",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Module"
                      }
                    }
                  },
                  {
                    "kind": "identifier",
                    "name": "importObject",
                    "optional": true,
                    "tsType": {
                      "repr": "Imports",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Imports"
                      }
                    }
                  }
                ],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6268,
                  "col": 4
                }
              }
            ],
            "properties": [
              {
                "jsDoc": {
                  "doc": "Returns an object containing as its members all the functions exported from the\nWebAssembly module instance, to allow them to be accessed and used by JavaScript.\nRead-only."
                },
                "tsType": {
                  "repr": "Exports",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Exports"
                  }
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "exports",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6275,
                  "col": 4
                }
              }
            ],
            "indexSignatures": [],
            "methods": [],
            "extends": null,
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "class",
          "name": "LinkError",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6284,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `WebAssembly.LinkError` object indicates an error during module instantiation\n(besides traps from the start function).\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/LinkError)"
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "jsDoc": {
                  "doc": "Creates a new WebAssembly.LinkError object."
                },
                "accessibility": null,
                "name": "constructor",
                "params": [],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6286,
                  "col": 4
                }
              }
            ],
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "Error",
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "class",
          "name": "Memory",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6298,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `WebAssembly.Memory` object is a resizable `ArrayBuffer` or `SharedArrayBuffer` that\nholds the raw bytes of memory accessed by a WebAssembly Instance.\n\nA memory created by JavaScript or in WebAssembly code will be accessible and mutable\nfrom both JavaScript and WebAssembly.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory)"
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "jsDoc": {
                  "doc": "Creates a new `Memory` object."
                },
                "accessibility": null,
                "name": "constructor",
                "params": [
                  {
                    "kind": "identifier",
                    "name": "descriptor",
                    "optional": false,
                    "tsType": {
                      "repr": "MemoryDescriptor",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MemoryDescriptor"
                      }
                    }
                  }
                ],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6300,
                  "col": 4
                }
              }
            ],
            "properties": [
              {
                "jsDoc": {
                  "doc": "An accessor property that returns the buffer contained in the memory."
                },
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "ArrayBuffer",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ArrayBuffer"
                      }
                    },
                    {
                      "repr": "SharedArrayBuffer",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "SharedArrayBuffer"
                      }
                    }
                  ]
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "buffer",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6303,
                  "col": 4
                }
              }
            ],
            "indexSignatures": [],
            "methods": [
              {
                "jsDoc": {
                  "doc": "Increases the size of the memory instance by a specified number of WebAssembly\npages (each one is 64KB in size)."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "grow",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "delta",
                      "optional": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6309,
                  "col": 4
                }
              }
            ],
            "extends": null,
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "class",
          "name": "Module",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6318,
            "col": 2
          },
          "jsDoc": {
            "doc": "A `WebAssembly.Module` object contains stateless WebAssembly code that has already been compiled\nby the browser — this can be efficiently shared with Workers, and instantiated multiple times.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Module)"
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "jsDoc": {
                  "doc": "Creates a new `Module` object."
                },
                "accessibility": null,
                "name": "constructor",
                "params": [
                  {
                    "kind": "identifier",
                    "name": "bytes",
                    "optional": false,
                    "tsType": {
                      "repr": "BufferSource",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "BufferSource"
                      }
                    }
                  }
                ],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6320,
                  "col": 4
                }
              }
            ],
            "properties": [],
            "indexSignatures": [],
            "methods": [
              {
                "jsDoc": {
                  "doc": "Given a `Module` and string, returns a copy of the contents of all custom sections in the\nmodule with the given string name."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": true,
                "name": "customSections",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "moduleObject",
                      "optional": false,
                      "tsType": {
                        "repr": "Module",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Module"
                        }
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "sectionName",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "ArrayBuffer",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ArrayBuffer"
                      }
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6326,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Given a `Module`, returns an array containing descriptions of all the declared exports."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": true,
                "name": "exports",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "moduleObject",
                      "optional": false,
                      "tsType": {
                        "repr": "Module",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Module"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "ModuleExportDescriptor",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ModuleExportDescriptor"
                      }
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6332,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Given a `Module`, returns an array containing descriptions of all the declared imports."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": true,
                "name": "imports",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "moduleObject",
                      "optional": false,
                      "tsType": {
                        "repr": "Module",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Module"
                        }
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "ModuleImportDescriptor",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ModuleImportDescriptor"
                      }
                    }
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6335,
                  "col": 4
                }
              }
            ],
            "extends": null,
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "class",
          "name": "RuntimeError",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6344,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `WebAssembly.RuntimeError` object is the error type that is thrown whenever WebAssembly\nspecifies a trap.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/RuntimeError)"
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "jsDoc": {
                  "doc": "Creates a new `WebAssembly.RuntimeError` object."
                },
                "accessibility": null,
                "name": "constructor",
                "params": [],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6346,
                  "col": 4
                }
              }
            ],
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "Error",
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "class",
          "name": "Table",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6357,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `WebAssembly.Table()` object is a JavaScript wrapper object — an array-like structure\nrepresenting a WebAssembly Table, which stores function references. A table created by\nJavaScript or in WebAssembly code will be accessible and mutable from both JavaScript\nand WebAssembly.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Table)"
          },
          "classDef": {
            "isAbstract": false,
            "constructors": [
              {
                "jsDoc": {
                  "doc": "Creates a new `Table` object."
                },
                "accessibility": null,
                "name": "constructor",
                "params": [
                  {
                    "kind": "identifier",
                    "name": "descriptor",
                    "optional": false,
                    "tsType": {
                      "repr": "TableDescriptor",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "TableDescriptor"
                      }
                    }
                  }
                ],
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6359,
                  "col": 4
                }
              }
            ],
            "properties": [
              {
                "jsDoc": {
                  "doc": "Returns the length of the table, i.e. the number of elements."
                },
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "readonly": true,
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "length",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6362,
                  "col": 4
                }
              }
            ],
            "indexSignatures": [],
            "methods": [
              {
                "jsDoc": {
                  "doc": "Accessor function — gets the element stored at a given index."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "get",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "index",
                      "optional": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Function",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Function"
                        }
                      },
                      {
                        "repr": "null",
                        "kind": "keyword",
                        "keyword": "null"
                      }
                    ]
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6365,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Increases the size of the `Table` instance by a specified number of elements."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "grow",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "delta",
                      "optional": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6368,
                  "col": 4
                }
              },
              {
                "jsDoc": {
                  "doc": "Sets an element stored at a given index to a given value."
                },
                "accessibility": null,
                "optional": false,
                "isAbstract": false,
                "isStatic": false,
                "name": "set",
                "kind": "method",
                "functionDef": {
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "index",
                      "optional": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "value",
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "Function",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Function"
                            }
                          },
                          {
                            "repr": "null",
                            "kind": "keyword",
                            "keyword": "null"
                          }
                        ]
                      }
                    }
                  ],
                  "returnType": {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  },
                  "isAsync": false,
                  "isGenerator": false,
                  "typeParams": []
                },
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6371,
                  "col": 4
                }
              }
            ],
            "extends": null,
            "implements": [],
            "typeParams": [],
            "superTypeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GlobalDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6375,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `GlobalDescriptor` describes the options you can pass to `new WebAssembly.Global()`."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "mutable",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6376,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "value",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6377,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "ValueType",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ValueType"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "MemoryDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6381,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `MemoryDescriptor` describes the options you can pass to `new WebAssembly.Memory()`."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "initial",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6382,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "maximum",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6383,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "shared",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6384,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ModuleExportDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6388,
            "col": 2
          },
          "jsDoc": {
            "doc": "A `ModuleExportDescriptor` is the description of a declared export in a `WebAssembly.Module`."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "kind",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6389,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "ImportExportKind",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ImportExportKind"
                  }
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6390,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ModuleImportDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6394,
            "col": 2
          },
          "jsDoc": {
            "doc": "A `ModuleImportDescriptor` is the description of a declared import in a `WebAssembly.Module`."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "kind",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6395,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "ImportExportKind",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ImportExportKind"
                  }
                },
                "typeParams": []
              },
              {
                "name": "module",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6396,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6397,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "TableDescriptor",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6401,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `TableDescriptor` describes the options you can pass to `new WebAssembly.Table()`."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "element",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6402,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "TableKind",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "TableKind"
                  }
                },
                "typeParams": []
              },
              {
                "name": "initial",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6403,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "maximum",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6404,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "WebAssemblyInstantiatedSource",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6408,
            "col": 2
          },
          "jsDoc": {
            "doc": "The value returned from `WebAssembly.instantiate`."
          },
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "instance",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6410,
                  "col": 4
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Instance",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Instance"
                  }
                },
                "typeParams": []
              },
              {
                "name": "module",
                "location": {
                  "filename": "https://doc-proxy.deno.dev/builtin/stable",
                  "line": 6416,
                  "col": 4
                },
                "jsDoc": {
                  "doc": "A `WebAssembly.Module` object representing the compiled WebAssembly module.\nThis `Module` can be instantiated again, or shared via postMessage()."
                },
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Module",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Module"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "ImportExportKind",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6419,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "function",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "function"
                  }
                },
                {
                  "repr": "global",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "global"
                  }
                },
                {
                  "repr": "memory",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "memory"
                  }
                },
                {
                  "repr": "table",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "table"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "TableKind",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6420,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "anyfunc",
              "kind": "literal",
              "literal": {
                "kind": "string",
                "string": "anyfunc"
              }
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "ValueType",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6421,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "f32",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "f32"
                  }
                },
                {
                  "repr": "f64",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "f64"
                  }
                },
                {
                  "repr": "i32",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "i32"
                  }
                },
                {
                  "repr": "i64",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "i64"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "ExportValue",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6422,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Function",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Function"
                  }
                },
                {
                  "repr": "Global",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Global"
                  }
                },
                {
                  "repr": "Memory",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Memory"
                  }
                },
                {
                  "repr": "Table",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Table"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "Exports",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6423,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "Record",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "ExportValue",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ExportValue"
                    }
                  }
                ],
                "typeName": "Record"
              }
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "ImportValue",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6424,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "ExportValue",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ExportValue"
                  }
                },
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "ModuleImports",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6425,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "Record",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "ImportValue",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ImportValue"
                    }
                  }
                ],
                "typeName": "Record"
              }
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "Imports",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6426,
            "col": 2
          },
          "typeAliasDef": {
            "tsType": {
              "repr": "Record",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "ModuleImports",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ModuleImports"
                    }
                  }
                ],
                "typeName": "Record"
              }
            },
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "compile",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6436,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `WebAssembly.compile()` function compiles WebAssembly binary code into a\n`WebAssembly.Module` object. This function is useful if it is necessary to compile\na module before it can be instantiated (otherwise, the `WebAssembly.instantiate()`\nfunction should be used).\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/compile)"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bytes",
                "optional": false,
                "tsType": {
                  "repr": "BufferSource",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BufferSource"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Module",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Module"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "compileStreaming",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6446,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `WebAssembly.compileStreaming()` function compiles a `WebAssembly.Module`\ndirectly from a streamed underlying source. This function is useful if it is\nnecessary to a compile a module before it can be instantiated (otherwise, the\n`WebAssembly.instantiateStreaming()` function should be used).\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/compileStreaming)"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "source",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Response",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Response"
                      }
                    },
                    {
                      "repr": "Promise",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "Response",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Response"
                            }
                          }
                        ],
                        "typeName": "Promise"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Module",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Module"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "instantiate",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6461,
            "col": 2
          },
          "jsDoc": {
            "doc": "The WebAssembly.instantiate() function allows you to compile and instantiate\nWebAssembly code.\n\nThis overload takes the WebAssembly binary code, in the form of a typed\narray or ArrayBuffer, and performs both compilation and instantiation in one step.\nThe returned Promise resolves to both a compiled WebAssembly.Module and its first\nWebAssembly.Instance.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiate)"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bytes",
                "optional": false,
                "tsType": {
                  "repr": "BufferSource",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BufferSource"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "importObject",
                "optional": true,
                "tsType": {
                  "repr": "Imports",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Imports"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "WebAssemblyInstantiatedSource",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "WebAssemblyInstantiatedSource"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "instantiate",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6476,
            "col": 2
          },
          "jsDoc": {
            "doc": "The WebAssembly.instantiate() function allows you to compile and instantiate\nWebAssembly code.\n\nThis overload takes an already-compiled WebAssembly.Module and returns\na Promise that resolves to an Instance of that Module. This overload is useful\nif the Module has already been compiled.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiate)"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "moduleObject",
                "optional": false,
                "tsType": {
                  "repr": "Module",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Module"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "importObject",
                "optional": true,
                "tsType": {
                  "repr": "Imports",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Imports"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Instance",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Instance"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "instantiateStreaming",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6488,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `WebAssembly.instantiateStreaming()` function compiles and instantiates a\nWebAssembly module directly from a streamed underlying source. This is the most\nefficient, optimized way to load wasm code.\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiateStreaming)"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "response",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Response",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Response"
                      }
                    },
                    {
                      "repr": "PromiseLike",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "Response",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Response"
                            }
                          }
                        ],
                        "typeName": "PromiseLike"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "importObject",
                "optional": true,
                "tsType": {
                  "repr": "Imports",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Imports"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "WebAssemblyInstantiatedSource",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "WebAssemblyInstantiatedSource"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        },
        {
          "kind": "function",
          "name": "validate",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6500,
            "col": 2
          },
          "jsDoc": {
            "doc": "The `WebAssembly.validate()` function validates a given typed array of\nWebAssembly binary code, returning whether the bytes form a valid wasm\nmodule (`true`) or not (`false`).\n\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/validate)"
          },
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bytes",
                "optional": false,
                "tsType": {
                  "repr": "BufferSource",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "BufferSource"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          }
        }
      ]
    }
  },
  {
    "kind": "function",
    "name": "setTimeout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6508,
      "col": 0
    },
    "jsDoc": {
      "doc": "Sets a timer which executes a function once after the timer expires. Returns\nan id which may be used to cancel the timeout.\n\n    setTimeout(() => { console.log('hello'); }, 500);"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "cb",
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "void",
                "kind": "keyword",
                "keyword": "void"
              },
              "params": [
                {
                  "kind": "rest",
                  "arg": {
                    "kind": "identifier",
                    "name": "args",
                    "optional": false,
                    "tsType": null
                  },
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          }
        },
        {
          "kind": "identifier",
          "name": "delay",
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        },
        {
          "kind": "rest",
          "arg": {
            "kind": "identifier",
            "name": "args",
            "optional": false,
            "tsType": null
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            }
          }
        }
      ],
      "returnType": {
        "repr": "number",
        "kind": "keyword",
        "keyword": "number"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "setInterval",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6522,
      "col": 0
    },
    "jsDoc": {
      "doc": "Repeatedly calls a function , with a fixed time delay between each call.\n\n    // Outputs 'hello' to the console every 500ms\n    setInterval(() => { console.log('hello'); }, 500);"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "cb",
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "void",
                "kind": "keyword",
                "keyword": "void"
              },
              "params": [
                {
                  "kind": "rest",
                  "arg": {
                    "kind": "identifier",
                    "name": "args",
                    "optional": false,
                    "tsType": null
                  },
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          }
        },
        {
          "kind": "identifier",
          "name": "delay",
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        },
        {
          "kind": "rest",
          "arg": {
            "kind": "identifier",
            "name": "args",
            "optional": false,
            "tsType": null
          },
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            }
          }
        }
      ],
      "returnType": {
        "repr": "number",
        "kind": "keyword",
        "keyword": "number"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "clearInterval",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6538,
      "col": 0
    },
    "jsDoc": {
      "doc": "Cancels a timed, repeating action which was previously started by a call\nto `setInterval()`\n\n    const id = setInterval(() => {console.log('hello');}, 500);\n    ...\n    clearInterval(id);"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "id",
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        }
      ],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "clearTimeout",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6546,
      "col": 0
    },
    "jsDoc": {
      "doc": "Cancels a scheduled action initiated by `setTimeout()`\n\n    const id = setTimeout(() => {console.log('hello');}, 500);\n    ...\n    clearTimeout(id);"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "id",
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          }
        }
      ],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "queueMicrotask",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6560,
      "col": 0
    },
    "jsDoc": {
      "doc": "A microtask is a short function which is executed after the function or\nmodule which created it exits and only if the JavaScript execution stack is\nempty, but before returning control to the event loop being used to drive the\nscript's execution environment. This event loop may be either the main event\nloop or the event loop driving a web worker.\n\n    queueMicrotask(() => { console.log('This event loop stack is complete'); });"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "func",
          "optional": false,
          "tsType": {
            "repr": "VoidFunction",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "VoidFunction"
            }
          }
        }
      ],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "dispatchEvent",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6569,
      "col": 0
    },
    "jsDoc": {
      "doc": "Dispatches an event in the global scope, synchronously invoking any\nregistered event listeners for this event in the appropriate order. Returns\nfalse if event is cancelable and at least one of the event handlers which\nhandled this event called Event.preventDefault(). Otherwise it returns true.\n\n    dispatchEvent(new Event('unload'));"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "event",
          "optional": false,
          "tsType": {
            "repr": "Event",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Event"
            }
          }
        }
      ],
      "returnType": {
        "repr": "boolean",
        "kind": "keyword",
        "keyword": "boolean"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "console",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6583,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "Console",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "Console"
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "class",
    "name": "ErrorEvent",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6593,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "type",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "eventInitDict",
              "optional": true,
              "tsType": {
                "repr": "ErrorEventInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ErrorEventInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6599,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6594,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "filename",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6595,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lineno",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6596,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "colno",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6597,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "error",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6598,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Event",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Worker",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6616,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "specifier",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "URL",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "URL"
                    }
                  }
                ]
              }
            },
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "WorkerOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "WorkerOptions"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6620,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "void",
                "kind": "keyword",
                "keyword": "void"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "e",
                  "optional": false,
                  "tsType": {
                    "repr": "ErrorEvent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ErrorEvent"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "onerror",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6617,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "void",
                "kind": "keyword",
                "keyword": "void"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "e",
                  "optional": false,
                  "tsType": {
                    "repr": "MessageEvent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageEvent"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "onmessage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6618,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "void",
                "kind": "keyword",
                "keyword": "void"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "e",
                  "optional": false,
                  "tsType": {
                    "repr": "MessageEvent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageEvent"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "onmessageerror",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6619,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "postMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "transfer",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Transferable",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Transferable"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6624,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "postMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "StructuredSerializeOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "StructuredSerializeOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6625,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "Worker",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Worker"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "indexedAccess",
                          "indexedAccess": {
                            "readonly": false,
                            "objType": {
                              "repr": "WorkerEventMap",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "WorkerEventMap"
                              }
                            },
                            "indexType": {
                              "repr": "K",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "K"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "AddEventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AddEventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "WorkerEventMap",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "WorkerEventMap"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6626,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "EventListenerOrEventListenerObject",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EventListenerOrEventListenerObject"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "AddEventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AddEventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6631,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "Worker",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Worker"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "indexedAccess",
                          "indexedAccess": {
                            "readonly": false,
                            "objType": {
                              "repr": "WorkerEventMap",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "WorkerEventMap"
                              }
                            },
                            "indexType": {
                              "repr": "K",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "K"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "EventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "K",
                "constraint": {
                  "repr": "",
                  "kind": "typeOperator",
                  "typeOperator": {
                    "operator": "keyof",
                    "tsType": {
                      "repr": "WorkerEventMap",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "WorkerEventMap"
                      }
                    }
                  }
                }
              }
            ]
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6636,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeEventListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "EventListenerOrEventListenerObject",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EventListenerOrEventListenerObject"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    {
                      "repr": "EventListenerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EventListenerOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6641,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "terminate",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6646,
            "col": 2
          }
        }
      ],
      "extends": "EventTarget",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "PerformanceEntryList",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6649,
      "col": 0
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "array",
        "array": {
          "repr": "PerformanceEntry",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "PerformanceEntry"
          }
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Performance",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6651,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6652,
            "col": 2
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Removes the stored timestamp with the associated name."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clearMarks",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "markName",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6655,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes stored timestamp with the associated name."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clearMeasures",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "measureName",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6658,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEntries",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "PerformanceEntryList",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PerformanceEntryList"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6660,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEntriesByName",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "type",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "PerformanceEntryList",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PerformanceEntryList"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6661,
            "col": 2
          }
        },
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEntriesByType",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "type",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "PerformanceEntryList",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PerformanceEntryList"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6662,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Stores a timestamp with the associated name (a \"mark\")."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mark",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "markName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "PerformanceMarkOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PerformanceMarkOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "PerformanceMark",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PerformanceMark"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6665,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Stores the `DOMHighResTimeStamp` duration between two marks along with the\nassociated name (a \"measure\")."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "measure",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "measureName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "PerformanceMeasureOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PerformanceMeasureOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "PerformanceMeasure",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PerformanceMeasure"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6669,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Stores the `DOMHighResTimeStamp` duration between two marks along with the\nassociated name (a \"measure\")."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "measure",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "measureName",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "startMark",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "endMark",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "PerformanceMeasure",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "PerformanceMeasure"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6675,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a current time from Deno's start in milliseconds.\n\nUse the permission flag `--allow-hrtime` return a precise value.\n\n```ts\nconst t = performance.now();\nconsole.log(`${t} ms since start!`);\n```"
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "now",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6690,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "performance",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6693,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "Performance",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "Performance"
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "interface",
    "name": "PerformanceMarkOptions",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6695,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "detail",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6697,
            "col": 2
          },
          "jsDoc": {
            "doc": "Metadata to be included in the mark."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "typeParams": []
        },
        {
          "name": "startTime",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6700,
            "col": 2
          },
          "jsDoc": {
            "doc": "Timestamp to be used as the mark time."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "PerformanceMeasureOptions",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6703,
      "col": 0
    },
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "detail",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6705,
            "col": 2
          },
          "jsDoc": {
            "doc": "Metadata to be included in the measure."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "typeParams": []
        },
        {
          "name": "start",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6709,
            "col": 2
          },
          "jsDoc": {
            "doc": "Timestamp to be used as the start time or string to be used as start\nmark."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "duration",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6712,
            "col": 2
          },
          "jsDoc": {
            "doc": "Duration between the start and end times."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "end",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6715,
            "col": 2
          },
          "jsDoc": {
            "doc": "Timestamp to be used as the end time or string to be used as end mark."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "PerformanceEntry",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6722,
      "col": 0
    },
    "jsDoc": {
      "doc": "Encapsulates a single performance metric that is part of the performance\ntimeline. A performance entry can be directly created by making a performance\nmark or measure (for example by calling the `.mark()` method) at an explicit\npoint in an application."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "duration",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6723,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "entryType",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6724,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6725,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "startTime",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6726,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toJSON",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6727,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "PerformanceMark",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6734,
      "col": 0
    },
    "jsDoc": {
      "doc": "`PerformanceMark` is an abstract interface for `PerformanceEntry` objects\nwith an entryType of `\"mark\"`. Entries of this type are created by calling\n`performance.mark()` to add a named `DOMHighResTimeStamp` (the mark) to the\nperformance timeline."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "name",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "options",
              "optional": true,
              "tsType": {
                "repr": "PerformanceMarkOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PerformanceMarkOptions"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6737,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "detail",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6735,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "mark",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "mark"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "entryType",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6736,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "PerformanceEntry",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "PerformanceMeasure",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6744,
      "col": 0
    },
    "jsDoc": {
      "doc": "`PerformanceMeasure` is an abstract interface for `PerformanceEntry` objects\nwith an entryType of `\"measure\"`. Entries of this type are created by calling\n`performance.measure()` to add a named `DOMHighResTimeStamp` (the measure)\nbetween two marks to the performance timeline."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "detail",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6745,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "measure",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "measure"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "entryType",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6746,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "PerformanceEntry",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CustomEventInit",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6749,
      "col": 0
    },
    "interfaceDef": {
      "extends": [
        {
          "repr": "EventInit",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "EventInit"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "detail",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6750,
            "col": 2
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "T",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "T"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": [
        {
          "name": "T",
          "default": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "CustomEvent",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6753,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "typeArg",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "eventInitDict",
              "optional": true,
              "tsType": {
                "repr": "CustomEventInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    }
                  ],
                  "typeName": "CustomEventInit"
                }
              }
            }
          ],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6754,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Returns any custom data event was created with. Typically used for\nsynthetic events."
          },
          "tsType": {
            "repr": "T",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "T"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "detail",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6757,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Event",
      "implements": [],
      "typeParams": [
        {
          "name": "T",
          "default": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          }
        }
      ],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Window",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6776,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "intersection",
            "intersection": [
              {
                "repr": "Window",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Window"
                }
              },
              {
                "repr": "globalThis",
                "kind": "typeQuery",
                "typeQuery": "globalThis"
              }
            ]
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "window",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6778,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "intersection",
            "intersection": [
              {
                "repr": "Window",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Window"
                }
              },
              {
                "repr": "globalThis",
                "kind": "typeQuery",
                "typeQuery": "globalThis"
              }
            ]
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "self",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6779,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "Window",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Window"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "Event",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Event"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onload",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6780,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "parenthesized",
                "parenthesized": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "Window",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Window"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "Event",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Event"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onunload",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6781,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "void",
                "kind": "keyword",
                "keyword": "void"
              },
              "params": [],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "close",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6782,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "closed",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6783,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "void",
                "kind": "keyword",
                "keyword": "void"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "message",
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "alert",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6784,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "message",
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "confirm",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6785,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "null",
                    "kind": "keyword",
                    "keyword": "null"
                  }
                ]
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "message",
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                {
                  "kind": "identifier",
                  "name": "defaultValue",
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ],
              "typeParams": []
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "prompt",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6786,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Deno",
            "kind": "typeQuery",
            "typeQuery": "Deno"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "Deno",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6787,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Navigator",
            "kind": "typeQuery",
            "typeQuery": "Navigator"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "Navigator",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6788,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Navigator",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Navigator"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "navigator",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6789,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Location",
            "kind": "typeQuery",
            "typeQuery": "Location"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "Location",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6790,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Location",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Location"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "location",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6791,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Storage",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Storage"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "localStorage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6792,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "Storage",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Storage"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sessionStorage",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6793,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "new",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Window",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Window"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6777,
            "col": 2
          }
        }
      ],
      "extends": "EventTarget",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "window",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6796,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "intersection",
        "intersection": [
          {
            "repr": "Window",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Window"
            }
          },
          {
            "repr": "globalThis",
            "kind": "typeQuery",
            "typeQuery": "globalThis"
          }
        ]
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "self",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6797,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "intersection",
        "intersection": [
          {
            "repr": "Window",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Window"
            }
          },
          {
            "repr": "globalThis",
            "kind": "typeQuery",
            "typeQuery": "globalThis"
          }
        ]
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "onload",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6798,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "",
            "kind": "parenthesized",
            "parenthesized": {
              "repr": "",
              "kind": "fnOrConstructor",
              "fnOrConstructor": {
                "constructor": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                },
                "params": [
                  {
                    "kind": "identifier",
                    "name": "this",
                    "optional": false,
                    "tsType": {
                      "repr": "Window",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Window"
                      }
                    }
                  },
                  {
                    "kind": "identifier",
                    "name": "ev",
                    "optional": false,
                    "tsType": {
                      "repr": "Event",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Event"
                      }
                    }
                  }
                ],
                "typeParams": []
              }
            }
          },
          {
            "repr": "null",
            "kind": "keyword",
            "keyword": "null"
          }
        ]
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "onunload",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6799,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "",
            "kind": "parenthesized",
            "parenthesized": {
              "repr": "",
              "kind": "fnOrConstructor",
              "fnOrConstructor": {
                "constructor": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                },
                "params": [
                  {
                    "kind": "identifier",
                    "name": "this",
                    "optional": false,
                    "tsType": {
                      "repr": "Window",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Window"
                      }
                    }
                  },
                  {
                    "kind": "identifier",
                    "name": "ev",
                    "optional": false,
                    "tsType": {
                      "repr": "Event",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Event"
                      }
                    }
                  }
                ],
                "typeParams": []
              }
            }
          },
          {
            "repr": "null",
            "kind": "keyword",
            "keyword": "null"
          }
        ]
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "localStorage",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6800,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "Storage",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "Storage"
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "variable",
    "name": "sessionStorage",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6801,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "Storage",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "Storage"
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "class",
    "name": "Navigator",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6803,
      "col": 0
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6804,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "GPU",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GPU"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "gpu",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6805,
            "col": 2
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hardwareConcurrency",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6806,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "navigator",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6809,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "Navigator",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "Navigator"
        }
      },
      "kind": "var"
    }
  },
  {
    "kind": "function",
    "name": "alert",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6816,
      "col": 0
    },
    "jsDoc": {
      "doc": "Shows the given message and waits for the enter key pressed.\nIf the stdin is not interactive, it does nothing.",
      "tags": [
        {
          "kind": "param",
          "name": "message"
        }
      ]
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "message",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "confirm",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6824,
      "col": 0
    },
    "jsDoc": {
      "doc": "Shows the given message and waits for the answer. Returns the user's answer as boolean.\nOnly `y` and `Y` are considered as true.\nIf the stdin is not interactive, it returns false.",
      "tags": [
        {
          "kind": "param",
          "name": "message"
        }
      ]
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "message",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": {
        "repr": "boolean",
        "kind": "keyword",
        "keyword": "boolean"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "prompt",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6835,
      "col": 0
    },
    "jsDoc": {
      "doc": "Shows the given message and waits for the user's input. Returns the user's input as string.\nIf the default value is given and the user inputs the empty string, then it returns the given\ndefault value.\nIf the default value is not given and the user inputs the empty string, it returns null.\nIf the stdin is not interactive, it returns null.",
      "tags": [
        {
          "kind": "param",
          "name": "message"
        },
        {
          "kind": "param",
          "name": "defaultValue"
        }
      ]
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "message",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "defaultValue",
          "optional": true,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        }
      ],
      "returnType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          {
            "repr": "null",
            "kind": "keyword",
            "keyword": "null"
          }
        ]
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "addEventListener",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6844,
      "col": 0
    },
    "jsDoc": {
      "doc": "Registers an event listener in the global scope, which will be called\nsynchronously whenever the event `type` is dispatched.\n\n    addEventListener('unload', () => { console.log('All finished!'); });\n    ...\n    dispatchEvent(new Event('unload'));"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "type",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "callback",
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "EventListenerOrEventListenerObject",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EventListenerOrEventListenerObject"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          }
        },
        {
          "kind": "identifier",
          "name": "options",
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "AddEventListenerOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "AddEventListenerOptions"
                }
              },
              {
                "repr": "undefined",
                "kind": "keyword",
                "keyword": "undefined"
              }
            ]
          }
        }
      ],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "function",
    "name": "removeEventListener",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6856,
      "col": 0
    },
    "jsDoc": {
      "doc": "Remove a previously registered event listener from the global scope\n\n    const lstnr = () => { console.log('hello'); };\n    addEventListener('load', lstnr);\n    removeEventListener('load', lstnr);"
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "type",
          "optional": false,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "kind": "identifier",
          "name": "callback",
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "EventListenerOrEventListenerObject",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EventListenerOrEventListenerObject"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          }
        },
        {
          "kind": "identifier",
          "name": "options",
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              },
              {
                "repr": "EventListenerOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EventListenerOptions"
                }
              },
              {
                "repr": "undefined",
                "kind": "keyword",
                "keyword": "undefined"
              }
            ]
          }
        }
      ],
      "returnType": {
        "repr": "void",
        "kind": "keyword",
        "keyword": "void"
      },
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Location",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6867,
      "col": 0
    },
    "jsDoc": {
      "doc": "The location (URL) of the object it is linked to. Changes done on it are\nreflected on the object it relates to. Accessible via\n`globalThis.location`."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6868,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Returns a DOMStringList object listing the origins of the ancestor\nbrowsing contexts, from the parent browsing context to the top-level\nbrowsing context.\n\nAlways empty in Deno."
          },
          "tsType": {
            "repr": "DOMStringList",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DOMStringList"
            }
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ancestorOrigins",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6874,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the Location object's URL's fragment (includes leading \"#\" if\nnon-empty).\n\nCannot be set in Deno."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hash",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6879,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the Location object's URL's host and port (if different from the\ndefault port for the scheme).\n\nCannot be set in Deno."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "host",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6884,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the Location object's URL's host.\n\nCannot be set in Deno."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hostname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6888,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the Location object's URL.\n\nCannot be set in Deno."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "href",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6892,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the Location object's URL's origin."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": true,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "origin",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6895,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the Location object's URL's path.\n\nCannot be set in Deno."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pathname",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6899,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the Location object's URL's port.\n\nCannot be set in Deno."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "port",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6903,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the Location object's URL's scheme.\n\nCannot be set in Deno."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "protocol",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6907,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the Location object's URL's query (includes leading \"?\" if\nnon-empty).\n\nCannot be set in Deno."
          },
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "search",
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6912,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6893,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Navigates to the given URL.\n\nCannot be set in Deno."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "assign",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6916,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Reloads the current page.\n\nDisabled in Deno."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reload",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6920,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "tags": [
              {
                "kind": "deprecated"
              }
            ]
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "forcedReload",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6922,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the current page from the session history and navigates to the\ngiven URL.\n\nDisabled in Deno."
          },
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "replace",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "https://doc-proxy.deno.dev/builtin/stable",
            "line": 6927,
            "col": 2
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "location",
    "location": {
      "filename": "https://doc-proxy.deno.dev/builtin/stable",
      "line": 6932,
      "col": 0
    },
    "variableDef": {
      "tsType": {
        "repr": "Location",
        "kind": "typeRef",
        "typeRef": {
          "typeParams": null,
          "typeName": "Location"
        }
      },
      "kind": "var"
    }
  }
]
