/** @jsx h */
import { h, htmlEntities, removeMarkdown } from "../deps.ts";
import { parseURL } from "../util.ts";

const wrap = (s: string) =>
  s.replace(/(?![^\n]{1,48}$)([^\n]{1,48})\s/g, "$1\n");

function DenoLogo() {
  return (
    <g
      id="deno_logo"
      transform="translate(1021.000000, 455.000000)"
      fill="#000000"
      fill-rule="nonzero"
    >
      <g
        id="deno_logo_circle"
        transform="translate(64.000000, 64.000000) scale(-1, 1) rotate(-180.000000) translate(-64.000000, -64.000000) "
      >
        <path
          d="M58.962799,127.967099 C58.6637152,127.935618 57.7034987,127.825434 56.8377298,127.746731 C44.5280699,126.456002 32.4073049,121.245866 22.5217979,112.966313 C20.6958126,111.455216 16.5401217,107.299699 15.0289614,105.47379 C6.84350981,95.6988804 2.05816885,84.7276859 0.295148497,71.7416953 C-0.0983828322,68.8611665 -0.0983828322,59.133479 0.295148497,56.2529502 C2.05816885,43.2669596 6.84350981,32.2957651 15.0289614,22.5208558 C16.5401217,20.6949468 20.6958126,16.5394298 22.5217979,15.0283328 C32.2971162,6.84322353 43.2687696,2.05808275 56.2553034,0.29513615 C59.1359528,-0.0983787167 68.8640472,-0.0983787167 71.7446966,0.29513615 C84.7312304,2.05808275 95.7028838,6.84322353 105.478202,15.0283328 C107.304187,16.5394298 111.459878,20.6949468 112.971039,22.5208558 C121.15649,32.2957651 125.941831,43.2669596 127.704852,56.2529502 C128.098383,59.133479 128.098383,68.8611665 127.704852,71.7416953 C125.941831,84.7276859 121.15649,95.6988804 112.971039,105.47379 C111.459878,107.299699 107.304187,111.455216 105.478202,112.966313 C95.7343664,121.119941 84.6525241,125.968044 71.8391441,127.683769 C70.4539138,127.872656 68.4390334,127.951359 64.7083564,127.98284 C61.8591896,128.014321 59.2618828,127.998581 58.962799,127.967099 Z M59.7498616,121.167163 C59.7498616,119.325513 59.8757917,115.327402 60.0489455,111.533919 C60.143393,109.676528 60.2535817,107.016368 60.3008055,105.631196 C60.4739593,100.72013 60.9934206,87.8285831 61.0721269,86.6795197 L61.1508332,85.5304563 L60.4424768,85.6091592 C60.0489455,85.6406404 59.6868966,85.735084 59.6239316,85.7823058 C59.5767079,85.8452682 59.4665191,86.9313692 59.4035541,88.2063574 C59.1202115,93.8100091 58.1914776,115.54777 58.0970301,118.72737 L58.0025825,122.221782 L58.4433376,122.284745 C58.6794564,122.316226 59.0729878,122.363448 59.3248478,122.379188 L59.7498616,122.394929 L59.7498616,121.167163 Z M74.8142409,121.544937 C74.8299822,121.529196 74.8772059,116.775537 74.9244297,110.982998 C74.9873947,105.174718 75.066101,99.9645816 75.1133247,99.3979202 C75.1605485,98.8155182 75.1448072,98.3118191 75.066101,98.2803379 C75.003136,98.2331162 74.6096046,98.2331162 74.2160733,98.2803379 L73.4919757,98.3433003 L73.3817869,102.923813 C73.3188219,105.458049 73.2401156,108.259875 73.2086331,109.172829 C73.0827031,111.958915 72.9725143,121.419012 73.0669618,121.655121 C73.1299268,121.828268 73.3030806,121.844008 73.9642132,121.733824 C74.4207096,121.63938 74.7984997,121.560677 74.8142409,121.544937 Z M38.4047224,116.271838 C38.4991699,116.130172 39.2390088,107.457105 40.1520015,96.1081359 C40.4510853,92.2516902 40.7501691,88.725797 40.7973929,88.2850603 C40.8760991,87.48229 40.8603579,87.4508088 40.3566378,87.1359969 C40.0732952,86.9628504 39.7899527,86.821185 39.7269876,86.821185 C39.6797639,86.821185 39.5853164,87.2304405 39.5380926,87.7341395 C39.3177151,89.7804168 38.4676874,99.6655103 37.8695198,106.81174 C37.5232122,111.014479 37.2083871,114.776481 37.1611634,115.185737 C37.0824571,115.878323 37.0981984,115.941285 37.5074709,116.161653 C38.011191,116.429244 38.2945336,116.476465 38.4047224,116.271838 Z M81.7403923,113.107978 C82.1811474,112.950572 82.2283711,112.871869 82.3228187,111.974655 C82.4802312,110.400596 82.4330074,102.876592 82.2598537,102.876592 C81.8033573,102.876592 80.8588821,103.411772 80.7801759,103.710843 C80.7329521,103.89973 80.6857283,106.134895 80.6857283,108.66913 C80.6857283,113.784824 80.6227633,113.485752 81.7403923,113.107978 Z M52.6662977,112.36817 C52.6662977,111.943174 52.7764865,109.597826 52.9024165,107.126552 C53.0283466,104.655279 53.1700178,101.5229 53.2329828,100.169209 C53.3431716,97.4303458 53.3746541,97.5247894 52.3199902,97.461827 C51.8005288,97.4460864 51.8005288,97.4460864 51.7690463,98.2331162 C51.7375638,98.6738528 51.6588575,100.043285 51.56441,101.302532 C51.4857037,102.56178 51.2968087,105.284903 51.1708787,107.362661 C51.0449487,109.44042 50.8875361,111.502437 50.8403124,111.943174 C50.7458648,112.730204 50.7616061,112.761685 51.1866199,112.919091 C51.43848,113.013535 51.8792351,113.092238 52.1625776,113.092238 C52.6662977,113.107978 52.6662977,113.107978 52.6662977,112.36817 Z M96.332534,110.211709 L96.8677366,109.99134 L96.9779254,107.882101 C97.0251491,106.733037 97.0566316,104.246023 97.0251491,102.372893 L96.9779254,98.9414429 L96.3167927,99.2719954 L95.6556601,99.5868073 L95.6084363,104.812685 C95.5769538,107.693214 95.5926951,110.133006 95.6241776,110.24319 C95.6871426,110.479299 95.6871426,110.479299 96.332534,110.211709 Z M67.5890057,108.149691 C67.6834532,108.055247 67.9038308,100.421059 67.919572,96.5488725 L67.9353133,94.2192645 L67.1954744,94.3294487 C66.7704606,94.3766705 66.424153,94.4238922 66.4084117,94.4396328 C66.361188,94.471114 65.8889504,106.134895 65.8889504,107.268217 L65.8889504,108.433022 L66.6917543,108.338578 C67.1482506,108.275616 67.541782,108.196913 67.5890057,108.149691 Z M103.841112,107.032109 C104.030007,106.81174 104.061489,103.36455 104.108713,84.3499117 C104.155937,62.5177069 104.155937,61.9510455 103.872594,61.9510455 C103.69944,61.9510455 103.463322,62.045489 103.32165,62.1556732 C103.085532,62.3288197 103.054049,64.2334317 102.975343,82.8860364 C102.912378,94.1877833 102.833672,104.450651 102.786448,105.694158 L102.692,107.960804 L103.148497,107.630251 C103.416098,107.441364 103.715182,107.173774 103.841112,107.032109 Z M89.7212076,103.805287 C89.7999139,103.742324 89.8786202,102.84511 89.8943614,101.821972 C89.9730677,98.3433003 89.988809,77.0147945 89.9101027,76.9518322 C89.8786202,76.920351 89.5952776,76.999054 89.2804526,77.1249787 L88.7137674,77.3610876 L88.7137674,90.7563337 L88.7137674,104.135839 L89.1545225,104.041396 C89.3906413,103.978433 89.6425014,103.88399 89.7212076,103.805287 Z M46.275349,102.923813 C46.3225727,102.498817 46.401279,101.538641 46.4485027,100.751611 C46.4957265,99.9803222 46.6059153,98.2173756 46.7003628,96.8479438 C46.8892578,94.0775992 46.8577753,93.9044526 45.9605239,93.9044526 C45.4882863,93.9044526 45.4253213,93.9516744 45.3623563,94.4238922 C45.2049437,95.3525873 44.6539999,103.09696 44.7327061,103.222885 C44.8114124,103.333069 45.6299576,103.6164 46.0077476,103.647881 C46.1021952,103.663621 46.2281252,103.333069 46.275349,102.923813 Z M20.2393162,98.9099617 C20.41247,97.2414587 20.7587776,93.7470467 21.0106376,91.1498486 C21.2782389,88.5526504 21.4986165,86.3489672 21.4986165,86.2545236 C21.4986165,86.0656365 20.28654,85.4674939 20.16061,85.5934186 C20.0819037,85.6721216 18.5077784,99.6025479 18.5077784,100.232172 C18.5077784,100.609946 19.7198549,102.199746 19.8772674,102.026599 C19.9244912,101.995118 20.0819037,100.594205 20.2393162,98.9099617 Z M81.9607698,97.2571993 L82.4172662,96.9896092 L82.4330074,93.5896407 C82.4487487,91.7322506 82.4802312,89.6544921 82.4802312,88.9776465 C82.5117137,87.560993 82.3385599,87.3248841 81.4885323,87.6239554 L81.0005534,87.7971019 L81.0005534,89.150793 C81.0005534,89.9063416 80.9533296,92.0942842 80.8903646,94.0303774 L80.7959171,97.5247894 L81.1579659,97.5247894 C81.346861,97.5247894 81.7089098,97.3988646 81.9607698,97.2571993 Z M27.1497264,91.1498486 C27.4330689,88.1276544 27.8895653,83.0277017 28.1886491,79.8166204 L28.7238517,73.9926004 L28.1099428,73.3787172 L27.5117752,72.764834 L27.4015864,74.008341 C27.3386214,74.7009271 27.0237963,77.9120084 26.69323,81.1545709 C26.3626637,84.3971334 25.8904261,89.1035713 25.6543073,91.6063258 L25.2135522,96.1396171 L25.8274611,96.7062785 C26.378405,97.2257181 26.44137,97.2414587 26.5515588,96.958128 C26.6145238,96.800722 26.8821251,94.1877833 27.1497264,91.1498486 Z M15.3595278,89.2452366 C15.7058353,86.1443395 16.618828,77.8962679 17.4058907,70.9231844 C18.1929533,63.950101 18.9327922,57.2288671 19.0744635,55.9696195 C19.2003935,54.7103719 19.4207711,52.80576 19.5467011,51.7196589 C19.7670786,49.8780093 19.7670786,49.7520846 19.5152186,49.5631975 C19.1374285,49.2798667 18.980016,49.3113479 18.980016,49.6419004 C18.980016,49.7835658 18.8383447,50.979851 18.6651909,52.2705797 C18.3818484,54.4270412 17.9096108,58.0788592 16.8549468,66.279709 C16.6345693,67.9324714 16.2095554,71.2222557 15.9104716,73.5990855 C15.5956466,75.9759153 15.1391502,79.5175491 14.8872902,81.4693828 C14.6354301,83.4212166 14.2104163,86.7582226 13.942815,88.9146841 C13.6594724,91.055405 13.4863186,92.9600169 13.5335424,93.1646447 C13.6437312,93.5896407 14.5724651,95.0692566 14.6669126,94.9748131 C14.6983951,94.9275913 15.0132202,92.3618743 15.3595278,89.2452366 Z M10.5427043,82.4610403 C10.7788231,80.5721689 11.2195782,77.1249787 11.518662,74.7796301 C11.8177458,72.4500221 12.1955359,69.5380121 12.3686897,68.3259863 L12.6677735,66.122303 L12.3372072,65.8389723 C12.1483121,65.6815664 11.9594171,65.618604 11.8964521,65.6815664 C11.8334871,65.7445288 11.707557,66.3741526 11.6131095,67.0667387 C11.518662,67.7593249 10.9362356,71.8046577 10.3065855,76.0388777 L9.18895653,83.7517691 L9.55100535,84.8221295 C9.73990039,85.4045315 9.94453668,85.8767493 9.99176044,85.8767493 C10.0547255,85.8767493 10.2908442,84.3341711 10.5427043,82.4610403 Z M96.9621841,84.5230582 C97.1825616,84.3026899 97.2140441,83.326773 97.2140441,76.1018401 L97.2140441,67.9324714 L96.7732891,67.9324714 C95.8130726,67.9324714 95.8288139,67.6963625 95.7658489,76.6370203 L95.7186251,84.7749077 L96.2223452,84.7749077 C96.4899465,84.7749077 96.8362541,84.6647236 96.9621841,84.5230582 Z M62.504581,81.7054918 C66.0621042,81.1703115 69.163131,80.1786541 72.2326754,78.6045946 C74.2160733,77.581456 75.1605485,76.8731292 77.3643239,74.7638895 C80.6385046,71.6315112 82.653385,68.8926477 84.5423354,65.0204614 C87.2970547,59.3853285 88.3674599,54.39556 89.7212076,41.0160545 C90.3351165,35.018888 91.1379204,24.1421371 91.3110742,19.6875488 C91.358298,18.39682 91.4684867,16.2718397 91.5629343,14.9653704 C91.7360881,12.1950257 91.9407243,12.5728 89.5008301,11.3922554 C86.1164607,9.75523354 82.8580213,8.62191073 78.5606592,7.56729089 C73.3030806,6.27656212 69.9029699,5.86730666 64.7083564,5.85156607 L60.9304556,5.83582547 L60.9619381,7.64599386 C60.9619381,8.63765132 61.0563857,10.9515187 61.1508332,12.7616871 C61.6230708,21.5291984 61.5286233,32.5948364 60.9147144,38.7336683 C60.5684068,42.2595615 59.8915329,46.5410033 59.5137429,47.485439 C59.4350366,47.6900667 59.7970854,47.8632132 61.3554695,48.3983934 C64.2046363,49.3900509 66.676013,50.6335579 67.0538031,51.2474411 C67.730677,52.4122451 66.5186005,54.0807481 64.9759577,54.0807481 C64.7083564,54.0807481 63.9055525,53.7974174 63.1657136,53.4668649 C59.6396729,51.8455837 52.5718502,49.9409717 48.4948656,49.5159757 C45.6771813,49.2169044 41.301113,49.3900509 38.2630511,49.9409717 C36.6102195,50.240043 33.6508639,51.3576252 31.1794872,52.6326134 C28.3303204,54.1122293 26.5830413,56.0798036 26.0635799,58.4094117 C25.7802373,59.6686592 25.8589436,62.1871544 26.2209924,63.6038079 C26.6145238,65.1621268 27.7164115,67.4287724 28.7238517,68.7509824 C33.2101088,74.6537053 42.4659657,79.7693986 51.9579413,81.5638264 C54.9802619,82.1304878 59.2618828,82.1934502 62.504581,81.7054918 Z M111.066347,81.2175333 C111.633032,80.9814244 111.695997,80.918462 111.695997,80.3832818 C111.72748,76.0860995 111.633032,66.2639684 111.554326,65.8547129 C111.538585,65.7130476 110.720039,65.697307 110.373732,65.8232317 C110.153354,65.9019347 110.121872,66.7519268 110.121872,73.6935291 C110.121872,78.667557 110.184837,81.4693828 110.279284,81.4693828 C110.357991,81.4693828 110.720039,81.3591987 111.066347,81.2175333 Z M117.945275,72.5759469 L118.51196,72.3398379 L118.401771,59.3066256 C118.275841,42.7002982 118.2601,42.2123397 117.661932,40.7799456 C116.685974,38.434597 116.733198,37.9623792 116.827646,48.2567281 C116.859128,53.4039026 116.937834,58.6140394 116.969317,59.8260652 C117.000799,61.038091 117.032282,64.4538 117.048023,67.4287724 C117.048023,71.017628 117.095247,72.8120558 117.205436,72.8120558 C117.299883,72.8120558 117.630449,72.7018716 117.945275,72.5759469 Z M23.2773781,68.6565388 C23.3718256,67.3815506 23.3403431,67.2556259 22.8838468,66.2482278 L22.3801267,65.1778674 L22.1912316,66.7519268 C21.8921478,69.270422 21.8921478,69.3806061 22.4903154,69.7583804 C22.7579167,69.9472675 23.0412593,70.0731923 23.0884831,70.0417111 C23.1357068,70.0102299 23.2301543,69.3806061 23.2773781,68.6565388 Z M13.5492837,59.1649602 C13.6909549,57.8742314 14.7928426,49.3113479 15.3595278,45.1086092 C16.2095554,38.6077436 16.2725204,37.6790485 15.8947304,38.0725633 C15.8475066,38.1197851 15.4854578,40.3077278 15.1076677,42.9364071 C12.6520322,59.9047681 12.6677735,59.794584 12.8724098,59.9205087 C13.2974236,60.2038394 13.4390949,60.0464335 13.5492837,59.1649602 Z M24.8829859,51.9557678 C24.9774334,51.562253 25.4339298,47.2965518 25.4339298,46.7771122 C25.4339298,46.3363755 24.8672447,45.9271201 24.6153846,46.1789696 C24.5366783,46.2576726 24.3320421,47.5956231 24.1746295,49.1382014 C24.0014757,50.6965203 23.828322,52.3178015 23.7810982,52.7427976 L23.6866507,53.5298273 L24.2375945,52.9002035 C24.5524196,52.5539104 24.8357622,52.1289144 24.8829859,51.9557678 Z M37.5861772,46.0215637 C37.759331,45.8641577 37.8695198,45.2345339 38.011191,43.5345497 C38.2473098,40.4651337 38.2787924,40.7012427 37.633401,40.7012427 C36.9722683,40.7012427 36.9880096,40.6540209 36.767632,43.4243655 C36.5472545,46.241932 36.5472545,46.2104584 36.9722683,46.2104584 C37.1769046,46.2104584 37.4445059,46.1160072 37.5861772,46.0215637 Z M50.0532497,45.7854547 C50.0847322,45.6280488 50.1634385,44.6836131 50.2264035,43.6919556 C50.2736273,42.7002982 50.4152985,40.4651337 50.5412286,38.7336683 C50.9819836,32.3744681 50.9977249,31.5716978 50.7301236,31.5716978 C50.4310398,31.5716978 50.3995573,31.8078067 50.0532497,36.2938762 C49.9273197,38.1512663 49.6912009,41.0790169 49.5337884,42.7947417 C49.3921171,44.5104666 49.2976696,45.9428607 49.3448933,45.9743419 C49.5180471,46.163229 49.9745434,46.0215637 50.0532497,45.7854547 Z M20.4596938,42.7632606 C20.5541413,42.6215952 21.1523089,37.5846049 21.8921478,30.705965 C22.1125254,28.6282065 22.3329029,26.629151 22.3801267,26.2513768 L22.4588329,25.5745312 L22.0653016,25.8263807 C21.7662178,26.0310084 21.656029,26.2356362 21.656029,26.5976698 C21.656029,27.5893273 20.9791551,34.1216741 20.4596938,38.1197851 C20.16061,40.3864308 19.9244912,42.3854863 19.9244912,42.5743734 C19.9244912,42.9049259 20.3022813,43.0308507 20.4596938,42.7632606 Z M111.302466,36.183692 L111.192277,29.6041234 L110.798746,29.0217214 C109.901494,27.6995115 109.948718,27.4476619 109.995942,34.8142603 L110.027424,41.5669754 L110.609851,42.165118 C110.924676,42.4799299 111.239501,42.74752 111.302466,42.74752 C111.349689,42.74752 111.349689,39.7882882 111.302466,36.183692 Z M96.7418066,25.7476777 C96.8205128,16.6023922 96.8047716,15.8940655 96.5529115,15.6107348 C96.395499,15.4375882 96.2538277,15.3274041 96.2066039,15.3746258 C96.0964152,15.5005506 95.9390026,35.443884 96.0649327,35.5540682 C96.1278977,35.6170306 96.2853102,35.6485118 96.4269815,35.6327712 C96.6316178,35.5855494 96.6788415,34.4679672 96.7418066,25.7476777 Z M45.3308738,32.0124344 C45.4410625,31.0365175 45.8345939,26.3615609 45.9920064,24.1578777 C46.0864539,22.6782618 46.0864539,22.63104 45.7401463,22.5208558 C45.5512513,22.4578934 45.3308738,22.473634 45.2679087,22.552337 C45.15772,22.6625212 44.8114124,26.1569332 44.3863986,31.5402166 L44.2762098,32.8309453 L44.7641886,32.8309453 C45.220685,32.8309453 45.2521675,32.7994641 45.3308738,32.0124344 Z M32.9582488,26.5032263 C33.0684376,26.3930421 33.1471438,25.9995272 33.1471438,25.6060124 C33.1471438,25.1967569 33.3360389,23.0717766 33.5406752,20.8680934 C34.1388428,14.8394456 34.1860665,14.0209347 33.9184652,14.1783406 C33.5091926,14.4144496 33.1471438,14.7764832 33.2258501,14.8709268 C33.2573326,14.9338892 33.1943676,15.7209189 33.0684376,16.6181328 C32.9582488,17.5310873 32.8165775,19.0107032 32.7536125,19.9236577 C32.6906475,20.8366122 32.5489762,22.5051152 32.4230462,23.6226974 C32.1239624,26.3773015 32.1397036,26.6921134 32.4860112,26.6921134 C32.6434237,26.6921134 32.84806,26.6134104 32.9582488,26.5032263 Z M40.4038615,15.9098061 C40.4510853,15.563513 40.5455328,14.2727842 40.6084978,13.0450178 C40.7186866,10.6839286 40.6714628,10.5107821 40.0260715,10.9987405 C39.8371764,11.1404059 39.7112464,11.7385485 39.5223513,13.5329763 C39.191785,16.7755388 39.1760438,16.649614 39.7899527,16.5866516 C40.246449,16.5394298 40.309414,16.4764675 40.4038615,15.9098061 Z"
          id="Shape"
        >
        </path>
        <path
          d="M34.7842342,74.1657469 C33.1471438,73.4574202 33.0212138,71.2379963 34.5638566,70.4509666 C35.6814856,69.8843052 36.8148558,70.1518953 37.3972822,71.1278121 C38.4991699,72.9222399 36.704667,74.9999984 34.7842342,74.1657469 Z"
          id="Path"
        >
        </path>
        <path
          d="M45.4568038,72.6546498 C43.9456435,71.7259547 43.9456435,69.4907903 45.4568038,68.5620952 C46.9522228,67.6648813 48.888397,68.8454259 48.888397,70.6398537 C48.888397,72.3713191 46.9049991,73.5361231 45.4568038,72.6546498 Z"
          id="Path"
        >
        </path>
      </g>
    </g>
  );
}

export function ModuleCard({ url, doc }: { url: string; doc: string }) {
  const lines = wrap(
    htmlEntities.encode(removeMarkdown(doc)).split("\n\n").map((l) =>
      l.replaceAll("\n", " ")
    )
      .join(
        "\n\n",
      ),
  ).split("\n").slice(0, 7);
  const parsed = parseURL(url);
  let title;
  let subtitle;
  let link;
  if (parsed) {
    link = url;
    title = parsed.module;
    if (parsed.org) {
      if (title) {
        subtitle = `${parsed.org}/${parsed.package}`;
      } else {
        title = `${parsed.org}/${parsed.package}`;
      }
    } else if (parsed.package) {
      if (title) {
        subtitle = parsed.package;
      } else {
        title = parsed.package;
      }
    } else if (parsed.registry === "deno.land/std") {
      subtitle = "std";
    }
  } else {
    switch (url) {
      case "deno//stable/":
        title = "Deno CLI Stable APIs";
        break;
      case "deno//unstable/":
        title = "Deno Unstable Stable APIs";
        break;
      case "deno//esnext/":
        title = "ESNext APIs";
        break;
      case "deno//dom/":
        title = "DOM APIs";
        break;
      default:
        title = url.replace(/^\S+:\/{2}/, "");
    }
  }
  return (
    <svg
      width="1200px"
      height="630px"
      viewBox="0 0 1200 630"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
    >
      <title>module card</title>
      <g
        id="module-card"
        stroke="none"
        stroke-width="1"
        fill="none"
        fill-rule="evenodd"
      >
        <rect fill="#FFFFFF" x="0" y="0" width="1200" height="630"></rect>
        <DenoLogo />
        <text
          id="title"
          font-family="Inter-Bold, Inter, sans-serif"
          font-size="88"
          font-weight="bold"
          fill="#111827"
        >
          <tspan x="60" y="131">{title}</tspan>
        </text>
        <text
          id="subtitle"
          font-family="Inter-Bold, Inter, sans-serif"
          font-size="68"
          font-weight="bold"
          fill="#111827"
        >
          <tspan x="60" y="197">{subtitle}</tspan>
        </text>
        <text
          id="https://deno.land/x/"
          font-family="Inter-Regular, Inter, sans-serif"
          font-size="48"
          font-weight="normal"
          fill="#111827"
        >
          <tspan x="60" y="260">{link}</tspan>
        </text>
        {doc.length
          ? (
            <line
              x1="59.5"
              y1="291.5"
              x2="1149.5"
              y2="291.5"
              id="Line"
              stroke="#111827"
              stroke-width="5"
              stroke-linecap="square"
            >
            </line>
          )
          : undefined}
        <text
          id="module_description"
          fill-rule="nonzero"
          font-family="JetBrains Mono, monospace"
          font-size="32"
          font-weight="normal"
          fill="#111827"
        >
          <tspan x="60" y="346">{lines[0]}</tspan>
          <tspan x="60" y="385">{lines[1]}</tspan>
          <tspan x="60" y="424">{lines[2]}</tspan>
          <tspan x="60" y="463">{lines[3]}</tspan>
          <tspan x="60" y="502">{lines[4]}</tspan>
          <tspan x="60" y="541">{lines[5]}</tspan>
          <tspan x="60" y="580">{lines[6]}</tspan>
        </text>
      </g>
    </svg>
  );
}

export function SymbolCard(
  { url, item, doc }: { url: string; item: string; doc: string },
) {
  const lines = wrap(
    htmlEntities.encode(removeMarkdown(doc)).split("\n\n").map((l) =>
      l.replaceAll("\n", " ")
    ).join(
      "\n\n",
    ),
  ).split("\n").slice(0, 7);
  let link = url;
  switch (url) {
    case "deno//stable/":
      link = "Deno CLI Stable APIs";
      break;
    case "deno//unstable/":
      link = "Deno Unstable Stable APIs";
      break;
    case "deno//esnext/":
      link = "ESNext APIs";
      break;
    case "deno//dom/":
      link = "DOM APIs";
      break;
  }
  return (
    <svg
      width="1200px"
      height="630px"
      viewBox="0 0 1200 630"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
    >
      <title>sybol card</title>
      <g
        id="symbol-card"
        stroke="none"
        stroke-width="1"
        fill="none"
        fill-rule="evenodd"
      >
        <rect fill="#FFFFFF" x="0" y="0" width="1200" height="630"></rect>
        <DenoLogo />
        <text
          id="item"
          font-family="Inter-Bold, Inter"
          font-size="88"
          font-weight="bold"
          fill="#111827"
        >
          <tspan x="60" y="131">{item}</tspan>
        </text>
        <text
          id="link"
          font-family="Inter-Regular, Inter"
          font-size="48"
          font-weight="normal"
          fill="#111827"
        >
          <tspan x="60" y="199">{link}</tspan>
        </text>
        {doc.length
          ? (
            <line
              x1="59.5"
              y1="236.5"
              x2="1149.5"
              y2="236.5"
              id="Line"
              stroke="#111827"
              stroke-width="5"
              stroke-linecap="square"
            >
            </line>
          )
          : undefined}
        <text
          id="symbol-description"
          font-family="JetBrains Mono, monospace"
          font-size="32"
          font-weight="normal"
          fill="#111827"
        >
          <tspan x="60" y="311">{lines[0]}</tspan>
          <tspan x="60" y="350">{lines[1]}</tspan>
          <tspan x="60" y="389">{lines[2]}</tspan>
          <tspan x="60" y="428">{lines[3]}</tspan>
          <tspan x="60" y="467">{lines[4]}</tspan>
          <tspan x="60" y="506">{lines[5]}</tspan>
          <tspan x="60" y="545">{lines[6]}</tspan>
          <tspan x="60" y="584">{lines[7]}</tspan>
        </text>
      </g>
    </svg>
  );
}
